import { OnInit, ElementRef, EventEmitter, OnChanges } from '@angular/core';
import { ControlValueAccessor, FormGroup } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class ToggleButtonComponent implements ControlValueAccessor, OnInit, OnChanges {
    buttonInput: ElementRef;
    name: string;
    iconRight: string;
    iconLeft: string;
    disabled: boolean;
    checked: boolean;
    toggleButton: string;
    form: FormGroup;
    id: string;
    tabIndex: number;
    updateEvent: EventEmitter<ToggleButtonComponent>;
    primary: boolean;
    secondary: boolean;
    small: boolean;
    private onChange;
    private onTouched;
    onKeydown(event: KeyboardEvent): void;
    constructor();
    writeValue(value: boolean): void;
    registerOnChange(fn: (_: boolean) => void): void;
    registerOnTouched(fn: () => void): void;
    ngOnInit(): void;
    ngOnChanges(): void;
    checkProperties(): void;
    generateIfNecessary(): void;
    change(): void;
    focus(): void;
    stopPropagation(event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ToggleButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ToggleButtonComponent, "bmw-toggle-button", never, { "disabled": "disabled"; "checked": "checked"; "tabIndex": "tabIndex"; "iconRight": "iconRight"; "id": "id"; "name": "name"; "form": "form"; "iconLeft": "iconLeft"; "toggleButton": "toggleButton"; }, { "updateEvent": "updateEvent"; }, never, ["*"]>;
}

//# sourceMappingURL=toggle-button.component.d.ts.map