import { NavigationService } from './navigation.service';
import { OnInit, QueryList, ElementRef, OnDestroy, NgZone } from '@angular/core';
import { NavigationMenuSubmenuComponent } from './navigation-menu-submenu.component';
import { NavigationMenuSubmenuItemComponent } from './navigation-menu-submenu-item.component';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class NavigationMenuItemComponent implements OnInit, OnDestroy {
    private _el;
    private _navService;
    private _zone;
    private _selected;
    private _disabled;
    private _destroyed$;
    offsetTop: number;
    subMenuItemSelected: boolean;
    selectedEvent: Subject<NavigationMenuItemComponent>;
    expandSubmenu: boolean;
    popUp: boolean;
    menuIsOpened: boolean;
    submenu: NavigationMenuSubmenuComponent;
    submenuItems: QueryList<NavigationMenuSubmenuItemComponent>;
    icon: string;
    label: string;
    set disabled(value: boolean);
    get disabled(): boolean;
    set selected(value: boolean);
    get selected(): boolean;
    id: string;
    labelWrapper: ElementRef;
    onMouseOver(): void;
    onMouseOut(event: MouseEvent): void;
    onKeydown(event: KeyboardEvent): void;
    constructor(_el: ElementRef, _navService: NavigationService, _zone: NgZone);
    ngOnInit(): void;
    updatePopupPosition(): void;
    ngOnDestroy(): void;
    click($event: any): void;
    toggleSubmenuPopup(): void;
    setPreviousSubmenuItemAsFocused(target?: EventTarget): void;
    setNextSubmenuItemAsFocused(target?: EventTarget): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NavigationMenuItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NavigationMenuItemComponent, "bmw-navigation-menu-item", never, { "disabled": "disabled"; "selected": "selected"; "id": "id"; "menuIsOpened": "menuIsOpened"; "icon": "icon"; "label": "label"; }, {}, ["submenu", "submenuItems"], ["*"]>;
}

//# sourceMappingURL=navigation-menu-item.component.d.ts.map