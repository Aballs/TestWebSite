{"version":3,"file":"navigation-menu-item.component.d.ts","sources":["navigation-menu-item.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NavigationService } from './navigation.service';\nimport { OnInit, QueryList, ElementRef, OnDestroy, NgZone } from '@angular/core';\nimport { NavigationMenuSubmenuComponent } from './navigation-menu-submenu.component';\nimport { NavigationMenuSubmenuItemComponent } from './navigation-menu-submenu-item.component';\nimport { Subject } from 'rxjs';\nexport declare class NavigationMenuItemComponent implements OnInit, OnDestroy {\n    private _el;\n    private _navService;\n    private _zone;\n    private _selected;\n    private _disabled;\n    private _destroyed$;\n    offsetTop: number;\n    subMenuItemSelected: boolean;\n    selectedEvent: Subject<NavigationMenuItemComponent>;\n    expandSubmenu: boolean;\n    popUp: boolean;\n    menuIsOpened: boolean;\n    submenu: NavigationMenuSubmenuComponent;\n    submenuItems: QueryList<NavigationMenuSubmenuItemComponent>;\n    icon: string;\n    label: string;\n    set disabled(value: boolean);\n    get disabled(): boolean;\n    set selected(value: boolean);\n    get selected(): boolean;\n    id: string;\n    labelWrapper: ElementRef;\n    onMouseOver(): void;\n    onMouseOut(event: MouseEvent): void;\n    onKeydown(event: KeyboardEvent): void;\n    constructor(_el: ElementRef, _navService: NavigationService, _zone: NgZone);\n    ngOnInit(): void;\n    updatePopupPosition(): void;\n    ngOnDestroy(): void;\n    click($event: any): void;\n    toggleSubmenuPopup(): void;\n    setPreviousSubmenuItemAsFocused(target?: EventTarget): void;\n    setNextSubmenuItemAsFocused(target?: EventTarget): void;\n}\n"]}