import { OnInit, ElementRef, AfterContentInit } from '@angular/core';
import { ContextMenuComponent, ContextMenuEventProviderDirective } from '../context-menu/context-menu.module';
import * as ɵngcc0 from '@angular/core';
export declare class MenuButtonComponent implements OnInit, AfterContentInit {
    private elemRef;
    childContextMenu: ContextMenuComponent;
    eventProvider: ContextMenuEventProviderDirective;
    disabled: boolean;
    closeOnFocusout: boolean;
    closeOnClickOutside: boolean;
    styleVariant: 'default' | 'primary' | 'secondary';
    sizeVariant: 'normal' | 'small';
    preserveState: boolean;
    id: string;
    outsideCallback: any;
    constructor(elemRef: ElementRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    toggle(state?: boolean): void;
    onClickOutside({ target }: {
        target: any;
    }): void;
    get opened(): boolean;
    click(event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<MenuButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<MenuButtonComponent, "bmw-menu-button", never, { "styleVariant": "styleVariant"; "sizeVariant": "sizeVariant"; "preserveState": "preserveState"; "id": "id"; "closeOnClickOutside": "closeOnClickOutside"; "disabled": "disabled"; "closeOnFocusout": "closeOnFocusout"; }, {}, ["childContextMenu", "eventProvider"], ["label", "bmw-context-menu"]>;
}

//# sourceMappingURL=menu-button.component.d.ts.map