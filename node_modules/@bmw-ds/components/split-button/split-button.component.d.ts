import { ViewContainerRef, AfterViewInit, EventEmitter, ElementRef } from '@angular/core';
import { ContextMenuComponent, ContextMenuItemComponent } from '../context-menu/context-menu.component';
import * as ɵngcc0 from '@angular/core';
export declare class SplitButtonComponent implements AfterViewInit {
    private elemRef;
    childContextMenu: ContextMenuComponent;
    contextMenu: ViewContainerRef;
    iconClass: string;
    disabledButton: boolean;
    disabledMenu: boolean;
    itemSelected: EventEmitter<ContextMenuItemComponent>;
    clickEvent: EventEmitter<SplitButtonComponent>;
    onKeydown(event: KeyboardEvent): void;
    clickout(event: KeyboardEvent): void;
    constructor(elemRef: ElementRef);
    ngAfterViewInit(): void;
    assignClick(menuItem: ContextMenuItemComponent): void;
    arrowButtonClick(event: MouseEvent): void;
    buttonClick(): void;
    toggle(state?: boolean): void;
    get focus(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SplitButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<SplitButtonComponent, "bmw-split-button", never, { "iconClass": "iconClass"; "disabledButton": "disabledButton"; "disabledMenu": "disabledMenu"; }, { "itemSelected": "itemSelected"; "clickEvent": "clickEvent"; }, ["childContextMenu"], ["label", "bmw-context-menu"]>;
}

//# sourceMappingURL=split-button.component.d.ts.map