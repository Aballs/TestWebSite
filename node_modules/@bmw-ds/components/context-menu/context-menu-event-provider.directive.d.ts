import { EventEmitter } from '@angular/core';
import { ContextMenuEventProviderService } from './context-menu-event-provider.service';
/**
 The eventProvider directive can be used on a bmw-context-menu in order to be notified of item selection.
 Adding this directive allows you to subscribe to the "itemSelected" event, which is emitted whenever any
 of the underlying bmw-context-menu-items is selected - regardless whether they are direct children
 or nested in bmw-context-menu components further down the tree. In most cases, you will be interested in all selectable items, so put this on your top-level
 bmw-context-menu.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ContextMenuEventProviderDirective {
    private cmService;
    itemSelected: EventEmitter<SelectedItemInfo>;
    constructor(cmService: ContextMenuEventProviderService);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ContextMenuEventProviderDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<ContextMenuEventProviderDirective, "bmw-context-menu[eventProvider]", never, {}, { "itemSelected": "itemSelected"; }, never>;
}
export interface SelectedItemInfo {
    itemId: string;
    leafItem: boolean;
}

//# sourceMappingURL=context-menu-event-provider.directive.d.ts.map