{"version":3,"file":"checkbox.component.d.ts","sources":["checkbox.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnChanges } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nexport declare const enum CheckboxState {\n    checked = \"checked\",\n    indeterminate = \"indeterminate\",\n    unchecked = \"unchecked\"\n}\nexport declare class CheckboxComponent implements ControlValueAccessor, AfterViewInit, OnChanges {\n    private control;\n    elementRef: ElementRef;\n    input: ElementRef;\n    name: string;\n    disabled: boolean;\n    checked: CheckboxState;\n    required: boolean;\n    id: string;\n    updateEvent: EventEmitter<CheckboxComponent>;\n    invalid: boolean;\n    private isDirty;\n    private isTouched;\n    private onChange;\n    private onTouched;\n    onKeyDown(event: KeyboardEvent): void;\n    constructor(control: NgControl, elementRef: ElementRef);\n    writeValue(value: CheckboxState | boolean): void;\n    registerOnChange(fn: (_: boolean) => void): void;\n    registerOnTouched(fn: () => void): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(): void;\n    checkProperties(): void;\n    readState(): void;\n    private updateCheckState;\n    stopPropagation(event: MouseEvent): void;\n    setDisabledState(disabled: boolean): void;\n}\n"]}