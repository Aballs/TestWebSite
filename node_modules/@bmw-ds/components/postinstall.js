const https = require('https');

let package;
try {
  package = require(process.env.INIT_CWD + '/package.json');
} catch (e) {
  console.log('Design System Tracking: Seems like some error occurred while retrieving package.json');
  console.log('Design System Tracking: Will silently stop');
  process.exit();
}

const installedLib = require('./package.json'); // installed lib can be one of [@bmw-ds/components]
const trackingDocumentationURL = 'https://designsystem.bmwgroup.net/about/usage-tracking';
const libKeyToSend = {
  '@bmw-ds/components': 'componentsVersion'
}[installedLib.name]; // let's map the installed lib name to our api key
const libVersion = installedLib.version;

const dependencies = {
  ...package.dependencies,
  ...package.devDependencies
};

const data = {
  projectName: package.name,
  authorName: package.author && package.author.name ? package.author.name : '',
  authorEmail: package.author && package.author.email ? package.author.email : '',
  angularVersion: dependencies['@angular/core'] || '',
  dependencies
};

data[libKeyToSend] = libVersion;

const jsonData = JSON.stringify(data);

var options = {
  hostname: 'ux.bmwgroup.net',
  path: '/designsystem/tracking/new_entry.php',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': jsonData.length
  }
};

const req = https.request(options, res => {
  res.on('data', d => {
    process.stdout.write(d);
  });
});

const threeSeconds = 3000;
setTimeout(() => {
  req.abort();
}, threeSeconds);

req.on('error', error => {
  console.warn(
    'Design System - tracking error. See more about the design system tracking on ' + trackingDocumentationURL
  );
});

req.on('response', r => {
  if (r.statusCode == 200) {
    console.warn('Successfully submitted application install to the Design System tracking');
  } else {
    console.warn(
      'Design System - tracking error. See more about the design system tracking on ' + trackingDocumentationURL
    );
  }
});

req.write(jsonData);
req.end();
