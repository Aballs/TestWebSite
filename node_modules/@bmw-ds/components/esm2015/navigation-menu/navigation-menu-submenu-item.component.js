import { __decorate } from "tslib";
import { takeUntil } from 'rxjs/operators';
import { NavigationService } from './navigation.service';
import { Component, HostBinding, Input, HostListener, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
let NavigationMenuSubmenuItemComponent = class NavigationMenuSubmenuItemComponent {
    constructor(_navService) {
        this._navService = _navService;
        this._selected = false;
        this._disabled = false;
        this._destroyed$ = new Subject();
        this.selectedEvent = new Subject();
    }
    set disabled(value) {
        this._disabled = value;
        if (value)
            this._selected = false;
    }
    get disabled() {
        return this._disabled;
    }
    set selected(value) {
        if (this.disabled || value === this._selected)
            return;
        this._selected = value;
    }
    get selected() {
        return this._selected;
    }
    onKeydown(event) {
        const key = event.code || event.keyCode;
        if (['Enter', 13, 'Space', 32].includes(key) && event.target === this.submenuItemWrapper.nativeElement) {
            this.clickEvent(null);
            event.preventDefault();
            event.stopPropagation();
        }
    }
    ngOnInit() {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        this._navService.selectionChange.pipe(takeUntil(this._destroyed$)).subscribe(item => {
            if (item !== this) {
                this.selected = false;
            }
        });
    }
    ngOnDestroy() {
        this._destroyed$.next();
        this._destroyed$.complete();
    }
    clickEvent($event) {
        $event === null || $event === void 0 ? void 0 : $event.stopPropagation();
        if (this.disabled || this.selected)
            return;
        this._navService.selectItem(this);
        this._selected = true;
        this.selectedEvent.next(this);
    }
};
NavigationMenuSubmenuItemComponent.ctorParameters = () => [
    { type: NavigationService }
];
__decorate([
    HostBinding('attr.id'),
    Input()
], NavigationMenuSubmenuItemComponent.prototype, "id", void 0);
__decorate([
    Input()
], NavigationMenuSubmenuItemComponent.prototype, "disabled", null);
__decorate([
    Input()
], NavigationMenuSubmenuItemComponent.prototype, "selected", null);
__decorate([
    ViewChild('submenuItemWrapper')
], NavigationMenuSubmenuItemComponent.prototype, "submenuItemWrapper", void 0);
__decorate([
    HostListener('keydown', ['$event'])
], NavigationMenuSubmenuItemComponent.prototype, "onKeydown", null);
NavigationMenuSubmenuItemComponent = __decorate([
    Component({
        selector: 'bmw-navigation-menu-submenu-item',
        template: "<div\n  #submenuItemWrapper\n  class=\"submenu-item-wrapper\"\n  [ngClass]=\"{ selected: selected, disabled: disabled }\"\n  (click)=\"clickEvent($event)\"\n  [tabindex]=\"-1\"\n>\n  <ng-content></ng-content>\n</div>\n",
        styles: [".submenu-item-wrapper{display:block;padding:calc(var(--navigation-menu__icon__padding) * 2) 0;cursor:pointer;background-color:var(--navigation-menu__default__submenu__background-color);padding-left:calc(var(--navigation-menu__icon__padding) * 2 + var(--navigation-menu__icon__font-size) + var(--navigation-menu__item__padding-left) + var(--navigation-menu__submenu-item__padding-left));overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.submenu-item-wrapper.selected{background-color:var(--navigation-menu__selected__background-color);color:var(--navigation-menu__selected__color)}.submenu-item-wrapper.selected:hover{background-color:var(--navigation-menu__selected__background-color)}.submenu-item-wrapper:hover{background-color:var(--navigation-menu__hover__background-color)}.submenu-item-wrapper:focus{background-color:var(--navigation-menu__hover__background-color);outline:solid 1px;outline-color:var(--color-bmw-highlight);outline-offset:-1px}.submenu-item-wrapper:focus.selected{background-color:var(--navigation-menu__selected__background-color);outline:solid 1px;outline-color:var(--color-bmw-basic5);outline-offset:-3px}.submenu-item-wrapper.disabled{cursor:no-drop;opacity:.5}"]
    })
], NavigationMenuSubmenuItemComponent);
export { NavigationMenuSubmenuItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1tZW51LXN1Ym1lbnUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYm13LWRzL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJuYXZpZ2F0aW9uLW1lbnUvbmF2aWdhdGlvbi1tZW51LXN1Ym1lbnUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFVLFdBQVcsRUFBRSxLQUFLLEVBQWEsWUFBWSxFQUFFLFNBQVMsRUFBYyxNQUFNLGVBQWUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBTy9CLElBQWEsa0NBQWtDLEdBQS9DLE1BQWEsa0NBQWtDO0lBeUM3QyxZQUFvQixXQUE4QjtRQUE5QixnQkFBVyxHQUFYLFdBQVcsQ0FBbUI7UUF4QzFDLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDbEIsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixnQkFBVyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUEwQnBDLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQXNDLENBQUM7SUFZYixDQUFDO0lBaEN0RCxJQUFJLFFBQVEsQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksS0FBSztZQUFFLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3BDLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksUUFBUSxDQUFDLEtBQWM7UUFDekIsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsU0FBUztZQUFFLE9BQU87UUFFdEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBUUQsU0FBUyxDQUFDLEtBQW9CO1FBQzVCLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUV4QyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLGtCQUFrQixDQUFDLGFBQWEsRUFBRTtZQUN0RyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBR0QsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2lCQUNwQixRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQjtRQUVELElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2xGLElBQUksSUFBSSxLQUFLLElBQUksRUFBRTtnQkFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7YUFDdkI7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBTTtRQUNmLE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRSxlQUFlLEdBQUc7UUFDMUIsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTztRQUMzQyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0YsQ0FBQTs7WUE1QmtDLGlCQUFpQjs7QUFsQ2xEO0lBRkMsV0FBVyxDQUFDLFNBQVMsQ0FBQztJQUN0QixLQUFLLEVBQUU7OERBQ0c7QUFFWDtJQURDLEtBQUssRUFBRTtrRUFJUDtBQUtEO0lBREMsS0FBSyxFQUFFO2tFQUtQO0FBTUQ7SUFEQyxTQUFTLENBQUMsb0JBQW9CLENBQUM7OEVBQ0Q7QUFLL0I7SUFEQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7bUVBU25DO0FBeENVLGtDQUFrQztJQUw5QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsa0NBQWtDO1FBQzVDLHNPQUE0RDs7S0FFN0QsQ0FBQztHQUNXLGtDQUFrQyxDQXFFOUM7U0FyRVksa0NBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkRlc3Ryb3ksIEhvc3RMaXN0ZW5lciwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Jtdy1uYXZpZ2F0aW9uLW1lbnUtc3VibWVudS1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25hdmlnYXRpb24tbWVudS1zdWJtZW51LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9uYXZpZ2F0aW9uLW1lbnUtc3VibWVudS1pdGVtLmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgTmF2aWdhdGlvbk1lbnVTdWJtZW51SXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBfc2VsZWN0ZWQgPSBmYWxzZTtcbiAgcHJpdmF0ZSBfZGlzYWJsZWQgPSBmYWxzZTtcbiAgcHJpdmF0ZSBfZGVzdHJveWVkJCA9IG5ldyBTdWJqZWN0KCk7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmlkJylcbiAgQElucHV0KClcbiAgaWQ6IHN0cmluZztcbiAgQElucHV0KClcbiAgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fZGlzYWJsZWQgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUpIHRoaXMuX3NlbGVjdGVkID0gZmFsc2U7XG4gIH1cbiAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuICBASW5wdXQoKVxuICBzZXQgc2VsZWN0ZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCB2YWx1ZSA9PT0gdGhpcy5fc2VsZWN0ZWQpIHJldHVybjtcblxuICAgIHRoaXMuX3NlbGVjdGVkID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcbiAgfVxuXG4gIEBWaWV3Q2hpbGQoJ3N1Ym1lbnVJdGVtV3JhcHBlcicpXG4gIHN1Ym1lbnVJdGVtV3JhcHBlcjogRWxlbWVudFJlZjtcblxuICBzZWxlY3RlZEV2ZW50ID0gbmV3IFN1YmplY3Q8TmF2aWdhdGlvbk1lbnVTdWJtZW51SXRlbUNvbXBvbmVudD4oKTtcblxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcbiAgb25LZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgY29uc3Qga2V5ID0gZXZlbnQuY29kZSB8fCBldmVudC5rZXlDb2RlO1xuXG4gICAgaWYgKFsnRW50ZXInLCAxMywgJ1NwYWNlJywgMzJdLmluY2x1ZGVzKGtleSkgJiYgZXZlbnQudGFyZ2V0ID09PSB0aGlzLnN1Ym1lbnVJdGVtV3JhcHBlci5uYXRpdmVFbGVtZW50KSB7XG4gICAgICB0aGlzLmNsaWNrRXZlbnQobnVsbCk7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuICB9XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX25hdlNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5pZCkge1xuICAgICAgdGhpcy5pZCA9IE1hdGgucmFuZG9tKClcbiAgICAgICAgLnRvU3RyaW5nKDM2KVxuICAgICAgICAuc3Vic3RyaW5nKDIpO1xuICAgIH1cblxuICAgIHRoaXMuX25hdlNlcnZpY2Uuc2VsZWN0aW9uQ2hhbmdlLnBpcGUodGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3llZCQpKS5zdWJzY3JpYmUoaXRlbSA9PiB7XG4gICAgICBpZiAoaXRlbSAhPT0gdGhpcykge1xuICAgICAgICB0aGlzLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLl9kZXN0cm95ZWQkLm5leHQoKTtcbiAgICB0aGlzLl9kZXN0cm95ZWQkLmNvbXBsZXRlKCk7XG4gIH1cblxuICBjbGlja0V2ZW50KCRldmVudCkge1xuICAgICRldmVudD8uc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQgfHwgdGhpcy5zZWxlY3RlZCkgcmV0dXJuO1xuICAgIHRoaXMuX25hdlNlcnZpY2Uuc2VsZWN0SXRlbSh0aGlzKTtcbiAgICB0aGlzLl9zZWxlY3RlZCA9IHRydWU7XG4gICAgdGhpcy5zZWxlY3RlZEV2ZW50Lm5leHQodGhpcyk7XG4gIH1cbn1cbiJdfQ==