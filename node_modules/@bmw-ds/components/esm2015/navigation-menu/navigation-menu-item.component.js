import { __decorate } from "tslib";
import { takeUntil } from 'rxjs/operators';
import { NavigationService } from './navigation.service';
import { Component, OnInit, Input, QueryList, ElementRef, HostBinding, HostListener, ContentChild, ContentChildren, OnDestroy, NgZone, ViewChild } from '@angular/core';
import { NavigationMenuSubmenuComponent } from './navigation-menu-submenu.component';
import { NavigationMenuSubmenuItemComponent } from './navigation-menu-submenu-item.component';
import { Subject } from 'rxjs';
let NavigationMenuItemComponent = class NavigationMenuItemComponent {
    constructor(_el, _navService, _zone) {
        this._el = _el;
        this._navService = _navService;
        this._zone = _zone;
        this._selected = false;
        this._disabled = false;
        this._destroyed$ = new Subject();
        this.offsetTop = 0;
        this.subMenuItemSelected = false;
        this.selectedEvent = new Subject();
        this.expandSubmenu = false;
        this.popUp = false;
    }
    set disabled(value) {
        this._disabled = value;
        if (value)
            this._selected = false;
    }
    get disabled() {
        return this._disabled;
    }
    set selected(value) {
        if (this.disabled || value === this._selected)
            return;
        this._selected = value;
    }
    get selected() {
        return this._selected;
    }
    onMouseOver() {
        if (this.disabled)
            return;
        this.popUp = true;
        this.updatePopupPosition();
    }
    onMouseOut(event) {
        if (event && this._el.nativeElement.contains(event.relatedTarget)) {
            return;
        }
        this.popUp = false;
    }
    onKeydown(event) {
        const key = event.code || event.keyCode;
        switch (key) {
            case 'ArrowDown':
            case 40:
                if (this.popUp) {
                    this.setNextSubmenuItemAsFocused(event.target);
                    event.stopPropagation();
                    event.preventDefault();
                }
                break;
            case 'ArrowUp':
            case 38:
                if (this.popUp) {
                    this.setPreviousSubmenuItemAsFocused(event.target);
                    event.stopPropagation();
                    event.preventDefault();
                }
                break;
            case 'ArrowLeft':
            case 37:
                if (this.popUp) {
                    this.labelWrapper.nativeElement.focus();
                    this.onMouseOver();
                    event.preventDefault();
                    event.stopPropagation();
                }
                break;
        }
    }
    ngOnInit() {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        this._navService.selectionChange.pipe(takeUntil(this._destroyed$)).subscribe(item => {
            if (item !== this) {
                this.selected = false;
            }
            this.subMenuItemSelected = !!this.submenuItems.find(i => i === item);
        });
        this._navService.menuOpened.pipe(takeUntil(this._destroyed$)).subscribe(open => {
            this.menuIsOpened = open;
        });
    }
    updatePopupPosition() {
        const rect = this._el.nativeElement.getBoundingClientRect();
        const parentRect = this._el.nativeElement.offsetParent.getBoundingClientRect();
        this.offsetTop = rect.top - parentRect.top;
    }
    ngOnDestroy() {
        this._destroyed$.next();
        this._destroyed$.complete();
    }
    click($event) {
        $event === null || $event === void 0 ? void 0 : $event.stopPropagation();
        if (this.disabled || this.selected)
            return;
        if (this.submenu) {
            this.expandSubmenu = !this.expandSubmenu;
        }
        else {
            this._selected = true;
            this.selectedEvent.next(this);
            this._navService.selectItem(this);
        }
    }
    toggleSubmenuPopup() {
        if (this.popUp) {
            this.onMouseOut(null);
        }
        else {
            this.onMouseOver();
        }
    }
    setPreviousSubmenuItemAsFocused(target) {
        if (this.submenuItems.length > 0 && this.submenuItems.some(item => !item.disabled)) {
            const submenuItemsArray = this.submenuItems.toArray();
            let focusedItemIndex = -1;
            if (target) {
                focusedItemIndex = submenuItemsArray.findIndex(item => item.submenuItemWrapper.nativeElement === target);
            }
            else {
                focusedItemIndex = submenuItemsArray.findIndex(item => item.submenuItemWrapper.nativeElement === document.activeElement);
            }
            if (focusedItemIndex !== -1 && focusedItemIndex !== 0) {
                focusedItemIndex = focusedItemIndex - 1;
            }
            else {
                focusedItemIndex = submenuItemsArray.length - 1;
            }
            if (submenuItemsArray[focusedItemIndex].disabled) {
                this.setNextSubmenuItemAsFocused(submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement);
            }
            else {
                submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement.focus();
            }
        }
    }
    setNextSubmenuItemAsFocused(target) {
        if (this.submenuItems.length > 0 && this.submenuItems.some(item => !item.disabled)) {
            const submenuItemsArray = this.submenuItems.toArray();
            let focusedItemIndex = -1;
            if (target) {
                focusedItemIndex = submenuItemsArray.findIndex(item => item.submenuItemWrapper.nativeElement === target);
            }
            else {
                focusedItemIndex = submenuItemsArray.findIndex(item => item.submenuItemWrapper.nativeElement === document.activeElement);
            }
            if (focusedItemIndex !== -1 && focusedItemIndex !== submenuItemsArray.length - 1) {
                focusedItemIndex = focusedItemIndex + 1;
            }
            else {
                focusedItemIndex = 0;
            }
            if (submenuItemsArray[focusedItemIndex].disabled) {
                this.setNextSubmenuItemAsFocused(submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement);
            }
            else {
                submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement.focus();
            }
        }
    }
};
NavigationMenuItemComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: NavigationService },
    { type: NgZone }
];
__decorate([
    Input()
], NavigationMenuItemComponent.prototype, "menuIsOpened", void 0);
__decorate([
    ContentChild(NavigationMenuSubmenuComponent)
], NavigationMenuItemComponent.prototype, "submenu", void 0);
__decorate([
    ContentChildren(NavigationMenuSubmenuItemComponent, { descendants: true })
], NavigationMenuItemComponent.prototype, "submenuItems", void 0);
__decorate([
    Input()
], NavigationMenuItemComponent.prototype, "icon", void 0);
__decorate([
    Input()
], NavigationMenuItemComponent.prototype, "label", void 0);
__decorate([
    Input()
], NavigationMenuItemComponent.prototype, "disabled", null);
__decorate([
    Input()
], NavigationMenuItemComponent.prototype, "selected", null);
__decorate([
    HostBinding('attr.id'),
    Input()
], NavigationMenuItemComponent.prototype, "id", void 0);
__decorate([
    ViewChild('labelWrapper')
], NavigationMenuItemComponent.prototype, "labelWrapper", void 0);
__decorate([
    HostListener('mouseover', [])
], NavigationMenuItemComponent.prototype, "onMouseOver", null);
__decorate([
    HostListener('mouseout', ['$event'])
], NavigationMenuItemComponent.prototype, "onMouseOut", null);
__decorate([
    HostListener('keydown', ['$event'])
], NavigationMenuItemComponent.prototype, "onKeydown", null);
NavigationMenuItemComponent = __decorate([
    Component({
        selector: 'bmw-navigation-menu-item',
        template: "<div\n  class=\"navigation-menu-item-wrapper bmw-component-text\"\n  [ngClass]=\"{\n    hover: popUp,\n    disabled: disabled,\n    selected: !submenu && selected,\n    submenu: submenu,\n    'submenu-selected': subMenuItemSelected,\n    'menu-closed': !menuIsOpened\n  }\"\n  [attr.aria-disabled]=\"disabled\"\n  (click)=\"click($event)\"\n>\n  <div #labelWrapper class=\"label-wrapper\" [tabindex]=\"disabled ? -1 : 0\">\n    <div class=\"menu-item-label\">\n      <i class=\"menu-item-icon\" [ngClass]=\"icon\"> </i>\n      <div class=\"menu-item-label-text\">\n        <span>{{ label }}</span>\n        <i\n          class=\"chevron\"\n          [ngClass]=\"expandSubmenu ? 'iwp-icon-gen_nav_arrow_up' : 'iwp-icon-gen_nav_arrow_down'\"\n          *ngIf=\"submenu\"\n        ></i>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"submenu-wrapper\" *ngIf=\"menuIsOpened && expandSubmenu\">\n    <div class=\"submenu-outlet\">\n      <ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n    </div>\n  </div>\n\n  <div class=\"pop-up bmw-component-text\" *ngIf=\"!menuIsOpened && popUp\" [style.top.px]=\"offsetTop\">\n    <div class=\"item-label\" [class.has-submenu]=\"submenu\">\n      <span>{{ label }}</span>\n      <i class=\"chevron\" [ngClass]=\"'iwp-icon-gen_nav_arrow_up'\" *ngIf=\"submenu\"></i>\n    </div>\n    <div class=\"item-content\">\n      <ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #tempOutlet>\n  <ng-content></ng-content>\n</ng-template>\n",
        styles: ["::ng-deep .navigation-menu-wrapper .menu-item-label-text{display:none}::ng-deep .navigation-menu-wrapper.opened .menu-item-label-text{display:flex}::ng-deep .navigation-menu-wrapper.opened .pop-up{display:none}::ng-deep .pop-up .navigation-submenu-wrapper .submenu-item-wrapper,::ng-deep .pop-up .navigation-submenu-wrapper .submenu-label{padding-left:calc(1rem + 1rem);padding-left:calc(var(--navigation-menu__item__padding-left) + var(--navigation-menu__popup__submenu-item__padding-left))}::ng-deep .pop-up .navigation-submenu-wrapper.second-level .submenu-item-wrapper{padding-left:calc(var(--navigation-menu__item__padding-left) + var(--navigation-menu__popup__submenu-item__padding-left) + var(--navigation-menu__submenu-item__second-level__padding-left))}::ng-deep .pop-up .navigation-submenu-wrapper:focus{background-color:var(--navigation-menu__hover__background-color);outline:0}.menu-item-label{display:flex;align-items:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;padding:var(--navigation-menu__icon__padding)}.selected .menu-item-label{color:var(--navigation-menu__selected__color)}.menu-item-label .menu-item-label-text{padding-left:var(--navigation-menu__item__padding-left);align-items:center;justify-content:space-between;overflow:hidden;flex:1 0 0%;text-overflow:ellipsis}.menu-item-label .menu-item-label-text span{overflow:hidden;text-overflow:ellipsis}.disabled .menu-item-label{opacity:.5;cursor:no-drop}.disabled .menu-item-label *{cursor:no-drop}.navigation-menu-item-wrapper{color:var(--navigation-menu__default__color)}.navigation-menu-item-wrapper .menu-item-icon{font-size:var(--navigation-menu__icon__font-size);cursor:pointer}.navigation-menu-item-wrapper .label-wrapper:focus,.navigation-menu-item-wrapper .label-wrapper:hover,.navigation-menu-item-wrapper:not(.selected) .item-label:hover{background-color:var(--navigation-menu__hover__background-color);outline:0}.navigation-menu-item-wrapper .label-wrapper{padding:var(--navigation-menu__icon__padding)}.navigation-menu-item-wrapper.menu-closed.submenu-selected .label-wrapper{background-color:var(--navigation-menu__selected__background-color);color:var(--navigation-menu__selected__color)}.navigation-menu-item-wrapper.menu-closed.submenu-selected .label-wrapper:focus{outline:solid 1px;outline-color:var(--color-bmw-basic5);outline-offset:-3px}.navigation-menu-item-wrapper.selected{color:var(--navigation-menu__selected__color)}.navigation-menu-item-wrapper.selected .label-wrapper{background-color:var(--navigation-menu__selected__background-color)}.navigation-menu-item-wrapper.selected .pop-up{color:var(--navigation-menu__selected__color);background-color:var(--navigation-menu__selected__background-color)}.navigation-menu-item-wrapper.disabled .label-wrapper{opacity:.5}.opened-label{display:none}.pop-up{position:absolute;top:0;z-index:var(--navigation-menu__z-index___popup);left:100%;width:calc(var(--navigation-menu__opened__width) - var(--navigation-menu__icon__font-size) - 2 * var(--navigation-menu__icon__padding));border:1px solid var(--navigation-menu__default__border-right-color);background-color:var(--navigation-menu__item__background-color)}.pop-up .item-label{display:flex;align-items:center;justify-content:space-between;line-height:var(--navigation-menu__icon__font-size);padding:calc(var(--navigation-menu__icon__padding) * 2 - 1px);padding-left:var(--navigation-menu__item__padding-left);cursor:pointer}.pop-up .item-label.has-submenu,.pop-up .item-label.has-submenu .chevron{cursor:default}.pop-up .item-label span{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.pop-up .item-content{background-color:var(--navigation-menu__default__submenu__background-color)}:host{display:block}"]
    })
], NavigationMenuItemComponent);
export { NavigationMenuItemComponent };
//# sourceMappingURL=data:application/json;base64,