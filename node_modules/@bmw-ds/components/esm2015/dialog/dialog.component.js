import { __decorate } from "tslib";
import { Component, OnInit, Input, Output, EventEmitter, HostListener, HostBinding, OnChanges, SimpleChanges, ElementRef, AfterViewInit } from '@angular/core';
const SUPPORTED_TYPES = ['info', 'success', 'warning', 'error'];
let DialogComponent = class DialogComponent {
    constructor(elemRef) {
        this.elemRef = elemRef;
        this._type = '';
        this.allowToOverflow = false;
        this.primaryClick = new EventEmitter();
        this.secondaryClick = new EventEmitter();
        this.closeClick = new EventEmitter();
        this.nonModalNodes = [];
    }
    get type() {
        return this._type;
    }
    set type(value) {
        if (SUPPORTED_TYPES.indexOf(value) === -1) {
            console.warn(`Invalid or unsupported type: ${value}`);
            this._type = SUPPORTED_TYPES[0];
        }
        else {
            this._type = value;
        }
    }
    onEscKeydownHandler(event) {
        if (this.show) {
            this.show = false;
            this.closeClick.emit();
        }
        event.stopPropagation();
    }
    ngOnInit() {
        if (!this.type)
            this.type = SUPPORTED_TYPES[0];
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
    }
    ngOnChanges(changes) {
        var _a, _b, _c;
        if (((_a = changes.show) === null || _a === void 0 ? void 0 : _a.currentValue) === true) {
            this.invokingElement = document.activeElement;
            this.applyFocusTrapInDialog();
        }
        else if (((_b = changes.show) === null || _b === void 0 ? void 0 : _b.currentValue) === false) {
            this.removeFocusTrapFromDialog();
            (_c = this.invokingElement) === null || _c === void 0 ? void 0 : _c.focus();
        }
    }
    ngAfterViewInit() {
        if (this.show) {
            this.applyFocusTrapInDialog();
        }
    }
    closeButtonClick() {
        if (!this.closeButton)
            return;
        this.closeClick.emit();
    }
    primaryButtonClick() {
        this.primaryClick.emit();
    }
    secondaryButtonClick() {
        this.secondaryClick.emit();
    }
    applyFocusTrapInDialog() {
        this.nonModalNodes = [];
        this.getAllTabbableElements().forEach(element => {
            if (!this.elemRef.nativeElement.contains(element)) {
                const prevTabIndex = element.getAttribute('tabindex');
                element.setAttribute('tabindex', '-1');
                element.style.outline = 'none';
                this.nonModalNodes.push({ element: element, prevTabIndex: prevTabIndex });
            }
        });
    }
    removeFocusTrapFromDialog() {
        for (let i = 0, l = this.nonModalNodes.length; i < l; i++) {
            const node = this.nonModalNodes[i];
            if (node.prevTabIndex) {
                node.element.setAttribute('tabindex', node.prevTabIndex);
                node.prevTabIndex = null;
            }
            else {
                node.element.removeAttribute('tabindex');
            }
            node.element.style.outline = null;
        }
    }
    getAllTabbableElements() {
        return document.querySelectorAll(`body
        a[href]:not([tabindex="-1"]),
        area[href]:not([tabindex="-1"]),
        input:not([tabindex="-1"]),
        select:not([tabindex="-1"]),
        textarea:not([tabindex="-1"]),
        button:not([tabindex="-1"]),
        iframe:not([tabindex="-1"]),
        object:not([tabindex="-1"]),
        embed:not([tabindex="-1"]),
        [tabindex]:not([tabindex="-1"]),
        [contenteditable]:not([tabindex="-1"])`);
    }
};
DialogComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input()
], DialogComponent.prototype, "allowToOverflow", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "type", null);
__decorate([
    HostBinding('attr.id'),
    Input()
], DialogComponent.prototype, "id", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "show", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "title", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "primaryLabel", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "secondaryLabel", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "primaryDisabled", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "secondaryDisabled", void 0);
__decorate([
    Input()
], DialogComponent.prototype, "closeButton", void 0);
__decorate([
    Output()
], DialogComponent.prototype, "primaryClick", void 0);
__decorate([
    Output()
], DialogComponent.prototype, "secondaryClick", void 0);
__decorate([
    Output()
], DialogComponent.prototype, "closeClick", void 0);
__decorate([
    HostListener('body:keydown.esc', ['$event'])
], DialogComponent.prototype, "onEscKeydownHandler", null);
DialogComponent = __decorate([
    Component({
        selector: 'bmw-dialog',
        template: "<div class=\"wrapper\" *ngIf=\"show\">\n  <div class=\"dialog\" [ngClass]=\"type\" role=\"dialog\" aria-modal=\"true\" [attr.aria-label]=\"title\">\n    <div class=\"title bmw-component-headline-text\" [class.closable]=\"closeButton\">{{ title }}</div>\n    <div class=\"dialog-close-icon\">\n      <bmw-icon-button\n        class=\"dialog-close-icon\"\n        *ngIf=\"closeButton\"\n        iconClass=\"iwp-icon-gen_close\"\n        (clickEvent)=\"closeButtonClick()\"\n      ></bmw-icon-button>\n    </div>\n    <div class=\"separator\"></div>\n    <div class=\"content bmw-component-text\" [ngClass]=\"{ 'content-allow-to-overflow': allowToOverflow }\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"buttons\">\n      <bmw-button\n        *ngIf=\"primaryLabel\"\n        [disabled]=\"primaryDisabled\"\n        (clickEvent)=\"primaryButtonClick()\"\n        button=\"primary\"\n        >{{ primaryLabel }}</bmw-button\n      >\n      <bmw-button\n        *ngIf=\"secondaryLabel\"\n        [disabled]=\"secondaryDisabled\"\n        (clickEvent)=\"secondaryButtonClick()\"\n        button=\"secondary\"\n        >{{ secondaryLabel }}</bmw-button\n      >\n    </div>\n  </div>\n</div>\n",
        styles: [":host .wrapper{position:fixed;height:100%;width:100%;left:0;top:0;overflow:hidden;z-index:var(--dialog__default__backdrop-z-index);background-color:var(--dialog__default__backdrop-background-color)}:host .wrapper .dialog{position:relative;display:flex;flex-flow:column;min-width:0;min-height:0;max-height:80vh;top:50%;left:50%;transform:translate(-50%,-50%);box-sizing:border-box;max-width:var(--dialog__default__width);padding:var(--spacing-bmw-xs) var(--spacing-bmw-s);background-color:var(--dialog__default__backdrop-box-background-color);box-shadow:0 0 var(--dialog__default__backdrop-box-shadow-width) 0 var(--dialog__default__backdrop-box-shadow-color)}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){:host .wrapper .dialog{max-height:auto;height:300px}}:host .wrapper ::ng-deep .dialog-close-icon bmw-icon-button{position:absolute;top:var(--spacing-bmw-xxs);right:var(--spacing-bmw-xxs)}:host .wrapper ::ng-deep .dialog-close-icon bmw-icon-button button{font-size:var(--dialog__icon-button__font-size)!important;line-height:var(--dialog__title__line-height)!important}.title{padding-bottom:var(--spacing-bmw-xxs);line-height:var(--dialog__title__line-height)!important;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex-shrink:0}.title.closable{padding-right:calc(var(--icon-button__medium__font-size) + 2 * var(--icon-button__medium__padding) + var(--spacing-bmw-xxs) - var(--spacing-bmw-s))}.separator{height:var(--spacing-bmw-xxs);margin:0 calc(0px - var(--spacing-bmw-s));margin-bottom:var(--spacing-bmw-s);flex-shrink:0}.info .separator{background-color:var(--dialog__default__separator__background-color)}.success .separator{background-color:var(--dialog__success__separator__background-color)}.warning .separator{background-color:var(--dialog__warning__separator__background-color)}.error .separator{background-color:var(--dialog__error__separator__background-color)}.content{margin-bottom:var(--spacing-bmw-s);overflow:auto;min-width:0;min-height:0}.content-allow-to-overflow{overflow:visible}.buttons{flex-shrink:0;display:flex;flex-flow:row-reverse;flex-wrap:wrap-reverse}.buttons bmw-button{margin-left:var(--spacing-bmw-xs)}"]
    })
], DialogComponent);
export { DialogComponent };
//# sourceMappingURL=data:application/json;base64,