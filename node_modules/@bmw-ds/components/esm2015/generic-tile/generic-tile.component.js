import { __decorate } from "tslib";
import { Component, OnInit, Input, Output, EventEmitter, OnChanges, HostBinding, HostListener, ElementRef } from '@angular/core';
let GenericTileComponent = class GenericTileComponent {
    constructor(_el) {
        this._el = _el;
        this.selected = false;
        this.clickEvent = new EventEmitter();
        this.clickable = false;
        this.selectable = false;
        this.disabled = false;
    }
    onKeydown(event) {
        const key = event.code || event.keyCode;
        switch (key) {
            case 'Enter':
            case 'NumpadEnter':
            case 13:
            case 'Space':
            case 32:
                if (event.target === this._el.nativeElement.querySelector('.generic-tile')) {
                    this.click();
                    event.preventDefault();
                }
                break;
        }
    }
    ngOnInit() {
        this.checkProperties();
    }
    ngOnChanges() {
        this.checkProperties();
    }
    checkProperties() {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        this.clickable = this.interaction === 'clickable';
        this.selectable = this.interaction === 'selectable';
    }
    click() {
        if (this.disabled || (!this.clickable && !this.selectable))
            return;
        if (this.selectable) {
            this.selected = !this.selected;
        }
        this.clickEvent.emit({ interaction: this.interaction, selected: this.selected, id: this.id });
    }
};
GenericTileComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input()
], GenericTileComponent.prototype, "interaction", void 0);
__decorate([
    Input()
], GenericTileComponent.prototype, "selected", void 0);
__decorate([
    HostBinding('attr.id'),
    Input()
], GenericTileComponent.prototype, "id", void 0);
__decorate([
    Output()
], GenericTileComponent.prototype, "clickEvent", void 0);
__decorate([
    Input()
], GenericTileComponent.prototype, "disabled", void 0);
__decorate([
    HostListener('keydown', ['$event'])
], GenericTileComponent.prototype, "onKeydown", null);
GenericTileComponent = __decorate([
    Component({
        selector: 'bmw-generic-tile',
        template: "<div\n  class=\"generic-tile\"\n  (click)=\"click()\"\n  [class.clickable]=\"clickable || selectable\"\n  [class.selected]=\"selected && selectable\"\n  [class.disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  [tabindex]=\"disabled || (!clickable && !selectable) ? -1 : 0\"\n>\n  <ng-content></ng-content>\n</div>\n",
        styles: [":host .generic-tile{box-sizing:border-box;width:100%;padding:var(--generic-tile__default__padding);border:1px solid var(--generic-tile__default__border-color);position:relative;background-color:var(--generic-tile__default__background-color)}:host .generic-tile.clickable{cursor:pointer}:host .generic-tile.clickable.disabled{cursor:no-drop}:host .generic-tile.clickable:hover:not(.disabled){border-color:var(--generic-tile__hover__border-color)}:host .generic-tile.selected{border-color:var(--generic-tile__hover__border-color)}:host .generic-tile.selected::after{content:'\\e9d8';font-family:iwp;font-size:var(--generic-tile__icon__font-size);position:absolute;top:var(--generic-tile__default__padding);right:var(--generic-tile__default__padding);line-height:1;color:var(--generic-tile__selected__icon__color);padding-left:var(--generic-tile__icon__padding);padding-bottom:var(--generic-tile__icon__padding);background-color:var(--generic-tile__default__background-color)}:host .generic-tile.disabled{opacity:var(--generic-tile__disabled__opacity);border-color:var(--generic-tile__disabled__border-color)}:host .generic-tile:focus{outline:0}:host .generic-tile:focus.clickable:not(.disabled){outline:solid 1px!important;outline-color:var(--color-bmw-highlight)!important;outline-offset:-1px}"]
    })
], GenericTileComponent);
export { GenericTileComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy10aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImdlbmVyaWMtdGlsZS9nZW5lcmljLXRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixTQUFTLEVBQ1QsV0FBVyxFQUNYLFlBQVksRUFDWixVQUFVLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFPdkIsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUFnQy9CLFlBQW9CLEdBQWU7UUFBZixRQUFHLEdBQUgsR0FBRyxDQUFZO1FBNUJuQyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBS2pCLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3JDLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDbEIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUVWLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFtQlksQ0FBQztJQWhCdkMsU0FBUyxDQUFDLEtBQW9CO1FBQzVCLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUN4QyxRQUFRLEdBQUcsRUFBRTtZQUNYLEtBQUssT0FBTyxDQUFDO1lBQ2IsS0FBSyxhQUFhLENBQUM7WUFDbkIsS0FBSyxFQUFFLENBQUM7WUFDUixLQUFLLE9BQU8sQ0FBQztZQUNiLEtBQUssRUFBRTtnQkFDTCxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxFQUFFO29CQUMxRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ2IsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO2lCQUN4QjtnQkFDRCxNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBSUQsUUFBUTtRQUNOLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2lCQUNwQixRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQjtRQUVELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsS0FBSyxXQUFXLENBQUM7UUFDbEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxLQUFLLFlBQVksQ0FBQztJQUN0RCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFBRSxPQUFPO1FBRW5FLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNoQztRQUVELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7Q0FDRixDQUFBOztZQTlCMEIsVUFBVTs7QUE5Qm5DO0lBREMsS0FBSyxFQUFFO3lEQUNZO0FBRXBCO0lBREMsS0FBSyxFQUFFO3NEQUNTO0FBR2pCO0lBRkMsV0FBVyxDQUFDLFNBQVMsQ0FBQztJQUN0QixLQUFLLEVBQUU7Z0RBQ0c7QUFFWDtJQURDLE1BQU0sRUFBRTt3REFDNEI7QUFJNUI7SUFBUixLQUFLLEVBQUU7c0RBQWtCO0FBRzFCO0lBREMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3FEQWVuQztBQTlCVSxvQkFBb0I7SUFMaEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGtCQUFrQjtRQUM1QixvVkFBNEM7O0tBRTdDLENBQUM7R0FDVyxvQkFBb0IsQ0E4RGhDO1NBOURZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG4gIE9uQ2hhbmdlcyxcbiAgSG9zdEJpbmRpbmcsXG4gIEhvc3RMaXN0ZW5lcixcbiAgRWxlbWVudFJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYm13LWdlbmVyaWMtdGlsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9nZW5lcmljLXRpbGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9nZW5lcmljLXRpbGUuY29tcG9uZW50Lmxlc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBHZW5lcmljVGlsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KClcbiAgaW50ZXJhY3Rpb246IHN0cmluZztcbiAgQElucHV0KClcbiAgc2VsZWN0ZWQgPSBmYWxzZTtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmlkJylcbiAgQElucHV0KClcbiAgaWQ6IHN0cmluZztcbiAgQE91dHB1dCgpXG4gIGNsaWNrRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgY2xpY2thYmxlID0gZmFsc2U7XG4gIHNlbGVjdGFibGUgPSBmYWxzZTtcblxuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24nLCBbJyRldmVudCddKVxuICBvbktleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5jb2RlIHx8IGV2ZW50LmtleUNvZGU7XG4gICAgc3dpdGNoIChrZXkpIHtcbiAgICAgIGNhc2UgJ0VudGVyJzpcbiAgICAgIGNhc2UgJ051bXBhZEVudGVyJzpcbiAgICAgIGNhc2UgMTM6XG4gICAgICBjYXNlICdTcGFjZSc6XG4gICAgICBjYXNlIDMyOlxuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nZW5lcmljLXRpbGUnKSkge1xuICAgICAgICAgIHRoaXMuY2xpY2soKTtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuY2hlY2tQcm9wZXJ0aWVzKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLmNoZWNrUHJvcGVydGllcygpO1xuICB9XG5cbiAgY2hlY2tQcm9wZXJ0aWVzKCkge1xuICAgIGlmICghdGhpcy5pZCkge1xuICAgICAgdGhpcy5pZCA9IE1hdGgucmFuZG9tKClcbiAgICAgICAgLnRvU3RyaW5nKDM2KVxuICAgICAgICAuc3Vic3RyaW5nKDIpO1xuICAgIH1cblxuICAgIHRoaXMuY2xpY2thYmxlID0gdGhpcy5pbnRlcmFjdGlvbiA9PT0gJ2NsaWNrYWJsZSc7XG4gICAgdGhpcy5zZWxlY3RhYmxlID0gdGhpcy5pbnRlcmFjdGlvbiA9PT0gJ3NlbGVjdGFibGUnO1xuICB9XG5cbiAgY2xpY2soKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQgfHwgKCF0aGlzLmNsaWNrYWJsZSAmJiAhdGhpcy5zZWxlY3RhYmxlKSkgcmV0dXJuO1xuXG4gICAgaWYgKHRoaXMuc2VsZWN0YWJsZSkge1xuICAgICAgdGhpcy5zZWxlY3RlZCA9ICF0aGlzLnNlbGVjdGVkO1xuICAgIH1cblxuICAgIHRoaXMuY2xpY2tFdmVudC5lbWl0KHsgaW50ZXJhY3Rpb246IHRoaXMuaW50ZXJhY3Rpb24sIHNlbGVjdGVkOiB0aGlzLnNlbGVjdGVkLCBpZDogdGhpcy5pZCB9KTtcbiAgfVxufVxuIl19