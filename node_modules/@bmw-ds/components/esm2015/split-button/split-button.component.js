import { __decorate } from "tslib";
import { Component, Input, ViewContainerRef, ViewChild, ContentChild, HostBinding, AfterViewInit, EventEmitter, Output, HostListener, ElementRef } from '@angular/core';
import { ContextMenuComponent } from '../context-menu/context-menu.component';
let SplitButtonComponent = class SplitButtonComponent {
    constructor(elemRef) {
        this.elemRef = elemRef;
        this.itemSelected = new EventEmitter();
        this.clickEvent = new EventEmitter();
    }
    onKeydown(event) {
        const key = event.code || event.keyCode;
        switch (key) {
            case 'Enter':
            case 'NumpadEnter':
            case 27:
            case 'Space':
            case 32:
                if (event.target === this.elemRef.nativeElement.querySelector('.button-arrow') ||
                    event.target === this.elemRef.nativeElement.querySelector('.icon-arrow')) {
                    this.toggle();
                    event.preventDefault();
                    event.stopPropagation();
                }
                break;
        }
    }
    clickout(event) {
        if (!this.contextMenu.element.nativeElement.contains(event.target)) {
            this.toggle(false);
        }
        event.stopPropagation();
    }
    ngAfterViewInit() {
        this.childContextMenu.childContextMenuItems.forEach(item => {
            this.assignClick(item);
        });
    }
    // Recursevly shake all menu items and emit item onClick and close menu
    assignClick(menuItem) {
        if (menuItem.subMenu) {
            menuItem.subMenu.childContextMenuItems.forEach((item) => {
                this.assignClick(item);
            });
            return;
        }
        menuItem.selected.subscribe((item) => {
            this.itemSelected.emit(item);
            this.toggle(false);
        });
    }
    arrowButtonClick(event) {
        this.toggle();
        event === null || event === void 0 ? void 0 : event.stopPropagation();
    }
    buttonClick() {
        if (this.disabledButton)
            return;
        this.clickEvent.emit(this);
    }
    toggle(state) {
        if (!this.childContextMenu || !this.childContextMenu.toggle)
            return;
        this.childContextMenu.unselectSubs();
        this.childContextMenu.toggle(state);
    }
    get focus() {
        return this.childContextMenu ? this.childContextMenu.opened : false;
    }
};
SplitButtonComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    ContentChild(ContextMenuComponent)
], SplitButtonComponent.prototype, "childContextMenu", void 0);
__decorate([
    ViewChild('contextMenu', { read: ViewContainerRef })
], SplitButtonComponent.prototype, "contextMenu", void 0);
__decorate([
    Input()
], SplitButtonComponent.prototype, "iconClass", void 0);
__decorate([
    Input()
], SplitButtonComponent.prototype, "disabledButton", void 0);
__decorate([
    Input()
], SplitButtonComponent.prototype, "disabledMenu", void 0);
__decorate([
    Output()
], SplitButtonComponent.prototype, "itemSelected", void 0);
__decorate([
    Output()
], SplitButtonComponent.prototype, "clickEvent", void 0);
__decorate([
    HostListener('keydown', ['$event'])
], SplitButtonComponent.prototype, "onKeydown", null);
__decorate([
    HostListener('document:click', ['$event'])
], SplitButtonComponent.prototype, "clickout", null);
__decorate([
    HostBinding('class.opened')
], SplitButtonComponent.prototype, "focus", null);
SplitButtonComponent = __decorate([
    Component({
        selector: 'bmw-split-button',
        template: "<div #contextMenu>\n  <div class=\"icon-wrapper\" *ngIf=\"iconClass\">\n    <bmw-icon-button\n      [iconClass]=\"iconClass\"\n      (clickEvent)=\"buttonClick()\"\n      [disabled]=\"disabledButton\"\n      [tabIndex]=\"disabledButton ? -1 : 0\"\n    ></bmw-icon-button>\n    <div class=\"icon-arrow\" (click)=\"toggle()\" [class.disabled]=\"disabledMenu\" [tabindex]=\"disabledMenu ? -1 : 0\"></div>\n  </div>\n  <div class=\"button-wrapper\" *ngIf=\"!iconClass\">\n    <bmw-button\n      (click)=\"buttonClick()\"\n      [attr.disabled]=\"disabledButton\"\n      [disabled]=\"disabledButton\"\n      [tabIndex]=\"disabledButton ? -1 : 0\"\n    >\n      <ng-content select=\"label\"></ng-content>\n    </bmw-button>\n    <div\n      class=\"button-arrow\"\n      (click)=\"arrowButtonClick($event)\"\n      [class.disabled]=\"disabledMenu\"\n      [tabindex]=\"disabledMenu ? -1 : 0\"\n    ></div>\n  </div>\n  <ng-content select=\"bmw-context-menu\"></ng-content>\n</div>\n",
        styles: ["div:focus{outline:0}div.button-wrapper,div.icon-wrapper{position:relative;display:inline-block;vertical-align:middle;max-width:100%}div.button-wrapper div.button-arrow,div.button-wrapper div.icon-arrow,div.icon-wrapper div.button-arrow,div.icon-wrapper div.icon-arrow{cursor:pointer}div.button-wrapper div.button-arrow.disabled,div.button-wrapper div.icon-arrow.disabled,div.icon-wrapper div.button-arrow.disabled,div.icon-wrapper div.icon-arrow.disabled{cursor:no-drop}div.button-wrapper div.button-arrow.disabled:active::after,div.button-wrapper div.icon-arrow.disabled:active::after,div.icon-wrapper div.button-arrow.disabled:active::after,div.icon-wrapper div.icon-arrow.disabled:active::after{pointer-events:none}div.button-wrapper div.button-arrow.disabled::after,div.button-wrapper div.icon-arrow.disabled::after,div.icon-wrapper div.button-arrow.disabled::after,div.icon-wrapper div.icon-arrow.disabled::after{opacity:.7}div.button-wrapper div.button-arrow::after,div.button-wrapper div.icon-arrow::after,div.icon-wrapper div.button-arrow::after,div.icon-wrapper div.icon-arrow::after{content:'\\e92f';font-family:iwp;position:absolute;right:0;color:var(--split-button__default__color)}div.button-wrapper div.button-arrow:hover::after,div.button-wrapper div.icon-arrow:hover::after,div.icon-wrapper div.button-arrow:hover::after,div.icon-wrapper div.icon-arrow:hover::after{background-color:var(--split-button__selected__background-color)}div.button-wrapper div.button-arrow:focus::after,div.button-wrapper div.icon-arrow:focus::after,div.icon-wrapper div.button-arrow:focus::after,div.icon-wrapper div.icon-arrow:focus::after{outline:solid 1px;outline-color:var(--color-bmw-highlight);outline-offset:-1px}div.icon-wrapper{padding-right:var(--split-button__icon__padding-right)}div.icon-wrapper div.icon-arrow::after{width:var(--split-button__icon__arrow__font-size);height:var(--split-button__icon__arrow__font-size);padding:var(--split-button__icon-inner__padding-vertical) var(--split-button__icon-inner__padding-horizontal);font-size:var(--split-button__icon__arrow__font-size);top:0}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){div.icon-wrapper div.icon-arrow::after{padding:10px 3px}}div.icon-wrapper div.icon-arrow.disabled:hover::after{background-color:initial}div.button-wrapper{padding-right:var(--split-button__button__padding-right)}div.button-wrapper div.button-arrow::after{width:var(--split-button__icon__arrow__width);height:var(--split-button__icon__arrow__height);padding:var(--split-button__button_inner__padding);font-size:var(--split-button__button__arrow__font-size);line-height:var(--split-button__icon__arrow__height);text-align:center;top:0;background-color:var(--split-button__default__background-color);border:solid 1px var(--split-button__default__border-color)}div.button-wrapper div.button-arrow.disabled:hover::after{background-color:var(--split-button__default__background-color)}:host{max-width:calc(100% - var(--split-button__button__padding-right));display:inline-block;position:relative}:host ::ng-deep label{cursor:inherit;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host ::ng-deep .bmw-context-menu{min-width:100%}:host.opened div.button-wrapper div.button-arrow::after,:host.opened div.button-wrapper div.icon-arrow::after,:host.opened div.icon-wrapper div.button-arrow::after,:host.opened div.icon-wrapper div.icon-arrow::after{content:'\\e932';background-color:var(--split-button__selected__background-color)}"]
    })
], SplitButtonComponent);
export { SplitButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNwbGl0LWJ1dHRvbi9zcGxpdC1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFDTCxnQkFBZ0IsRUFDaEIsU0FBUyxFQUNULFlBQVksRUFDWixXQUFXLEVBQ1gsYUFBYSxFQUNiLFlBQVksRUFDWixNQUFNLEVBQ04sWUFBWSxFQUNaLFVBQVUsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsb0JBQW9CLEVBQTRCLE1BQU0sd0NBQXdDLENBQUM7QUFPeEcsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUE2Qy9CLFlBQW9CLE9BQW1CO1FBQW5CLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFqQ3ZDLGlCQUFZLEdBQTJDLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRXBHLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBd0IsQ0FBQztJQStCWixDQUFDO0lBNUIzQyxTQUFTLENBQUMsS0FBb0I7UUFDNUIsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDO1FBQ3hDLFFBQVEsR0FBRyxFQUFFO1lBQ1gsS0FBSyxPQUFPLENBQUM7WUFDYixLQUFLLGFBQWEsQ0FBQztZQUNuQixLQUFLLEVBQUUsQ0FBQztZQUNSLEtBQUssT0FBTyxDQUFDO1lBQ2IsS0FBSyxFQUFFO2dCQUNMLElBQ0UsS0FBSyxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO29CQUMxRSxLQUFLLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsRUFDeEU7b0JBQ0EsSUFBSSxD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QVcsQ0FBQyxjQUFjLENBQUM7aURBRzNCO0FBdkZVLG9CQUFvQjtJQUxoQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLDQ5QkFBNEM7O0tBRTdDLENBQUM7R0FDVyxvQkFBb0IsQ0F3RmhDO1NBeEZZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIFZpZXdDb250YWluZXJSZWYsXG4gIFZpZXdDaGlsZCxcbiAgQ29udGVudENoaWxkLFxuICBIb3N0QmluZGluZyxcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgRXZlbnRFbWl0dGVyLFxuICBPdXRwdXQsXG4gIEhvc3RMaXN0ZW5lcixcbiAgRWxlbWVudFJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRleHRNZW51Q29tcG9uZW50LCBDb250ZXh0TWVudUl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9jb250ZXh0LW1lbnUvY29udGV4dC1tZW51LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Jtdy1zcGxpdC1idXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vc3BsaXQtYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3BsaXQtYnV0dG9uLmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgU3BsaXRCdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQENvbnRlbnRDaGlsZChDb250ZXh0TWVudUNvbXBvbmVudClcbiAgY2hpbGRDb250ZXh0TWVudTogQ29udGV4dE1lbnVDb21wb25lbnQ7XG4gIEBWaWV3Q2hpbGQoJ2NvbnRleHRNZW51JywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pXG4gIGNvbnRleHRNZW51OiBWaWV3Q29udGFpbmVyUmVmO1xuICBASW5wdXQoKVxuICBpY29uQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGlzYWJsZWRCdXR0b246IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIGRpc2FibGVkTWVudTogYm9vbGVhbjtcbiAgQE91dHB1dCgpXG4gIGl0ZW1TZWxlY3RlZDogRXZlbnRFbWl0dGVyPENvbnRleHRNZW51SXRlbUNvbXBvbmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyPENvbnRleHRNZW51SXRlbUNvbXBvbmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIGNsaWNrRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyPFNwbGl0QnV0dG9uQ29tcG9uZW50PigpO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24nLCBbJyRldmVudCddKVxuICBvbktleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5jb2RlIHx8IGV2ZW50LmtleUNvZGU7XG4gICAgc3dpdGNoIChrZXkpIHtcbiAgICAgIGNhc2UgJ0VudGVyJzpcbiAgICAgIGNhc2UgJ051bXBhZEVudGVyJzpcbiAgICAgIGNhc2UgMjc6XG4gICAgICBjYXNlICdTcGFjZSc6XG4gICAgICBjYXNlIDMyOlxuICAgICAgICBpZiAoXG4gICAgICAgICAgZXZlbnQudGFyZ2V0ID09PSB0aGlzLmVsZW1SZWYubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uLWFycm93JykgfHxcbiAgICAgICAgICBldmVudC50YXJnZXQgPT09IHRoaXMuZWxlbVJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pY29uLWFycm93JylcbiAgICAgICAgKSB7XG4gICAgICAgICAgdGhpcy50b2dnbGUoKTtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmNsaWNrJywgWyckZXZlbnQnXSlcbiAgY2xpY2tvdXQoZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBpZiAoIXRoaXMuY29udGV4dE1lbnUuZWxlbWVudC5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgIHRoaXMudG9nZ2xlKGZhbHNlKTtcbiAgICB9XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1SZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuY2hpbGRDb250ZXh0TWVudS5jaGlsZENvbnRleHRNZW51SXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgIHRoaXMuYXNzaWduQ2xpY2soaXRlbSk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBSZWN1cnNldmx5IHNoYWtlIGFsbCBtZW51IGl0ZW1zIGFuZCBlbWl0IGl0ZW0gb25DbGljayBhbmQgY2xvc2UgbWVudVxuICBhc3NpZ25DbGljayhtZW51SXRlbTogQ29udGV4dE1lbnVJdGVtQ29tcG9uZW50KSB7XG4gICAgaWYgKG1lbnVJdGVtLnN1Yk1lbnUpIHtcbiAgICAgIG1lbnVJdGVtLnN1Yk1lbnUuY2hpbGRDb250ZXh0TWVudUl0ZW1zLmZvckVhY2goKGl0ZW06IENvbnRleHRNZW51SXRlbUNvbXBvbmVudCkgPT4ge1xuICAgICAgICB0aGlzLmFzc2lnbkNsaWNrKGl0ZW0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIG1lbnVJdGVtLnNlbGVjdGVkLnN1YnNjcmliZSgoaXRlbTogQ29udGV4dE1lbnVJdGVtQ29tcG9uZW50KSA9PiB7XG4gICAgICB0aGlzLml0ZW1TZWxlY3RlZC5lbWl0KGl0ZW0pO1xuICAgICAgdGhpcy50b2dnbGUoZmFsc2UpO1xuICAgIH0pO1xuICB9XG5cbiAgYXJyb3dCdXR0b25DbGljayhldmVudDogTW91c2VFdmVudCkge1xuICAgIHRoaXMudG9nZ2xlKCk7XG4gICAgZXZlbnQ/LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgYnV0dG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWRCdXR0b24pIHJldHVybjtcbiAgICB0aGlzLmNsaWNrRXZlbnQuZW1pdCh0aGlzKTtcbiAgfVxuXG4gIHRvZ2dsZShzdGF0ZT86IGJvb2xlYW4pIHtcbiAgICBpZiAoIXRoaXMuY2hpbGRDb250ZXh0TWVudSB8fCAhdGhpcy5jaGlsZENvbnRleHRNZW51LnRvZ2dsZSkgcmV0dXJuO1xuXG4gICAgdGhpcy5jaGlsZENvbnRleHRNZW51LnVuc2VsZWN0U3VicygpO1xuICAgIHRoaXMuY2hpbGRDb250ZXh0TWVudS50b2dnbGUoc3RhdGUpO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5vcGVuZWQnKVxuICBnZXQgZm9jdXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRDb250ZXh0TWVudSA/IHRoaXMuY2hpbGRDb250ZXh0TWVudS5vcGVuZWQgOiBmYWxzZTtcbiAgfVxufVxuIl19