import { __decorate } from "tslib";
import { Component, OnInit, Input, ElementRef, Output, EventEmitter, OnChanges } from '@angular/core';
let IconButtonComponent = class IconButtonComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.iconClass = '';
        this.disabled = false;
        this.clickEvent = new EventEmitter();
        this.small = false;
        this.supportedTypes = ['submit', 'reset', 'button'];
    }
    ngOnInit() { }
    ngOnChanges() {
        this.checkProperties();
    }
    checkProperties() {
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
        if (!this.ariaLabel) {
            this.ariaLabel = 'icon button with ' + this.iconClass;
        }
        if (this.button === 'small') {
            this.small = true;
        }
        if (this.type && !this.supportedTypes.includes(this.type)) {
            console.warn('Wrong button type!', this);
            this.type = 'button';
        }
        if (this.disabled) {
            this.elementRef.nativeElement.classList.add('disabled');
        }
        else {
            this.elementRef.nativeElement.classList.remove('disabled');
        }
    }
    click(event) {
        this.clickEvent.emit(this);
        event.stopPropagation();
    }
};
IconButtonComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input()
], IconButtonComponent.prototype, "iconClass", void 0);
__decorate([
    Input()
], IconButtonComponent.prototype, "button", void 0);
__decorate([
    Input()
], IconButtonComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input()
], IconButtonComponent.prototype, "disabled", void 0);
__decorate([
    Input()
], IconButtonComponent.prototype, "id", void 0);
__decorate([
    Input()
], IconButtonComponent.prototype, "type", void 0);
__decorate([
    Input()
], IconButtonComponent.prototype, "tabIndex", void 0);
__decorate([
    Output()
], IconButtonComponent.prototype, "clickEvent", void 0);
IconButtonComponent = __decorate([
    Component({
        selector: 'bmw-icon-button',
        template: "<button\n  [class.icon-button--small]=\"small\"\n  [disabled]=\"disabled\"\n  (click)=\"click($event)\"\n  [id]=\"id\"\n  [type]=\"type\"\n  [attr.aria-label]=\"ariaLabel\"\n  [tabindex]=\"disabled ? -1 : tabIndex\"\n>\n  <i *ngIf=\"iconClass\" [class]=\"iconClass\"></i>\n</button>\n",
        styles: ["button{height:var(--icon-button__medium__font-size);font-size:var(--icon-button__medium__font-size);padding:var(--icon-button__medium__padding);color:var(--icon-button__default__color);border:none;display:block;box-sizing:content-box;cursor:pointer;background-color:transparent}button i{width:var(--icon-button__medium__font-size);height:var(--icon-button__medium__font-size);display:inline-block}button.icon-button--small{height:var(--icon-button__small__font-size);font-size:var(--icon-button__small__font-size);padding:var(--icon-button__small__padding)}button.icon-button--small i{width:var(--icon-button__small__font-size);height:var(--icon-button__small__font-size)}button:hover{background-color:var(--icon-button__hover__background-color)}button:focus{outline:solid 1px;outline-color:var(--color-bmw-highlight)}button[disabled]{opacity:.5;pointer-events:none}:host{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}:host.disabled{cursor:no-drop;display:inline-block}"]
    })
], IconButtonComponent);
export { IconButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJtdy1kcy9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiaWNvbi1idXR0b24vaWNvbi1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT3RHLElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0lBb0I5QixZQUFtQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBbEJ6QyxjQUFTLEdBQUcsRUFBRSxDQUFDO1FBTWYsYUFBUSxHQUFHLEtBQUssQ0FBQztRQVFqQixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQXVCLENBQUM7UUFDckQsVUFBSyxHQUFHLEtBQUssQ0FBQztRQUNOLG1CQUFjLEdBQUcsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRVgsQ0FBQztJQUU3QyxRQUFRLEtBQUksQ0FBQztJQUViLFdBQVc7UUFDVCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDVixJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7aUJBQ3BCLFFBQVEsQ0FBQyxFQUFFLENBQUM7aUJBQ1osU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUN2RDtRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxPQUFPLEVBQUU7WUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7UUFDRCxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDekQsT0FBTyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQztTQUN0QjtRQUNELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ3pEO2FBQU07WUFDTCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzVEO0lBQ0gsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFpQjtRQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUIsQ0FBQztDQUNGLENBQUE7O1lBcENnQyxVQUFVOztBQWxCekM7SUFEQyxLQUFLLEVBQUU7c0RBQ087QUFFZjtJQURDLEtBQUssRUFBRTttREFDTztBQUVmO0lBREMsS0FBSyxFQUFFO3NEQUNVO0FBRWxCO0lBREMsS0FBSyxFQUFFO3FEQUNTO0FBRWpCO0lBREMsS0FBSyxFQUFFOytDQUNHO0FBRVg7SUFEQyxLQUFLLEVBQUU7aURBQ0s7QUFFYjtJQURDLEtBQUssRUFBRTtxREFDUztBQUVqQjtJQURDLE1BQU0sRUFBRTt1REFDNEM7QUFoQjFDLG1CQUFtQjtJQUwvQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLHdTQUEyQzs7S0FFNUMsQ0FBQztHQUNXLG1CQUFtQixDQXdEL0I7U0F4RFksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBFbGVtZW50UmVmLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Jtdy1pY29uLWJ1dHRvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9pY29uLWJ1dHRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2ljb24tYnV0dG9uLmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgSWNvbkJ1dHRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KClcbiAgaWNvbkNsYXNzID0gJyc7XG4gIEBJbnB1dCgpXG4gIGJ1dHRvbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQElucHV0KClcbiAgaWQ6IHN0cmluZztcbiAgQElucHV0KClcbiAgdHlwZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICB0YWJJbmRleDogbnVtYmVyO1xuICBAT3V0cHV0KClcbiAgY2xpY2tFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXI8SWNvbkJ1dHRvbkNvbXBvbmVudD4oKTtcbiAgc21hbGwgPSBmYWxzZTtcbiAgcHJpdmF0ZSBzdXBwb3J0ZWRUeXBlcyA9IFsnc3VibWl0JywgJ3Jlc2V0JywgJ2J1dHRvbiddO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLmNoZWNrUHJvcGVydGllcygpO1xuICB9XG5cbiAgY2hlY2tQcm9wZXJ0aWVzKCkge1xuICAgIGlmICghdGhpcy5pZClcbiAgICAgIHRoaXMuaWQgPSBNYXRoLnJhbmRvbSgpXG4gICAgICAgIC50b1N0cmluZygzNilcbiAgICAgICAgLnN1YnN0cmluZygyKTtcblxuICAgIGlmICghdGhpcy5hcmlhTGFiZWwpIHtcbiAgICAgIHRoaXMuYXJpYUxhYmVsID0gJ2ljb24gYnV0dG9uIHdpdGggJyArIHRoaXMuaWNvbkNsYXNzO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmJ1dHRvbiA9PT0gJ3NtYWxsJykge1xuICAgICAgdGhpcy5zbWFsbCA9IHRydWU7XG4gICAgfVxuICAgIGlmICh0aGlzLnR5cGUgJiYgIXRoaXMuc3VwcG9ydGVkVHlwZXMuaW5jbHVkZXModGhpcy50eXBlKSkge1xuICAgICAgY29uc29sZS53YXJuKCdXcm9uZyBidXR0b24gdHlwZSEnLCB0aGlzKTtcbiAgICAgIHRoaXMudHlwZSA9ICdidXR0b24nO1xuICAgIH1cbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZGlzYWJsZWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cblxuICBjbGljayhldmVudDogTW91c2VFdmVudCkge1xuICAgIHRoaXMuY2xpY2tFdmVudC5lbWl0KHRoaXMpO1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG59XG4iXX0=