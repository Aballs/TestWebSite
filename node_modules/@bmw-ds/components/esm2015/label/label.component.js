import { __decorate } from "tslib";
import { Component, Input } from '@angular/core';
let LabelComponent = class LabelComponent {
    constructor() {
        this.disabled = false;
    }
    set for(newFor) {
        this.inputId = newFor;
    }
    set inputId(id) {
        this._inputId = id;
    }
    get inputId() {
        return this._inputId;
    }
};
__decorate([
    Input()
], LabelComponent.prototype, "disabled", void 0);
__decorate([
    Input()
], LabelComponent.prototype, "required", void 0);
__decorate([
    Input()
], LabelComponent.prototype, "for", null);
LabelComponent = __decorate([
    Component({
        selector: 'bmw-label',
        template: "<label [for]=\"inputId\" [ngClass]=\"{ disabled: disabled, required: required }\" class=\"bmw-regular-text\">\n  <span *ngIf=\"required; else requiredBlock\">\n    <ng-container *ngTemplateOutlet=\"requiredBlock\"></ng-container>\n  </span>\n  <ng-template #requiredBlock><ng-content></ng-content></ng-template>\n</label>\n",
        styles: [":host{display:flex;align-items:center;max-height:var(--inputfield__default__height)}:host label{padding-top:var(--label__default__padding-vertical);padding-bottom:var(--label__default__padding-vertical);padding-left:var(--label__default__padding-left);width:100%;display:block;color:var(--label__default__color);line-height:var(--label__default__line-height);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host label.readonly{pointer-events:none}:host label.disabled{cursor:no-drop;color:var(--inputfield__disabled__color)}:host label.required{display:flex}:host label.required span{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host label.required:after{content:'\\00a0 *'}"]
    })
], LabelComponent);
export { LabelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJtdy1kcy9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGFiZWwvbGFiZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBYyxNQUFNLGVBQWUsQ0FBQztBQU83RCxJQUFhLGNBQWMsR0FBM0IsTUFBYSxjQUFjO0lBQTNCO1FBSUUsYUFBUSxHQUFHLEtBQUssQ0FBQztJQWdCbkIsQ0FBQztJQVZDLElBQUksR0FBRyxDQUFDLE1BQWM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksT0FBTyxDQUFDLEVBQVU7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUNELElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0NBQ0YsQ0FBQTtBQWhCQztJQURDLEtBQUssRUFBRTtnREFDUztBQUdqQjtJQURDLEtBQUssRUFBRTtnREFDVTtBQUdsQjtJQURDLEtBQUssRUFBRTt5Q0FHUDtBQVpVLGNBQWM7SUFMMUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFdBQVc7UUFDckIsK1VBQXFDOztLQUV0QyxDQUFDO0dBQ1csY0FBYyxDQW9CMUI7U0FwQlksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYm13LWxhYmVsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xhYmVsLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGFiZWwuY29tcG9uZW50Lmxlc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMYWJlbENvbXBvbmVudCB7XG4gIF9pbnB1dElkOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICByZXF1aXJlZDogYm9vbGVhbjtcblxuICBASW5wdXQoKVxuICBzZXQgZm9yKG5ld0Zvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5pbnB1dElkID0gbmV3Rm9yO1xuICB9XG5cbiAgc2V0IGlucHV0SWQoaWQ6IHN0cmluZykge1xuICAgIHRoaXMuX2lucHV0SWQgPSBpZDtcbiAgfVxuICBnZXQgaW5wdXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRJZDtcbiAgfVxufVxuIl19