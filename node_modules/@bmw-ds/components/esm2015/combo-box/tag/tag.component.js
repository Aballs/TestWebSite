import { __decorate } from "tslib";
import { Component, EventEmitter, Output, Input } from '@angular/core';
let TagComponent = class TagComponent {
    constructor() {
        this.focused = false;
        this.disabled = false;
        this.removeEvent = new EventEmitter();
    }
    cancel() {
        if (!this.disabled) {
            this.removeEvent.emit();
        }
    }
};
__decorate([
    Input()
], TagComponent.prototype, "label", void 0);
__decorate([
    Input()
], TagComponent.prototype, "focused", void 0);
__decorate([
    Input()
], TagComponent.prototype, "disabled", void 0);
__decorate([
    Output()
], TagComponent.prototype, "removeEvent", void 0);
TagComponent = __decorate([
    Component({
        selector: 'bmw-tag',
        template: "<div\n  class=\"bmw-tag bmw-component-text\"\n  [class.disabled]=\"disabled\"\n  [attr.aria-label]=\"'Selected option ' + label + '. It can be remove by pressing the backspace or delete key'\"\n  [class.focused]=\"focused\"\n  tabindex=\"-1\"\n>\n  {{ label }}\n  <i class=\"iwp-icon-gen_close\" (click)=\"cancel()\" tabindex=\"-1\"></i>\n</div>\n",
        styles: [":host{display:flex}:host .bmw-tag{display:inline-block;box-sizing:border-box;position:relative;margin:auto;white-space:nowrap;border:1px solid var(--color-bmw-basic3-shade2);padding:0 var(--combo-box__tag__margin-right);padding-right:calc(var(--combo-box__tag__margin-right) + var(--typography__component-text__line-height));background-color:var(--combo-box__dropdown-item__default__background-color)}:host .bmw-tag i{position:absolute;right:var(--combo-box__tag__padding);top:var(--combo-box__tag__padding)}:host .bmw-tag i:focus{outline:0}:host .bmw-tag.focused{border:1px solid!important}:host .bmw-tag:focus{outline:0}:host .bmw-tag.disabled i{cursor:not-allowed;opacity:.5}"]
    })
], TagComponent);
export { TagComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvbWJvLWJveC90YWcvdGFnLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU92RSxJQUFhLFlBQVksR0FBekIsTUFBYSxZQUFZO0lBQXpCO1FBSUUsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQU96QyxDQUFDO0lBTEMsTUFBTTtRQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDO0NBQ0YsQ0FBQTtBQWJDO0lBREMsS0FBSyxFQUFFOzJDQUNNO0FBRWQ7SUFEQyxLQUFLLEVBQUU7NkNBQ1E7QUFFaEI7SUFEQyxLQUFLLEVBQUU7OENBQ1M7QUFFakI7SUFEQyxNQUFNLEVBQUU7aURBQzhCO0FBUjVCLFlBQVk7SUFMeEIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFNBQVM7UUFDbkIsdVdBQW1DOztLQUVwQyxDQUFDO0dBQ1csWUFBWSxDQWV4QjtTQWZZLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibXctdGFnJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhZy5jb21wb25lbnQubGVzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRhZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGZvY3VzZWQgPSBmYWxzZTtcbiAgQElucHV0KClcbiAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQE91dHB1dCgpXG4gIHJlbW92ZUV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gIGNhbmNlbCgpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnQuZW1pdCgpO1xuICAgIH1cbiAgfVxufVxuIl19