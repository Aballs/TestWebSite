import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter, HostBinding, ViewChild } from '@angular/core';
let ComboBoxDropdownItemComponent = class ComboBoxDropdownItemComponent {
    constructor() {
        this.disabled = false;
        this.selected = false;
        this.focused = false;
        this.id = Math.random()
            .toString(36)
            .substring(2);
        this.clickEvent = new EventEmitter();
    }
    ngOnChanges() {
        var _a;
        if (this.focused) {
            (_a = this.itemWrapper) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();
        }
    }
    click() {
        if (!this.disabled)
            this.clickEvent.emit();
    }
};
__decorate([
    Input()
], ComboBoxDropdownItemComponent.prototype, "value", void 0);
__decorate([
    Input()
], ComboBoxDropdownItemComponent.prototype, "label", void 0);
__decorate([
    Input()
], ComboBoxDropdownItemComponent.prototype, "disabled", void 0);
__decorate([
    Input()
], ComboBoxDropdownItemComponent.prototype, "selected", void 0);
__decorate([
    Input()
], ComboBoxDropdownItemComponent.prototype, "focused", void 0);
__decorate([
    ViewChild('itemWrapper')
], ComboBoxDropdownItemComponent.prototype, "itemWrapper", void 0);
__decorate([
    HostBinding('attr.id'),
    Input()
], ComboBoxDropdownItemComponent.prototype, "id", void 0);
__decorate([
    Output()
], ComboBoxDropdownItemComponent.prototype, "clickEvent", void 0);
ComboBoxDropdownItemComponent = __decorate([
    Component({
        selector: 'bmw-combo-box-dropdown-item',
        template: "<div\n  #itemWrapper\n  [class.disabled]=\"disabled\"\n  class=\"wrapper\"\n  [attr.aria-label]=\"'Option with label ' + label\"\n  tabindex=\"-1\"\n>\n  <div [class.selected]=\"selected\" [class.focused]=\"focused\" (click)=\"click()\" class=\"dropdown-item\">\n    <div class=\"label bmw-component-text\">{{ label }}</div>\n  </div>\n</div>\n",
        styles: ["div.dropdown-item{width:100%;overflow:hidden;padding:var(--combo-box__default__padding);box-sizing:border-box;position:relative;background-color:var(--combo-box__dropdown-item__default__background-color)}div.dropdown-item div.label{width:100%;display:block;box-sizing:border-box;position:relative;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}div.dropdown-item div.label.bmw-component-text{color:inherit}div.dropdown-item.focused,div.dropdown-item:hover{background-color:var(--combo-box__dropdown-item__hover__background-color)}div.dropdown-item.selected{background-color:var(--combo-box__dropdown-item__selected__background-color)}div.dropdown-item.selected.focused{outline:solid 1px;outline-color:var(--color-bmw-basic5);outline-offset:-3px}div.dropdown-item.selected .label.bmw-component-text{color:var(--combo-box__dropdown-item__selected__color)}.disabled div.dropdown-item{pointer-events:none}.disabled div.dropdown-item .bmw-component-text{opacity:.5}div.wrapper.keyboard-focus .dropdown-item{background-color:var(--combo-box__dropdown-item__hover__background-color)}div.wrapper.disabled{cursor:no-drop}"]
    })
], ComboBoxDropdownItemComponent);
export { ComboBoxDropdownItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tYm94LWRyb3Bkb3duLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJtdy1kcy9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29tYm8tYm94L2NvbWJvLWJveC1kcm9wZG93bi1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUF5QixNQUFNLGVBQWUsQ0FBQztBQU90SCxJQUFhLDZCQUE2QixHQUExQyxNQUFhLDZCQUE2QjtJQUExQztRQU1FLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBT2hCLE9BQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2FBQ2YsUUFBUSxDQUFDLEVBQUUsQ0FBQzthQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUdoQixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQVdsQyxDQUFDO0lBVEMsV0FBVzs7UUFDVCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsTUFBQSxJQUFJLENBQUMsV0FBVywwQ0FBRSxhQUFhLENBQUMsS0FBSyxHQUFHO1NBQ3pDO0lBQ0gsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVE7WUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdDLENBQUM7Q0FDRixDQUFBO0FBL0JDO0lBREMsS0FBSyxFQUFFOzREQUNHO0FBRVg7SUFEQyxLQUFLLEVBQUU7NERBQ007QUFFZDtJQURDLEtBQUssRUFBRTsrREFDUztBQUVqQjtJQURDLEtBQUssRUFBRTsrREFDUztBQUVqQjtJQURDLEtBQUssRUFBRTs4REFDUTtBQUdoQjtJQURDLFNBQVMsQ0FBQyxhQUFhLENBQUM7a0VBQ0Q7QUFJeEI7SUFGQyxXQUFXLENBQUMsU0FBUyxDQUFDO0lBQ3RCLEtBQUssRUFBRTt5REFHUTtBQUdoQjtJQURDLE1BQU0sRUFBRTtpRUFDdUI7QUF0QnJCLDZCQUE2QjtJQUx6QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsNkJBQTZCO1FBQ3ZDLG9XQUF1RDs7S0FFeEQsQ0FBQztHQUNXLDZCQUE2QixDQWlDekM7U0FqQ1ksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibXctY29tYm8tYm94LWRyb3Bkb3duLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vY29tYm8tYm94LWRyb3Bkb3duLWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jb21iby1ib3gtZHJvcGRvd24taXRlbS5jb21wb25lbnQubGVzcyddXG59KVxuZXhwb3J0IGNsYXNzIENvbWJvQm94RHJvcGRvd25JdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KClcbiAgdmFsdWU6IGFueTtcbiAgQElucHV0KClcbiAgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQElucHV0KClcbiAgc2VsZWN0ZWQgPSBmYWxzZTtcbiAgQElucHV0KClcbiAgZm9jdXNlZCA9IGZhbHNlO1xuXG4gIEBWaWV3Q2hpbGQoJ2l0ZW1XcmFwcGVyJylcbiAgaXRlbVdyYXBwZXI6IEVsZW1lbnRSZWY7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmlkJylcbiAgQElucHV0KClcbiAgaWQgPSBNYXRoLnJhbmRvbSgpXG4gICAgLnRvU3RyaW5nKDM2KVxuICAgIC5zdWJzdHJpbmcoMik7XG5cbiAgQE91dHB1dCgpXG4gIGNsaWNrRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuZm9jdXNlZCkge1xuICAgICAgdGhpcy5pdGVtV3JhcHBlcj8ubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIGNsaWNrKCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkgdGhpcy5jbGlja0V2ZW50LmVtaXQoKTtcbiAgfVxufVxuIl19