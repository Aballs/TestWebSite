import { __decorate } from "tslib";
import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
let DropdownItemComponent = class DropdownItemComponent {
    constructor() {
        this.disabled = false;
        this.clicked = new EventEmitter();
        this.keyboardFocus = false;
    }
    ngOnInit() {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
    }
    click() {
        if (!this.disabled)
            this.clicked.emit({ id: this.id, value: this.value });
    }
};
__decorate([
    Input()
], DropdownItemComponent.prototype, "disabled", void 0);
__decorate([
    Input()
], DropdownItemComponent.prototype, "value", void 0);
__decorate([
    Input()
], DropdownItemComponent.prototype, "label", void 0);
__decorate([
    Input()
], DropdownItemComponent.prototype, "id", void 0);
__decorate([
    Output()
], DropdownItemComponent.prototype, "clicked", void 0);
__decorate([
    HostBinding('class.keyboard-focus')
], DropdownItemComponent.prototype, "keyboardFocus", void 0);
DropdownItemComponent = __decorate([
    Component({
        selector: 'bmw-dropdown-item',
        template: "<div [class.disabled]=\"disabled\" class=\"wrapper\">\n  <div [class.selected]=\"selected\" (click)=\"click()\" class=\"dropdown-item\">\n    <div class=\"label bmw-component-text\">{{ label }}</div>\n  </div>\n</div>\n",
        styles: ["div.dropdown-item{width:100%;font-size:var(--dropdown__default__font-size);line-height:var(--dropdown__default__line-height);overflow:hidden;padding-right:var(--dropdown__default__padding-left);padding-top:var(--dropdown__default__padding-top);padding-left:var(--dropdown__default__padding-left);padding-bottom:var(--dropdown__default__padding-bottom);box-sizing:border-box;font-family:Arial;position:relative;background-color:var(--dropdown-item__default__background-color);color:var(--dropdown-item__defualt__color);max-height:calc(2 * var(--dropdown__default__line-height) + var(--dropdown__default__padding-top) + var(--dropdown__default__padding-bottom))}div.dropdown-item div.label{width:100%;display:block;box-sizing:border-box;position:relative;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}div.dropdown-item:hover,div.dropdown-item:hover span::after{background-color:var(--dropdown-item__hover__background-color)}div.dropdown-item.selected{background-color:var(--dropdown-item__selected__background-color)}div.dropdown-item.selected .bmw-component-text{color:var(--dropdown-item__selected__color)}div.dropdown-item.selected span::after{background-color:var(--dropdown-item__selected__background-color)}.disabled div.dropdown-item{pointer-events:none}.disabled div.dropdown-item .bmw-component-text{color:var(--dropdown-item__disabled__color)}div.wrapper.keyboard-focus .dropdown-item,div.wrapper.keyboard-focus .dropdown-item span::after{background-color:var(--dropdown-item__hover__background-color)}div.wrapper.disabled{cursor:no-drop}"]
    })
], DropdownItemComponent);
export { DropdownItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYm13LWRzL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJkcm9wZG93bi9kcm9wZG93bi1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPNUYsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBcUI7SUFBbEM7UUFFRSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBU2pCLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBOEIsQ0FBQztRQUV6RCxrQkFBYSxHQUFHLEtBQUssQ0FBQztJQWF4QixDQUFDO0lBWEMsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2lCQUNwQixRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQjtJQUNILENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRO1lBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDNUUsQ0FBQztDQUNGLENBQUE7QUF4QkM7SUFEQyxLQUFLLEVBQUU7dURBQ1M7QUFHakI7SUFEQyxLQUFLLEVBQUU7b0RBQ0c7QUFFWDtJQURDLEtBQUssRUFBRTtvREFDTTtBQUVkO0lBREMsS0FBSyxFQUFFO2lEQUNHO0FBRVg7SUFEQyxNQUFNLEVBQUU7c0RBQ2dEO0FBRXpEO0lBREMsV0FBVyxDQUFDLHNCQUFzQixDQUFDOzREQUNkO0FBYlgscUJBQXFCO0lBTGpDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxtQkFBbUI7UUFDN0IsdU9BQTZDOztLQUU5QyxDQUFDO0dBQ1cscUJBQXFCLENBMEJqQztTQTFCWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibXctZHJvcGRvd24taXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9kcm9wZG93bi1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZHJvcGRvd24taXRlbS5jb21wb25lbnQubGVzcyddXG59KVxuZXhwb3J0IGNsYXNzIERyb3Bkb3duSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIGRpc2FibGVkID0gZmFsc2U7XG4gIHNlbGVjdGVkOiBib29sZWFuO1xuICBASW5wdXQoKVxuICB2YWx1ZTogYW55O1xuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBpZDogc3RyaW5nO1xuICBAT3V0cHV0KClcbiAgY2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXI8eyBpZDogc3RyaW5nOyB2YWx1ZTogYW55IH0+KCk7XG4gIEBIb3N0QmluZGluZygnY2xhc3Mua2V5Ym9hcmQtZm9jdXMnKVxuICBrZXlib2FyZEZvY3VzID0gZmFsc2U7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLmlkKSB7XG4gICAgICB0aGlzLmlkID0gTWF0aC5yYW5kb20oKVxuICAgICAgICAudG9TdHJpbmcoMzYpXG4gICAgICAgIC5zdWJzdHJpbmcoMik7XG4gICAgfVxuICB9XG5cbiAgY2xpY2soKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB0aGlzLmNsaWNrZWQuZW1pdCh7IGlkOiB0aGlzLmlkLCB2YWx1ZTogdGhpcy52YWx1ZSB9KTtcbiAgfVxufVxuIl19