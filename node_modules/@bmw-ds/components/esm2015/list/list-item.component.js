import { __decorate } from "tslib";
import { Component, ContentChild, HostBinding, Input, ViewChild, Output, EventEmitter } from '@angular/core';
import { ContextMenuComponent } from '../context-menu/context-menu.component';
let ListItemComponent = class ListItemComponent {
    constructor() {
        this.multiSelect = false;
        this.updateEvent = new EventEmitter();
        this.withContextMenu = false;
    }
    ngOnInit() {
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
    }
    ngAfterViewInit() {
        if (this.contextMenu.nativeElement.firstChild) {
            // wait for next tick to prevent expresionChangedAfterCheck error
            setTimeout(() => {
                this.withContextMenu = true;
            });
        }
    }
    focusOut(e) {
        const leavingParent = !this.contextMenu.nativeElement.contains(e.relatedTarget);
        if (leavingParent) {
            this.toggle(false);
        }
    }
    openContextMenu(e) {
        this.toggle();
        e.stopPropagation();
    }
    toggle(state) {
        if (!this.childContextMenuComponent)
            return;
        this.childContextMenuComponent.toggle(state);
    }
    checkboxUpdate(event) {
        if ((event.checked === 'checked') === this.selected)
            return;
        this.updateEvent.emit(event.checked === 'checked');
    }
    click(event) {
        //ignore clicks inside checkbox
        if (event.target !== this.labelElement.nativeElement)
            return;
        this.updateEvent.emit(this.selected);
    }
};
__decorate([
    ContentChild(ContextMenuComponent)
], ListItemComponent.prototype, "childContextMenuComponent", void 0);
__decorate([
    ViewChild('contextMenu')
], ListItemComponent.prototype, "contextMenu", void 0);
__decorate([
    ViewChild('labelElement')
], ListItemComponent.prototype, "labelElement", void 0);
__decorate([
    ViewChild('checkboxElement', { static: false })
], ListItemComponent.prototype, "checkboxElement", void 0);
__decorate([
    HostBinding('attr.id'),
    Input()
], ListItemComponent.prototype, "id", void 0);
__decorate([
    Input()
], ListItemComponent.prototype, "selected", void 0);
__decorate([
    Input()
], ListItemComponent.prototype, "icon", void 0);
__decorate([
    Input()
], ListItemComponent.prototype, "multiSelect", void 0);
__decorate([
    Input()
], ListItemComponent.prototype, "label", void 0);
__decorate([
    HostBinding('style.order'),
    Input()
], ListItemComponent.prototype, "order", void 0);
__decorate([
    Output()
], ListItemComponent.prototype, "updateEvent", void 0);
ListItemComponent = __decorate([
    Component({
        selector: 'bmw-list-item',
        template: "<div class=\"wrapper\" [class.selected]=\"selected\" (click)=\"click($event)\">\n  <div\n    class=\"item bmw-component-text\"\n    [class.selected]=\"selected\"\n    [class.with-context-menu]=\"withContextMenu\"\n    [class.multi-select]=\"multiSelect\"\n    #labelElement\n  >\n    <div class=\"separator\" *ngIf=\"multiSelect\"></div>\n    <bmw-checkbox\n      *ngIf=\"multiSelect\"\n      #checkboxElement\n      [checked]=\"selected ? 'checked' : 'unchecked'\"\n      (updateEvent)=\"checkboxUpdate($event)\"\n    ></bmw-checkbox>\n    <i *ngIf=\"icon\" class=\"icon\" [ngClass]=\"icon\"></i>\n    <span *ngIf=\"label\">{{ label }}</span>\n    <div class=\"context-menu\" #contextMenu (focusout)=\"focusOut($event)\" tabindex=\"0\" (click)=\"openContextMenu($event)\">\n      <ng-content select=\"bmw-context-menu\"></ng-content>\n    </div>\n  </div>\n</div>\n",
        styles: [".wrapper .item{position:relative;padding:var(--list__item__padding-vertical) var(--list__item__padding-horizontal);padding-bottom:calc(var(--list__item__padding-vertical) - 1px);border-bottom:1px solid var(--list__item__border-bottom-color);box-sizing:border-box;white-space:wrap;color:var(--list__default__color)}.wrapper .item.with-context-menu{padding-right:calc(var(--list__item__padding-horizontal) + var(--list__item__padding-vertical) + var(--list__icon__height) * .125 + var(--typography__component-text__font-size))}.wrapper .item ::ng-deep label div{height:var(--checkbox__default__height)}.wrapper .item ::ng-deep bmw-checkbox{position:absolute;top:calc((var(--list__item__line-height) - var(--checkbox__default__height))/ 2 + var(--list__item__padding-vertical));left:var(--list__header__padding)}.wrapper .item.selected{background-color:var(--list__item__selected__background-color)}.wrapper .item.multi-select{padding-left:var(--list__header__selectable__padding-left)}.wrapper .item .context-menu{position:absolute;right:0;top:0;box-sizing:border-box;display:inline-block}.wrapper .item .context-menu ::ng-deep bmw-context-menu div.bmwContextMenu{top:100%;right:0}.wrapper .item .context-menu::after{content:'\\e923';font-family:iwp;height:var(--list__icon__height);display:block;padding:var(--list__item__padding-vertical) calc(var(--list__item__padding-vertical) + var(--list__icon__height) * .125)}.wrapper .item .context-menu:empty{display:none}.wrapper .item .context-menu:hover{background-color:var(--list__item__context-menu__opened__background-color)}.wrapper .item .context-menu:focus{outline:0}:host.opened .wrapper .item .context-menu{background-color:var(--list__item__context-menu__opened__background-color)}.wrapper .item .separator{position:absolute;top:0;left:0;height:100%;width:calc(var(--list__icon__height) + 2 * var(--list__header__padding));border-right:1px solid #a3a3a3}.wrapper .item .icon{padding-right:var(--spacing-bmw-xxs)}.wrapper:hover{background-color:var(--list__item__hover__background-color)}:host{display:block;background-color:var(--list-item__default__background-color)}"]
    })
], ListItemComponent);
export { ListItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpc3QvbGlzdC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osV0FBVyxFQUVYLEtBQUssRUFDTCxTQUFTLEVBQ1QsTUFBTSxFQUNOLFlBQVksRUFHYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQVE5RSxJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtJQUE5QjtRQWlCRSxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQU9wQixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFDMUMsb0JBQWUsR0FBRyxLQUFLLENBQUM7SUE4QzFCLENBQUM7SUE1Q0MsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNWLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRTtpQkFDcEIsUUFBUSxDQUFDLEVBQUUsQ0FBQztpQkFDWixTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEIsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRTtZQUM3QyxpRUFBaUU7WUFDakUsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDZCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztZQUM5QixDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUNELFFBQVEsQ0FBQyxDQUFhO1FBQ3BCLE1BQU0sYUFBYSxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNoRixJQUFJLGFBQWEsRUFBRTtZQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztJQUVELGVBQWUsQ0FBQyxDQUFhO1FBQzNCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNkLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWU7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyx5QkFBeUI7WUFBRSxPQUFPO1FBQzVDLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELGNBQWMsQ0FBQyxLQUF3QjtRQUNyQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsS0FBSyxJQUFJLENBQUMsUUFBUTtZQUFFLE9BQU87UUFFNUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQWlCO1FBQ3JCLCtCQUErQjtRQUMvQixJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhO1lBQUUsT0FBTztRQUU3RCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkMsQ0FBQztDQUNGLENBQUE7QUFyRUM7SUFEQyxZQUFZLENBQUMsb0JBQW9CLENBQUM7b0VBQ2E7QUFFaEQ7SUFEQyxTQUFTLENBQUMsYUFBYSxDQUFDO3NEQUNEO0FBRXhCO0lBREMsU0FBUyxDQUFDLGNBQWMsQ0FBQzt1REFDRDtBQUV6QjtJQURDLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQzswREFDcEI7QUFHNUI7SUFGQyxXQUFXLENBQUMsU0FBUyxDQUFDO0lBQ3RCLEtBQUssRUFBRTs2Q0FDRztBQUVYO0lBREMsS0FBSyxFQUFFO21EQUNVO0FBRWxCO0lBREMsS0FBSyxFQUFFOytDQUNLO0FBRWI7SUFEQyxLQUFLLEVBQUU7c0RBQ1k7QUFFcEI7SUFEQyxLQUFLLEVBQUU7Z0RBQ007QUFHZDtJQUZDLFdBQVcsQ0FBQyxhQUFhLENBQUM7SUFDMUIsS0FBSyxFQUFFO2dEQUNNO0FBRWQ7SUFEQyxNQUFNLEVBQUU7c0RBQ2lDO0FBeEIvQixpQkFBaUI7SUFMN0IsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGVBQWU7UUFDekIsODJCQUF5Qzs7S0FFMUMsQ0FBQztHQUNXLGlCQUFpQixDQXVFN0I7U0F2RVksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBDb250ZW50Q2hpbGQsXG4gIEhvc3RCaW5kaW5nLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgVmlld0NoaWxkLFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgT25Jbml0LFxuICBBZnRlclZpZXdJbml0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udGV4dE1lbnVDb21wb25lbnQgfSBmcm9tICcuLi9jb250ZXh0LW1lbnUvY29udGV4dC1tZW51LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4uL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Jtdy1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGlzdC1pdGVtLmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGlzdEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICBAQ29udGVudENoaWxkKENvbnRleHRNZW51Q29tcG9uZW50KVxuICBjaGlsZENvbnRleHRNZW51Q29tcG9uZW50OiBDb250ZXh0TWVudUNvbXBvbmVudDtcbiAgQFZpZXdDaGlsZCgnY29udGV4dE1lbnUnKVxuICBjb250ZXh0TWVudTogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZCgnbGFiZWxFbGVtZW50JylcbiAgbGFiZWxFbGVtZW50OiBFbGVtZW50UmVmO1xuICBAVmlld0NoaWxkKCdjaGVja2JveEVsZW1lbnQnLCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgY2hlY2tib3hFbGVtZW50OiBFbGVtZW50UmVmO1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuICBASW5wdXQoKVxuICBpZDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBzZWxlY3RlZDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgaWNvbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBtdWx0aVNlbGVjdCA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuICBASG9zdEJpbmRpbmcoJ3N0eWxlLm9yZGVyJylcbiAgQElucHV0KClcbiAgb3JkZXI6IHN0cmluZztcbiAgQE91dHB1dCgpXG4gIHVwZGF0ZUV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuICB3aXRoQ29udGV4dE1lbnUgPSBmYWxzZTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAoIXRoaXMuaWQpXG4gICAgICB0aGlzLmlkID0gTWF0aC5yYW5kb20oKVxuICAgICAgICAudG9TdHJpbmcoMzYpXG4gICAgICAgIC5zdWJzdHJpbmcoMik7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgaWYgKHRoaXMuY29udGV4dE1lbnUubmF0aXZlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICAvLyB3YWl0IGZvciBuZXh0IHRpY2sgdG8gcHJldmVudCBleHByZXNpb25DaGFuZ2VkQWZ0ZXJDaGVjayBlcnJvclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMud2l0aENvbnRleHRNZW51ID0gdHJ1ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBmb2N1c091dChlOiBNb3VzZUV2ZW50KSB7XG4gICAgY29uc3QgbGVhdmluZ1BhcmVudCA9ICF0aGlzLmNvbnRleHRNZW51Lm5hdGl2ZUVsZW1lbnQuY29udGFpbnMoZS5yZWxhdGVkVGFyZ2V0KTtcbiAgICBpZiAobGVhdmluZ1BhcmVudCkge1xuICAgICAgdGhpcy50b2dnbGUoZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIG9wZW5Db250ZXh0TWVudShlOiBNb3VzZUV2ZW50KSB7XG4gICAgdGhpcy50b2dnbGUoKTtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgdG9nZ2xlKHN0YXRlPzogYm9vbGVhbikge1xuICAgIGlmICghdGhpcy5jaGlsZENvbnRleHRNZW51Q29tcG9uZW50KSByZXR1cm47XG4gICAgdGhpcy5jaGlsZENvbnRleHRNZW51Q29tcG9uZW50LnRvZ2dsZShzdGF0ZSk7XG4gIH1cblxuICBjaGVja2JveFVwZGF0ZShldmVudDogQ2hlY2tib3hDb21wb25lbnQpIHtcbiAgICBpZiAoKGV2ZW50LmNoZWNrZWQgPT09ICdjaGVja2VkJykgPT09IHRoaXMuc2VsZWN0ZWQpIHJldHVybjtcblxuICAgIHRoaXMudXBkYXRlRXZlbnQuZW1pdChldmVudC5jaGVja2VkID09PSAnY2hlY2tlZCcpO1xuICB9XG5cbiAgY2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICAvL2lnbm9yZSBjbGlja3MgaW5zaWRlIGNoZWNrYm94XG4gICAgaWYgKGV2ZW50LnRhcmdldCAhPT0gdGhpcy5sYWJlbEVsZW1lbnQubmF0aXZlRWxlbWVudCkgcmV0dXJuO1xuXG4gICAgdGhpcy51cGRhdGVFdmVudC5lbWl0KHRoaXMuc2VsZWN0ZWQpO1xuICB9XG59XG4iXX0=