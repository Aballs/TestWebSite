import { __decorate } from "tslib";
import { Component, Input, HostBinding } from '@angular/core';
let ProgressBarComponent = class ProgressBarComponent {
    constructor() {
        this.filled = 0;
        this.duration = 0.5;
        this.filledStyleObject = {
            width: '0%',
            transition: 'width 0.5s'
        };
    }
    ngOnInit() {
        this.checkProperties();
    }
    ngOnChanges() {
        this.checkProperties();
    }
    checkProperties() {
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
        this.filled = Math.max(0, Math.min(100, this.filled));
        this.filledStyleObject = {
            width: (this.filled ? this.filled.toString() : '0') + '%',
            transition: 'width ' + (this.duration ? this.duration.toString() : '0.5') + 's'
        };
    }
};
__decorate([
    HostBinding('attr.id'),
    Input()
], ProgressBarComponent.prototype, "id", void 0);
__decorate([
    Input()
], ProgressBarComponent.prototype, "label", void 0);
__decorate([
    Input()
], ProgressBarComponent.prototype, "filled", void 0);
__decorate([
    Input()
], ProgressBarComponent.prototype, "duration", void 0);
ProgressBarComponent = __decorate([
    Component({
        selector: 'bmw-progress-bar',
        template: "<div class=\"wrapper\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" [attr.aria-valuenow]=\"filled\">\n  <div class=\"filled\" [ngStyle]=\"filledStyleObject\"></div>\n  <div class=\"label bmw-regular-text\">\n    {{ label }}\n  </div>\n</div>\n",
        styles: [".wrapper{width:100%;position:relative;background-color:var(--progress-bar__default__background-color)}.wrapper .filled{background-color:var(--progress-bar__filled__background-color);position:absolute;height:100%}.wrapper .label{background-color:rgba(0,0,0,0);position:relative;display:table;margin:auto;line-height:var(--progress-bar__default__line-height)}"]
    })
], ProgressBarComponent);
export { ProgressBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInByb2dyZXNzLWJhci9wcm9ncmVzcy1iYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBT2pGLElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQW9CO0lBQWpDO1FBU0UsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUdYLGFBQVEsR0FBRyxHQUFHLENBQUM7UUFFZixzQkFBaUIsR0FBRztZQUNsQixLQUFLLEVBQUUsSUFBSTtZQUNYLFVBQVUsRUFBRSxZQUFZO1NBQ3pCLENBQUM7SUFzQkosQ0FBQztJQXBCQyxRQUFRO1FBQ04sSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFDRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ1YsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2lCQUNwQixRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVsQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRXRELElBQUksQ0FBQyxpQkFBaUIsR0FBRztZQUN2QixLQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHO1lBQ3pELFVBQVUsRUFBRSxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHO1NBQ2hGLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQXBDQztJQUZDLFdBQVcsQ0FBQyxTQUFTLENBQUM7SUFDdEIsS0FBSyxFQUFFO2dEQUNHO0FBR1g7SUFEQyxLQUFLLEVBQUU7bURBQ007QUFHZDtJQURDLEtBQUssRUFBRTtvREFDRztBQUdYO0lBREMsS0FBSyxFQUFFO3NEQUNPO0FBWkosb0JBQW9CO0lBTGhDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxrQkFBa0I7UUFDNUIsaVJBQTRDOztLQUU3QyxDQUFDO0dBQ1csb0JBQW9CLENBdUNoQztTQXZDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBIb3N0QmluZGluZywgT25Jbml0LCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYm13LXByb2dyZXNzLWJhcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm9ncmVzcy1iYXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wcm9ncmVzcy1iYXIuY29tcG9uZW50Lmxlc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQcm9ncmVzc0JhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmlkJylcbiAgQElucHV0KClcbiAgaWQ6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGZpbGxlZCA9IDA7XG5cbiAgQElucHV0KClcbiAgZHVyYXRpb24gPSAwLjU7XG5cbiAgZmlsbGVkU3R5bGVPYmplY3QgPSB7XG4gICAgd2lkdGg6ICcwJScsXG4gICAgdHJhbnNpdGlvbjogJ3dpZHRoIDAuNXMnXG4gIH07XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5jaGVja1Byb3BlcnRpZXMoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMuY2hlY2tQcm9wZXJ0aWVzKCk7XG4gIH1cbiAgY2hlY2tQcm9wZXJ0aWVzKCkge1xuICAgIGlmICghdGhpcy5pZClcbiAgICAgIHRoaXMuaWQgPSBNYXRoLnJhbmRvbSgpXG4gICAgICAgIC50b1N0cmluZygzNilcbiAgICAgICAgLnN1YnN0cmluZygyKTtcblxuICAgIHRoaXMuZmlsbGVkID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMTAwLCB0aGlzLmZpbGxlZCkpO1xuXG4gICAgdGhpcy5maWxsZWRTdHlsZU9iamVjdCA9IHtcbiAgICAgIHdpZHRoOiAodGhpcy5maWxsZWQgPyB0aGlzLmZpbGxlZC50b1N0cmluZygpIDogJzAnKSArICclJyxcbiAgICAgIHRyYW5zaXRpb246ICd3aWR0aCAnICsgKHRoaXMuZHVyYXRpb24gPyB0aGlzLmR1cmF0aW9uLnRvU3RyaW5nKCkgOiAnMC41JykgKyAncydcbiAgICB9O1xuICB9XG59XG4iXX0=