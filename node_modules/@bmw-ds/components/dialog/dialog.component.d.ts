import { OnInit, EventEmitter, OnChanges, SimpleChanges, ElementRef, AfterViewInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export interface Nodes {
    element: Element;
    prevTabIndex: string;
}
export declare class DialogComponent implements OnInit, OnChanges, AfterViewInit {
    private elemRef;
    protected _type: string;
    get type(): string;
    allowToOverflow: boolean;
    set type(value: string);
    id: string;
    show: boolean;
    title: string;
    primaryLabel: string;
    secondaryLabel: string;
    primaryDisabled: boolean;
    secondaryDisabled: boolean;
    closeButton: boolean;
    primaryClick: EventEmitter<any>;
    secondaryClick: EventEmitter<any>;
    closeClick: EventEmitter<any>;
    private nonModalNodes;
    private invokingElement;
    onEscKeydownHandler(event: KeyboardEvent): void;
    constructor(elemRef: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    closeButtonClick(): void;
    primaryButtonClick(): void;
    secondaryButtonClick(): void;
    applyFocusTrapInDialog(): void;
    removeFocusTrapFromDialog(): void;
    private getAllTabbableElements;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DialogComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DialogComponent, "bmw-dialog", never, { "allowToOverflow": "allowToOverflow"; "type": "type"; "show": "show"; "id": "id"; "title": "title"; "primaryLabel": "primaryLabel"; "secondaryLabel": "secondaryLabel"; "primaryDisabled": "primaryDisabled"; "secondaryDisabled": "secondaryDisabled"; "closeButton": "closeButton"; }, { "primaryClick": "primaryClick"; "secondaryClick": "secondaryClick"; "closeClick": "closeClick"; }, never, ["*"]>;
}

//# sourceMappingURL=dialog.component.d.ts.map