import { Renderer2, ElementRef, AfterViewInit, OnChanges, Injector, SimpleChanges } from '@angular/core';
import { NgControl } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class BmwInputFileDirective implements AfterViewInit, OnChanges {
    private injector;
    private _renderer;
    private _el;
    private control;
    browseBtn: HTMLElement;
    visibleInput: HTMLInputElement;
    private inputControl;
    private destroy$;
    btnLabel: string;
    onMouseOver(): void;
    onMouseLeave(): void;
    onChange(): void;
    constructor(injector: Injector, _renderer: Renderer2, _el: ElementRef, control: NgControl);
    checkForRequired(): void;
    _getInputGridClass(el: HTMLElement): string;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    updateButtonLabel(): void;
    destroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<BmwInputFileDirective, [null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<BmwInputFileDirective, "input[bmwInputFile]", never, { "btnLabel": "btnLabel"; }, {}, never>;
}

//# sourceMappingURL=bmw-input-file.directive.d.ts.map