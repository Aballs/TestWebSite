{"version":3,"file":"inputfield.component.d.ts","sources":["inputfield.component.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, OnInit, EventEmitter, OnDestroy } from '@angular/core';\nexport declare class InputfieldComponent implements OnInit, AfterContentInit, OnDestroy {\n    private cdRef;\n    icon: string;\n    id: string;\n    mutationObserver: MutationObserver;\n    filePlaceholder: any;\n    set disabled(value: boolean);\n    get disabled(): boolean;\n    iconClicked: EventEmitter<any>;\n    type: string;\n    /**\n     * Please leave it undefined and don't initialize it with false\n     * as the bmwInput directive needs that information\n     * to work correctly or you run into the problem that the inputfield wants to read\n     * from the bmwInput and vice versa\n     */\n    _disabled: boolean;\n    input: any;\n    preventSettingIDAutomatically: boolean;\n    private _label;\n    constructor(cdRef: ChangeDetectorRef);\n    ngOnInit(): void;\n    iconClick(): void;\n    ngAfterContentInit(): void;\n    _onInput(): void;\n    ngOnDestroy(): void;\n}\n"]}