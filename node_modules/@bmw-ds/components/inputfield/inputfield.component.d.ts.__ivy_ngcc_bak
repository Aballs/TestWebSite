import { AfterContentInit, ChangeDetectorRef, OnInit, EventEmitter, OnDestroy } from '@angular/core';
export declare class InputfieldComponent implements OnInit, AfterContentInit, OnDestroy {
    private cdRef;
    icon: string;
    id: string;
    mutationObserver: MutationObserver;
    filePlaceholder: any;
    set disabled(value: boolean);
    get disabled(): boolean;
    iconClicked: EventEmitter<any>;
    type: string;
    /**
     * Please leave it undefined and don't initialize it with false
     * as the bmwInput directive needs that information
     * to work correctly or you run into the problem that the inputfield wants to read
     * from the bmwInput and vice versa
     */
    _disabled: boolean;
    input: any;
    preventSettingIDAutomatically: boolean;
    private _label;
    constructor(cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    iconClick(): void;
    ngAfterContentInit(): void;
    _onInput(): void;
    ngOnDestroy(): void;
}
