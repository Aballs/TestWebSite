@import 'grid-concept-variables';
@import 'grid-concept-mixins';

.bmw__grid__cell--align-top {
  align-self: start;
}

.bmw__grid__cell--align-middle {
  align-self: center;
}

.bmw__grid__cell--align-bottom {
  align-self: end;
}

:root {
  --grid__number-of-columns: @grid__desktop__columns;
  --grid__number-of-columns__string: %('%s', @grid__desktop__columns);
  --grid__padding: @grid__desktop__padding;
}

.mobile-viewport({.prepare-viewport(mobile, @grid__mobile__columns, @grid__mobile__padding) ;});

.tablet-viewport({.prepare-viewport(tablet, @grid__tablet__columns, @grid__tablet__padding) ;});

.desktop-viewport({.prepare-viewport(desktop, @grid__desktop__columns, @grid__desktop__padding) ;});

.wide-desktop-viewport({.prepare-viewport(wide-desktop, @grid__wide-desktop__columns, @grid__wide-desktop__padding) ;});
.generate-order(@columns__max);

.bmw__hide {
  display: none !important;
}

.bmw__hide-desktop,
.bmw__hide-mobile {
}

@media screen and (max-width: @component-breakpoint) {
  .bmw__hide-mobile {
    display: none !important;
  }
}

@media screen and (min-width: @component-breakpoint) {
  .bmw__hide-desktop {
    display: none !important;
  }
}
