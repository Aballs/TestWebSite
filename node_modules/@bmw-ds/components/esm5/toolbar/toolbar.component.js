import { __decorate, __read, __spread } from "tslib";
import { Component, ContentChildren, HostListener, ViewChild, HostBinding, Input, isDevMode } from '@angular/core';
import { IconButtonComponent } from '../icon-button/icon-button.component';
var ToolbarComponent = /** @class */ (function () {
    function ToolbarComponent() {
        this.visibleIcons = [];
        this.hiddenIcons = [];
        this.opened = false;
        if (isDevMode()) {
            console.warn('Warning - <bmw-toolbar> component is deprecated and will be removed in the near future');
        }
    }
    ToolbarComponent.prototype.listenerFunction = function () {
        var _this = this;
        //wait at least 10mils between re-render
        clearTimeout(this.resizeTimer);
        this.resizeTimer = window.setTimeout(function () {
            _this.onResize(true);
        }, 10);
    };
    ToolbarComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
        this.icons.forEach(function (icon, index) {
            _this.visibleIcons.push({
                button: icon,
                index: index
            });
        });
        this.onResize();
    };
    ToolbarComponent.prototype.iconClick = function (icon) {
        icon.clickEvent.emit(icon);
    };
    ToolbarComponent.prototype.onResize = function (showAll) {
        var _this = this;
        if (showAll) {
            this.showAll();
        }
        //wait till DOM re-render
        setTimeout(function () {
            var _iconsWrapperHeight = parseInt(_this.iconsWrapper.nativeElement.getBoundingClientRect().height, 10);
            var _componentHeight = parseInt(_this.wrapper.nativeElement.getBoundingClientRect().height, 10);
            if (_componentHeight < _iconsWrapperHeight) {
                _this.hide();
                //wait till DOM re-render
                setTimeout(function () {
                    _this.onResize();
                });
            }
        });
    };
    ToolbarComponent.prototype.hide = function () {
        var icon = this.visibleIcons.splice(-1, 1);
        this.hiddenIcons = __spread(icon, this.hiddenIcons);
    };
    ToolbarComponent.prototype.showAll = function () {
        this.visibleIcons = __spread(this.visibleIcons, this.hiddenIcons);
        this.hiddenIcons = [];
    };
    ToolbarComponent.prototype.toggleMenu = function () {
        this.opened = !this.opened;
    };
    __decorate([
        ViewChild('wrapper')
    ], ToolbarComponent.prototype, "wrapper", void 0);
    __decorate([
        ViewChild('iconsWrapper')
    ], ToolbarComponent.prototype, "iconsWrapper", void 0);
    __decorate([
        ContentChildren(IconButtonComponent)
    ], ToolbarComponent.prototype, "icons", void 0);
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], ToolbarComponent.prototype, "id", void 0);
    __decorate([
        HostListener('window:resize')
    ], ToolbarComponent.prototype, "listenerFunction", null);
    ToolbarComponent = __decorate([
        Component({
            selector: 'bmw-toolbar',
            template: "<div class=\"toolbar-wrapper\" #wrapper>\n  <div class=\"icons\" #iconsWrapper>\n    <bmw-icon-button\n      *ngFor=\"let icon of visibleIcons\"\n      [iconClass]=\"icon.button.iconClass\"\n      [disabled]=\"icon.button.disabled\"\n      [id]=\"icon.button.id\"\n      [ariaLabel]=\"icon.button.ariaLabel\"\n      (clickEvent)=\"iconClick(icon.button)\"\n    ></bmw-icon-button>\n  </div>\n\n  <div *ngIf=\"hiddenIcons.length > 0\" class=\"overflow\" [class.opened]=\"opened\" (click)=\"toggleMenu()\">\n    <div class=\"overflow-menu\" [class.opened]=\"opened\">\n      <bmw-icon-button\n        *ngFor=\"let icon of hiddenIcons\"\n        [iconClass]=\"icon.button.iconClass\"\n        [disabled]=\"icon.button.disabled\"\n        [id]=\"icon.button.id\"\n        [ariaLabel]=\"icon.button.ariaLabel\"\n        (clickEvent)=\"iconClick(icon.button)\"\n      ></bmw-icon-button>\n    </div>\n  </div>\n</div>\n",
            styles: ["::ng-deep .reversed .toolbar-wrapper{background-color:var(--toolbar__reversed__background-color)!important}.toolbar-wrapper{height:calc(var(--toolbar__default__overflow-icon__width) + 2 * var(--toolbar__default__padding));width:100%;padding:var(--toolbar__default__padding);padding-bottom:calc(var(--toolbar__default__padding) - 1px);padding-right:var(--toolbar__default__padding-right);position:relative;box-sizing:border-box;border-bottom:1px solid var(--toolbar__default__border-bottom-color);background-color:var(--toolbar__default__background-color)}.toolbar-wrapper .icons{display:flex;flex-flow:wrap;width:100%}.toolbar-wrapper .icons bmw-icon-button{padding-right:var(--toolbar__icon__padding-right)}.toolbar-wrapper .overflow{position:absolute;top:var(--toolbar__default__padding);right:var(--toolbar__icon__padding-right);cursor:pointer}.toolbar-wrapper .overflow:after{font-family:iwp;content:'\\ea22';color:var(--toolbar__three-dots__color);font-size:var(--toolbar__default__overflow-icon__width)}.toolbar-wrapper .overflow.opened{background-color:var(--toolbar__three-dots__hover__background-color)}.toolbar-wrapper .overflow .overflow-menu{display:none;position:absolute;top:100%;right:0;background-color:var(--toolbar__overflow-menu__defualt__background-color)}.toolbar-wrapper .overflow .overflow-menu.opened{display:block}.toolbar-wrapper .overflow .overflow-menu ::ng-deep bmw-icon-button{display:inline-block;border:1px solid var(--toolbar__overflow-menu__icon-button__border-color);border-bottom:none}.toolbar-wrapper .overflow .overflow-menu ::ng-deep bmw-icon-button button{padding:calc(var(--icon-button__medium__padding) - 1px);padding-bottom:var(--icon-button__medium__padding)}.toolbar-wrapper .overflow .overflow-menu ::ng-deep bmw-icon-button:last-child{border-bottom:1px solid var(--toolbar__overflow-menu__icon-button__border-color)}.toolbar-wrapper .overflow .overflow-menu ::ng-deep bmw-icon-button:last-child button{padding-bottom:calc(var(--icon-button__medium__padding) - 1px)}"]
        })
    ], ToolbarComponent);
    return ToolbarComponent;
}());
export { ToolbarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYm13LWRzL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJ0b29sYmFyL3Rvb2xiYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUVULGVBQWUsRUFFZixZQUFZLEVBQ1osU0FBUyxFQUVULFdBQVcsRUFDWCxLQUFLLEVBQ0wsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBT3ZCLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBTTNFO0lBdUJFO1FBYkEsaUJBQVksR0FBMkIsRUFBRSxDQUFDO1FBQzFDLGdCQUFXLEdBQTJCLEVBQUUsQ0FBQztRQUN6QyxXQUFNLEdBQUcsS0FBSyxDQUFDO1FBWWIsSUFBSSxTQUFTLEVBQUUsRUFBRTtZQUNmLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0ZBQXdGLENBQUMsQ0FBQztTQUN4RztJQUNILENBQUM7SUFaRCwyQ0FBZ0IsR0FBaEI7UUFEQSxpQkFPQztRQUxDLHdDQUF3QztRQUN4QyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztZQUNuQyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNULENBQUM7SUFRRCw2Q0FBa0IsR0FBbEI7UUFBQSxpQkFhQztRQVpDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNWLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRTtpQkFDcEIsUUFBUSxDQUFDLEVBQUUsQ0FBQztpQkFDWixTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBQyxJQUFJLEVBQUUsS0FBSztZQUM3QixLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQztnQkFDckIsTUFBTSxFQUFFLElBQUk7Z0JBQ1osS0FBSyxFQUFFLEtBQUs7YUFDYixDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRUQsb0NBQVMsR0FBVCxVQUFVLElBQXlCO1FBQ2pDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxtQ0FBUSxHQUFSLFVBQVMsT0FBaUI7UUFBMUIsaUJBZ0JDO1FBZkMsSUFBSSxPQUFPLEVBQUU7WUFDWCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDaEI7UUFDRCx5QkFBeUI7UUFDekIsVUFBVSxDQUFDO1lBQ1QsSUFBTSxtQkFBbUIsR0FBRyxRQUFRLENBQUMsS0FBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDekcsSUFBTSxnQkFBZ0IsR0FBRyxRQUFRLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDakcsSUFBSSxnQkFBZ0IsR0FBRyxtQkFBbUIsRUFBRTtnQkFDMUMsS0FBSSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNaLHlCQUF5QjtnQkFDekIsVUFBVSxDQUFDO29CQUNULEtBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDbEIsQ0FBQyxDQUFDLENBQUM7YUFDSjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELCtCQUFJLEdBQUo7UUFDRSxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsV0FBVyxZQUFPLElBQUksRUFBSyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELGtDQUFPLEdBQVA7UUFDRSxJQUFJLENBQUMsWUFBWSxZQUFPLElBQUksQ0FBQyxZQUFZLEVBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxxQ0FBVSxHQUFWO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDN0IsQ0FBQztJQTVFRDtRQURDLFNBQVMsQ0FBQyxTQUFTLENBQUM7cURBQ0Q7SUFFcEI7UUFEQyxTQUFTLENBQUMsY0FBYyxDQUFDOzBEQUNEO0lBRXpCO1FBREMsZUFBZSxDQUFDLG1CQUFtQixDQUFDO21EQUNDO0lBR3RDO1FBRkMsV0FBVyxDQUFDLFNBQVMsQ0FBQztRQUN0QixLQUFLLEVBQUU7Z0RBQ0c7SUFNWDtRQURDLFlBQVksQ0FBQyxlQUFlLENBQUM7NERBTzdCO0lBckJVLGdCQUFnQjtRQUw1QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsYUFBYTtZQUN2Qiw2NUJBQXVDOztTQUV4QyxDQUFDO09BQ1csZ0JBQWdCLENBK0U1QjtJQUFELHVCQUFDO0NBQUEsQUEvRUQsSUErRUM7U0EvRVksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBBZnRlckNvbnRlbnRJbml0LFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIFF1ZXJ5TGlzdCxcbiAgSG9zdExpc3RlbmVyLFxuICBWaWV3Q2hpbGQsXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RCaW5kaW5nLFxuICBJbnB1dCxcbiAgaXNEZXZNb2RlXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbnRlcmZhY2UgSW5uZXJCdXR0b25Db21wb25lbnQge1xuICBidXR0b246IEljb25CdXR0b25Db21wb25lbnQ7XG4gIGluZGV4OiBudW1iZXI7XG59XG5cbmltcG9ydCB7IEljb25CdXR0b25Db21wb25lbnQgfSBmcm9tICcuLi9pY29uLWJ1dHRvbi9pY29uLWJ1dHRvbi5jb21wb25lbnQnO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYm13LXRvb2xiYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdG9vbGJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Rvb2xiYXIuY29tcG9uZW50Lmxlc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUb29sYmFyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBWaWV3Q2hpbGQoJ3dyYXBwZXInKVxuICB3cmFwcGVyOiBFbGVtZW50UmVmO1xuICBAVmlld0NoaWxkKCdpY29uc1dyYXBwZXInKVxuICBpY29uc1dyYXBwZXI6IEVsZW1lbnRSZWY7XG4gIEBDb250ZW50Q2hpbGRyZW4oSWNvbkJ1dHRvbkNvbXBvbmVudClcbiAgaWNvbnM6IFF1ZXJ5TGlzdDxJY29uQnV0dG9uQ29tcG9uZW50PjtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmlkJylcbiAgQElucHV0KClcbiAgaWQ6IHN0cmluZztcbiAgdmlzaWJsZUljb25zOiBJbm5lckJ1dHRvbkNvbXBvbmVudFtdID0gW107XG4gIGhpZGRlbkljb25zOiBJbm5lckJ1dHRvbkNvbXBvbmVudFtdID0gW107XG4gIG9wZW5lZCA9IGZhbHNlO1xuICByZXNpemVUaW1lcjogbnVtYmVyO1xuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6cmVzaXplJylcbiAgbGlzdGVuZXJGdW5jdGlvbigpOiB2b2lkIHtcbiAgICAvL3dhaXQgYXQgbGVhc3QgMTBtaWxzIGJldHdlZW4gcmUtcmVuZGVyXG4gICAgY2xlYXJUaW1lb3V0KHRoaXMucmVzaXplVGltZXIpO1xuICAgIHRoaXMucmVzaXplVGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLm9uUmVzaXplKHRydWUpO1xuICAgIH0sIDEwKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmIChpc0Rldk1vZGUoKSkge1xuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nIC0gPGJtdy10b29sYmFyPiBjb21wb25lbnQgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZScpO1xuICAgIH1cbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICBpZiAoIXRoaXMuaWQpXG4gICAgICB0aGlzLmlkID0gTWF0aC5yYW5kb20oKVxuICAgICAgICAudG9TdHJpbmcoMzYpXG4gICAgICAgIC5zdWJzdHJpbmcoMik7XG5cbiAgICB0aGlzLmljb25zLmZvckVhY2goKGljb24sIGluZGV4KSA9PiB7XG4gICAgICB0aGlzLnZpc2libGVJY29ucy5wdXNoKHtcbiAgICAgICAgYnV0dG9uOiBpY29uLFxuICAgICAgICBpbmRleDogaW5kZXhcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHRoaXMub25SZXNpemUoKTtcbiAgfVxuXG4gIGljb25DbGljayhpY29uOiBJY29uQnV0dG9uQ29tcG9uZW50KSB7XG4gICAgaWNvbi5jbGlja0V2ZW50LmVtaXQoaWNvbik7XG4gIH1cblxuICBvblJlc2l6ZShzaG93QWxsPzogYm9vbGVhbikge1xuICAgIGlmIChzaG93QWxsKSB7XG4gICAgICB0aGlzLnNob3dBbGwoKTtcbiAgICB9XG4gICAgLy93YWl0IHRpbGwgRE9NIHJlLXJlbmRlclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgX2ljb25zV3JhcHBlckhlaWdodCA9IHBhcnNlSW50KHRoaXMuaWNvbnNXcmFwcGVyLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0LCAxMCk7XG4gICAgICBjb25zdCBfY29tcG9uZW50SGVpZ2h0ID0gcGFyc2VJbnQodGhpcy53cmFwcGVyLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0LCAxMCk7XG4gICAgICBpZiAoX2NvbXBvbmVudEhlaWdodCA8IF9pY29uc1dyYXBwZXJIZWlnaHQpIHtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIC8vd2FpdCB0aWxsIERPTSByZS1yZW5kZXJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5vblJlc2l6ZSgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgY29uc3QgaWNvbiA9IHRoaXMudmlzaWJsZUljb25zLnNwbGljZSgtMSwgMSk7XG4gICAgdGhpcy5oaWRkZW5JY29ucyA9IFsuLi5pY29uLCAuLi50aGlzLmhpZGRlbkljb25zXTtcbiAgfVxuXG4gIHNob3dBbGwoKTogdm9pZCB7XG4gICAgdGhpcy52aXNpYmxlSWNvbnMgPSBbLi4udGhpcy52aXNpYmxlSWNvbnMsIC4uLnRoaXMuaGlkZGVuSWNvbnNdO1xuICAgIHRoaXMuaGlkZGVuSWNvbnMgPSBbXTtcbiAgfVxuXG4gIHRvZ2dsZU1lbnUoKSB7XG4gICAgdGhpcy5vcGVuZWQgPSAhdGhpcy5vcGVuZWQ7XG4gIH1cbn1cbiJdfQ==