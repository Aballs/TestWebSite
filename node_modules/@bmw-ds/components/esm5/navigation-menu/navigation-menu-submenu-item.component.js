import { __decorate } from "tslib";
import { takeUntil } from 'rxjs/operators';
import { NavigationService } from './navigation.service';
import { Component, HostBinding, Input, HostListener, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
var NavigationMenuSubmenuItemComponent = /** @class */ (function () {
    function NavigationMenuSubmenuItemComponent(_navService) {
        this._navService = _navService;
        this._selected = false;
        this._disabled = false;
        this._destroyed$ = new Subject();
        this.selectedEvent = new Subject();
    }
    Object.defineProperty(NavigationMenuSubmenuItemComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            if (value)
                this._selected = false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavigationMenuSubmenuItemComponent.prototype, "selected", {
        get: function () {
            return this._selected;
        },
        set: function (value) {
            if (this.disabled || value === this._selected)
                return;
            this._selected = value;
        },
        enumerable: true,
        configurable: true
    });
    NavigationMenuSubmenuItemComponent.prototype.onKeydown = function (event) {
        var key = event.code || event.keyCode;
        if (['Enter', 13, 'Space', 32].includes(key) && event.target === this.submenuItemWrapper.nativeElement) {
            this.clickEvent(null);
            event.preventDefault();
            event.stopPropagation();
        }
    };
    NavigationMenuSubmenuItemComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        this._navService.selectionChange.pipe(takeUntil(this._destroyed$)).subscribe(function (item) {
            if (item !== _this) {
                _this.selected = false;
            }
        });
    };
    NavigationMenuSubmenuItemComponent.prototype.ngOnDestroy = function () {
        this._destroyed$.next();
        this._destroyed$.complete();
    };
    NavigationMenuSubmenuItemComponent.prototype.clickEvent = function ($event) {
        $event === null || $event === void 0 ? void 0 : $event.stopPropagation();
        if (this.disabled || this.selected)
            return;
        this._navService.selectItem(this);
        this._selected = true;
        this.selectedEvent.next(this);
    };
    NavigationMenuSubmenuItemComponent.ctorParameters = function () { return [
        { type: NavigationService }
    ]; };
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], NavigationMenuSubmenuItemComponent.prototype, "id", void 0);
    __decorate([
        Input()
    ], NavigationMenuSubmenuItemComponent.prototype, "disabled", null);
    __decorate([
        Input()
    ], NavigationMenuSubmenuItemComponent.prototype, "selected", null);
    __decorate([
        ViewChild('submenuItemWrapper')
    ], NavigationMenuSubmenuItemComponent.prototype, "submenuItemWrapper", void 0);
    __decorate([
        HostListener('keydown', ['$event'])
    ], NavigationMenuSubmenuItemComponent.prototype, "onKeydown", null);
    NavigationMenuSubmenuItemComponent = __decorate([
        Component({
            selector: 'bmw-navigation-menu-submenu-item',
            template: "<div\n  #submenuItemWrapper\n  class=\"submenu-item-wrapper\"\n  [ngClass]=\"{ selected: selected, disabled: disabled }\"\n  (click)=\"clickEvent($event)\"\n  [tabindex]=\"-1\"\n>\n  <ng-content></ng-content>\n</div>\n",
            styles: [".submenu-item-wrapper{display:block;padding:calc(var(--navigation-menu__icon__padding) * 2) 0;cursor:pointer;background-color:var(--navigation-menu__default__submenu__background-color);padding-left:calc(var(--navigation-menu__icon__padding) * 2 + var(--navigation-menu__icon__font-size) + var(--navigation-menu__item__padding-left) + var(--navigation-menu__submenu-item__padding-left));overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.submenu-item-wrapper.selected{background-color:var(--navigation-menu__selected__background-color);color:var(--navigation-menu__selected__color)}.submenu-item-wrapper.selected:hover{background-color:var(--navigation-menu__selected__background-color)}.submenu-item-wrapper:hover{background-color:var(--navigation-menu__hover__background-color)}.submenu-item-wrapper:focus{background-color:var(--navigation-menu__hover__background-color);outline:solid 1px;outline-color:var(--color-bmw-highlight);outline-offset:-1px}.submenu-item-wrapper:focus.selected{background-color:var(--navigation-menu__selected__background-color);outline:solid 1px;outline-color:var(--color-bmw-basic5);outline-offset:-3px}.submenu-item-wrapper.disabled{cursor:no-drop;opacity:.5}"]
        })
    ], NavigationMenuSubmenuItemComponent);
    return NavigationMenuSubmenuItemComponent;
}());
export { NavigationMenuSubmenuItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1tZW51LXN1Ym1lbnUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYm13LWRzL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJuYXZpZ2F0aW9uLW1lbnUvbmF2aWdhdGlvbi1tZW51LXN1Ym1lbnUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFVLFdBQVcsRUFBRSxLQUFLLEVBQWEsWUFBWSxFQUFFLFNBQVMsRUFBYyxNQUFNLGVBQWUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBTy9CO0lBeUNFLDRDQUFvQixXQUE4QjtRQUE5QixnQkFBVyxHQUFYLFdBQVcsQ0FBbUI7UUF4QzFDLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDbEIsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixnQkFBVyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUEwQnBDLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQXNDLENBQUM7SUFZYixDQUFDO0lBaEN0RCxzQkFBSSx3REFBUTthQUlaO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7YUFORCxVQUFhLEtBQWM7WUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7WUFDdkIsSUFBSSxLQUFLO2dCQUFFLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3BDLENBQUM7OztPQUFBO0lBS0Qsc0JBQUksd0RBQVE7YUFLWjtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDO2FBUEQsVUFBYSxLQUFjO1lBQ3pCLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDLFNBQVM7Z0JBQUUsT0FBTztZQUV0RCxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN6QixDQUFDOzs7T0FBQTtJQVdELHNEQUFTLEdBQVQsVUFBVSxLQUFvQjtRQUM1QixJQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFFeEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxhQUFhLEVBQUU7WUFDdEcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN0QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztJQUdELHFEQUFRLEdBQVI7UUFBQSxpQkFZQztRQVhDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2lCQUNwQixRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQjtRQUVELElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUEsSUFBSTtZQUMvRSxJQUFJLElBQUksS0FBSyxLQUFJLEVBQUU7Z0JBQ2pCLEtBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO2FBQ3ZCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsd0RBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQsdURBQVUsR0FBVixVQUFXLE1BQU07UUFDZixNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsZUFBZSxHQUFHO1FBQzFCLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUTtZQUFFLE9BQU87UUFDM0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Z0JBM0JnQyxpQkFBaUI7O0lBbENsRDtRQUZDLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFDdEIsS0FBSyxFQUFFO2tFQUNHO0lBRVg7UUFEQyxLQUFLLEVBQUU7c0VBSVA7SUFLRDtRQURDLEtBQUssRUFBRTtzRUFLUDtJQU1EO1FBREMsU0FBUyxDQUFDLG9CQUFvQixDQUFDO2tGQUNEO0lBSy9CO1FBREMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3VFQVNuQztJQXhDVSxrQ0FBa0M7UUFMOUMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtDQUFrQztZQUM1QyxzT0FBNEQ7O1NBRTdELENBQUM7T0FDVyxrQ0FBa0MsQ0FxRTlDO0lBQUQseUNBQUM7Q0FBQSxBQXJFRCxJQXFFQztTQXJFWSxrQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uU2VydmljZSB9IGZyb20gJy4vbmF2aWdhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBIb3N0QmluZGluZywgSW5wdXQsIE9uRGVzdHJveSwgSG9zdExpc3RlbmVyLCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYm13LW5hdmlnYXRpb24tbWVudS1zdWJtZW51LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vbmF2aWdhdGlvbi1tZW51LXN1Ym1lbnUtaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hdmlnYXRpb24tbWVudS1zdWJtZW51LWl0ZW0uY29tcG9uZW50Lmxlc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBOYXZpZ2F0aW9uTWVudVN1Ym1lbnVJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwcml2YXRlIF9zZWxlY3RlZCA9IGZhbHNlO1xuICBwcml2YXRlIF9kaXNhYmxlZCA9IGZhbHNlO1xuICBwcml2YXRlIF9kZXN0cm95ZWQkID0gbmV3IFN1YmplY3QoKTtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuICBASW5wdXQoKVxuICBpZDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9kaXNhYmxlZCA9IHZhbHVlO1xuICAgIGlmICh2YWx1ZSkgdGhpcy5fc2VsZWN0ZWQgPSBmYWxzZTtcbiAgfVxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBzZWxlY3RlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIGlmICh0aGlzLmRpc2FibGVkIHx8IHZhbHVlID09PSB0aGlzLl9zZWxlY3RlZCkgcmV0dXJuO1xuXG4gICAgdGhpcy5fc2VsZWN0ZWQgPSB2YWx1ZTtcbiAgfVxuICBnZXQgc2VsZWN0ZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3NlbGVjdGVkO1xuICB9XG5cbiAgQFZpZXdDaGlsZCgnc3VibWVudUl0ZW1XcmFwcGVyJylcbiAgc3VibWVudUl0ZW1XcmFwcGVyOiBFbGVtZW50UmVmO1xuXG4gIHNlbGVjdGVkRXZlbnQgPSBuZXcgU3ViamVjdDxOYXZpZ2F0aW9uTWVudVN1Ym1lbnVJdGVtQ29tcG9uZW50PigpO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24nLCBbJyRldmVudCddKVxuICBvbktleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5jb2RlIHx8IGV2ZW50LmtleUNvZGU7XG5cbiAgICBpZiAoWydFbnRlcicsIDEzLCAnU3BhY2UnLCAzMl0uaW5jbHVkZXMoa2V5KSAmJiBldmVudC50YXJnZXQgPT09IHRoaXMuc3VibWVudUl0ZW1XcmFwcGVyLm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgIHRoaXMuY2xpY2tFdmVudChudWxsKTtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gIH1cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfbmF2U2VydmljZTogTmF2aWdhdGlvblNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLmlkKSB7XG4gICAgICB0aGlzLmlkID0gTWF0aC5yYW5kb20oKVxuICAgICAgICAudG9TdHJpbmcoMzYpXG4gICAgICAgIC5zdWJzdHJpbmcoMik7XG4gICAgfVxuXG4gICAgdGhpcy5fbmF2U2VydmljZS5zZWxlY3Rpb25DaGFuZ2UucGlwZSh0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCkpLnN1YnNjcmliZShpdGVtID0+IHtcbiAgICAgIGlmIChpdGVtICE9PSB0aGlzKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX2Rlc3Ryb3llZCQubmV4dCgpO1xuICAgIHRoaXMuX2Rlc3Ryb3llZCQuY29tcGxldGUoKTtcbiAgfVxuXG4gIGNsaWNrRXZlbnQoJGV2ZW50KSB7XG4gICAgJGV2ZW50Py5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCB0aGlzLnNlbGVjdGVkKSByZXR1cm47XG4gICAgdGhpcy5fbmF2U2VydmljZS5zZWxlY3RJdGVtKHRoaXMpO1xuICAgIHRoaXMuX3NlbGVjdGVkID0gdHJ1ZTtcbiAgICB0aGlzLnNlbGVjdGVkRXZlbnQubmV4dCh0aGlzKTtcbiAgfVxufVxuIl19