import { __decorate } from "tslib";
import { takeUntil } from 'rxjs/operators';
import { NavigationService } from './navigation.service';
import { Component, OnInit, Input, QueryList, ElementRef, HostBinding, HostListener, ContentChild, ContentChildren, OnDestroy, NgZone, ViewChild } from '@angular/core';
import { NavigationMenuSubmenuComponent } from './navigation-menu-submenu.component';
import { NavigationMenuSubmenuItemComponent } from './navigation-menu-submenu-item.component';
import { Subject } from 'rxjs';
var NavigationMenuItemComponent = /** @class */ (function () {
    function NavigationMenuItemComponent(_el, _navService, _zone) {
        this._el = _el;
        this._navService = _navService;
        this._zone = _zone;
        this._selected = false;
        this._disabled = false;
        this._destroyed$ = new Subject();
        this.offsetTop = 0;
        this.subMenuItemSelected = false;
        this.selectedEvent = new Subject();
        this.expandSubmenu = false;
        this.popUp = false;
    }
    Object.defineProperty(NavigationMenuItemComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            if (value)
                this._selected = false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavigationMenuItemComponent.prototype, "selected", {
        get: function () {
            return this._selected;
        },
        set: function (value) {
            if (this.disabled || value === this._selected)
                return;
            this._selected = value;
        },
        enumerable: true,
        configurable: true
    });
    NavigationMenuItemComponent.prototype.onMouseOver = function () {
        if (this.disabled)
            return;
        this.popUp = true;
        this.updatePopupPosition();
    };
    NavigationMenuItemComponent.prototype.onMouseOut = function (event) {
        if (event && this._el.nativeElement.contains(event.relatedTarget)) {
            return;
        }
        this.popUp = false;
    };
    NavigationMenuItemComponent.prototype.onKeydown = function (event) {
        var key = event.code || event.keyCode;
        switch (key) {
            case 'ArrowDown':
            case 40:
                if (this.popUp) {
                    this.setNextSubmenuItemAsFocused(event.target);
                    event.stopPropagation();
                    event.preventDefault();
                }
                break;
            case 'ArrowUp':
            case 38:
                if (this.popUp) {
                    this.setPreviousSubmenuItemAsFocused(event.target);
                    event.stopPropagation();
                    event.preventDefault();
                }
                break;
            case 'ArrowLeft':
            case 37:
                if (this.popUp) {
                    this.labelWrapper.nativeElement.focus();
                    this.onMouseOver();
                    event.preventDefault();
                    event.stopPropagation();
                }
                break;
        }
    };
    NavigationMenuItemComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        this._navService.selectionChange.pipe(takeUntil(this._destroyed$)).subscribe(function (item) {
            if (item !== _this) {
                _this.selected = false;
            }
            _this.subMenuItemSelected = !!_this.submenuItems.find(function (i) { return i === item; });
        });
        this._navService.menuOpened.pipe(takeUntil(this._destroyed$)).subscribe(function (open) {
            _this.menuIsOpened = open;
        });
    };
    NavigationMenuItemComponent.prototype.updatePopupPosition = function () {
        var rect = this._el.nativeElement.getBoundingClientRect();
        var parentRect = this._el.nativeElement.offsetParent.getBoundingClientRect();
        this.offsetTop = rect.top - parentRect.top;
    };
    NavigationMenuItemComponent.prototype.ngOnDestroy = function () {
        this._destroyed$.next();
        this._destroyed$.complete();
    };
    NavigationMenuItemComponent.prototype.click = function ($event) {
        $event === null || $event === void 0 ? void 0 : $event.stopPropagation();
        if (this.disabled || this.selected)
            return;
        if (this.submenu) {
            this.expandSubmenu = !this.expandSubmenu;
        }
        else {
            this._selected = true;
            this.selectedEvent.next(this);
            this._navService.selectItem(this);
        }
    };
    NavigationMenuItemComponent.prototype.toggleSubmenuPopup = function () {
        if (this.popUp) {
            this.onMouseOut(null);
        }
        else {
            this.onMouseOver();
        }
    };
    NavigationMenuItemComponent.prototype.setPreviousSubmenuItemAsFocused = function (target) {
        if (this.submenuItems.length > 0 && this.submenuItems.some(function (item) { return !item.disabled; })) {
            var submenuItemsArray = this.submenuItems.toArray();
            var focusedItemIndex = -1;
            if (target) {
                focusedItemIndex = submenuItemsArray.findIndex(function (item) { return item.submenuItemWrapper.nativeElement === target; });
            }
            else {
                focusedItemIndex = submenuItemsArray.findIndex(function (item) { return item.submenuItemWrapper.nativeElement === document.activeElement; });
            }
            if (focusedItemIndex !== -1 && focusedItemIndex !== 0) {
                focusedItemIndex = focusedItemIndex - 1;
            }
            else {
                focusedItemIndex = submenuItemsArray.length - 1;
            }
            if (submenuItemsArray[focusedItemIndex].disabled) {
                this.setNextSubmenuItemAsFocused(submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement);
            }
            else {
                submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement.focus();
            }
        }
    };
    NavigationMenuItemComponent.prototype.setNextSubmenuItemAsFocused = function (target) {
        if (this.submenuItems.length > 0 && this.submenuItems.some(function (item) { return !item.disabled; })) {
            var submenuItemsArray = this.submenuItems.toArray();
            var focusedItemIndex = -1;
            if (target) {
                focusedItemIndex = submenuItemsArray.findIndex(function (item) { return item.submenuItemWrapper.nativeElement === target; });
            }
            else {
                focusedItemIndex = submenuItemsArray.findIndex(function (item) { return item.submenuItemWrapper.nativeElement === document.activeElement; });
            }
            if (focusedItemIndex !== -1 && focusedItemIndex !== submenuItemsArray.length - 1) {
                focusedItemIndex = focusedItemIndex + 1;
            }
            else {
                focusedItemIndex = 0;
            }
            if (submenuItemsArray[focusedItemIndex].disabled) {
                this.setNextSubmenuItemAsFocused(submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement);
            }
            else {
                submenuItemsArray[focusedItemIndex].submenuItemWrapper.nativeElement.focus();
            }
        }
    };
    NavigationMenuItemComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NavigationService },
        { type: NgZone }
    ]; };
    __decorate([
        Input()
    ], NavigationMenuItemComponent.prototype, "menuIsOpened", void 0);
    __decorate([
        ContentChild(NavigationMenuSubmenuComponent)
    ], NavigationMenuItemComponent.prototype, "submenu", void 0);
    __decorate([
        ContentChildren(NavigationMenuSubmenuItemComponent, { descendants: true })
    ], NavigationMenuItemComponent.prototype, "submenuItems", void 0);
    __decorate([
        Input()
    ], NavigationMenuItemComponent.prototype, "icon", void 0);
    __decorate([
        Input()
    ], NavigationMenuItemComponent.prototype, "label", void 0);
    __decorate([
        Input()
    ], NavigationMenuItemComponent.prototype, "disabled", null);
    __decorate([
        Input()
    ], NavigationMenuItemComponent.prototype, "selected", null);
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], NavigationMenuItemComponent.prototype, "id", void 0);
    __decorate([
        ViewChild('labelWrapper')
    ], NavigationMenuItemComponent.prototype, "labelWrapper", void 0);
    __decorate([
        HostListener('mouseover', [])
    ], NavigationMenuItemComponent.prototype, "onMouseOver", null);
    __decorate([
        HostListener('mouseout', ['$event'])
    ], NavigationMenuItemComponent.prototype, "onMouseOut", null);
    __decorate([
        HostListener('keydown', ['$event'])
    ], NavigationMenuItemComponent.prototype, "onKeydown", null);
    NavigationMenuItemComponent = __decorate([
        Component({
            selector: 'bmw-navigation-menu-item',
            template: "<div\n  class=\"navigation-menu-item-wrapper bmw-component-text\"\n  [ngClass]=\"{\n    hover: popUp,\n    disabled: disabled,\n    selected: !submenu && selected,\n    submenu: submenu,\n    'submenu-selected': subMenuItemSelected,\n    'menu-closed': !menuIsOpened\n  }\"\n  [attr.aria-disabled]=\"disabled\"\n  (click)=\"click($event)\"\n>\n  <div #labelWrapper class=\"label-wrapper\" [tabindex]=\"disabled ? -1 : 0\">\n    <div class=\"menu-item-label\">\n      <i class=\"menu-item-icon\" [ngClass]=\"icon\"> </i>\n      <div class=\"menu-item-label-text\">\n        <span>{{ label }}</span>\n        <i\n          class=\"chevron\"\n          [ngClass]=\"expandSubmenu ? 'iwp-icon-gen_nav_arrow_up' : 'iwp-icon-gen_nav_arrow_down'\"\n          *ngIf=\"submenu\"\n        ></i>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"submenu-wrapper\" *ngIf=\"menuIsOpened && expandSubmenu\">\n    <div class=\"submenu-outlet\">\n      <ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n    </div>\n  </div>\n\n  <div class=\"pop-up bmw-component-text\" *ngIf=\"!menuIsOpened && popUp\" [style.top.px]=\"offsetTop\">\n    <div class=\"item-label\" [class.has-submenu]=\"submenu\">\n      <span>{{ label }}</span>\n      <i class=\"chevron\" [ngClass]=\"'iwp-icon-gen_nav_arrow_up'\" *ngIf=\"submenu\"></i>\n    </div>\n    <div class=\"item-content\">\n      <ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #tempOutlet>\n  <ng-content></ng-content>\n</ng-template>\n",
            styles: ["::ng-deep .navigation-menu-wrapper .menu-item-label-text{display:none}::ng-deep .navigation-menu-wrapper.opened .menu-item-label-text{display:flex}::ng-deep .navigation-menu-wrapper.opened .pop-up{display:none}::ng-deep .pop-up .navigation-submenu-wrapper .submenu-item-wrapper,::ng-deep .pop-up .navigation-submenu-wrapper .submenu-label{padding-left:calc(1rem + 1rem);padding-left:calc(var(--navigation-menu__item__padding-left) + var(--navigation-menu__popup__submenu-item__padding-left))}::ng-deep .pop-up .navigation-submenu-wrapper.second-level .submenu-item-wrapper{padding-left:calc(var(--navigation-menu__item__padding-left) + var(--navigation-menu__popup__submenu-item__padding-left) + var(--navigation-menu__submenu-item__second-level__padding-left))}::ng-deep .pop-up .navigation-submenu-wrapper:focus{background-color:var(--navigation-menu__hover__background-color);outline:0}.menu-item-label{display:flex;align-items:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;padding:var(--navigation-menu__icon__padding)}.selected .menu-item-label{color:var(--navigation-menu__selected__color)}.menu-item-label .menu-item-label-text{padding-left:var(--navigation-menu__item__padding-left);align-items:center;justify-content:space-between;overflow:hidden;flex:1 0 0%;text-overflow:ellipsis}.menu-item-label .menu-item-label-text span{overflow:hidden;text-overflow:ellipsis}.disabled .menu-item-label{opacity:.5;cursor:no-drop}.disabled .menu-item-label *{cursor:no-drop}.navigation-menu-item-wrapper{color:var(--navigation-menu__default__color)}.navigation-menu-item-wrapper .menu-item-icon{font-size:var(--navigation-menu__icon__font-size);cursor:pointer}.navigation-menu-item-wrapper .label-wrapper:focus,.navigation-menu-item-wrapper .label-wrapper:hover,.navigation-menu-item-wrapper:not(.selected) .item-label:hover{background-color:var(--navigation-menu__hover__background-color);outline:0}.navigation-menu-item-wrapper .label-wrapper{padding:var(--navigation-menu__icon__padding)}.navigation-menu-item-wrapper.menu-closed.submenu-selected .label-wrapper{background-color:var(--navigation-menu__selected__background-color);color:var(--navigation-menu__selected__color)}.navigation-menu-item-wrapper.menu-closed.submenu-selected .label-wrapper:focus{outline:solid 1px;outline-color:var(--color-bmw-basic5);outline-offset:-3px}.navigation-menu-item-wrapper.selected{color:var(--navigation-menu__selected__color)}.navigation-menu-item-wrapper.selected .label-wrapper{background-color:var(--navigation-menu__selected__background-color)}.navigation-menu-item-wrapper.selected .pop-up{color:var(--navigation-menu__selected__color);background-color:var(--navigation-menu__selected__background-color)}.navigation-menu-item-wrapper.disabled .label-wrapper{opacity:.5}.opened-label{display:none}.pop-up{position:absolute;top:0;z-index:var(--navigation-menu__z-index___popup);left:100%;width:calc(var(--navigation-menu__opened__width) - var(--navigation-menu__icon__font-size) - 2 * var(--navigation-menu__icon__padding));border:1px solid var(--navigation-menu__default__border-right-color);background-color:var(--navigation-menu__item__background-color)}.pop-up .item-label{display:flex;align-items:center;justify-content:space-between;line-height:var(--navigation-menu__icon__font-size);padding:calc(var(--navigation-menu__icon__padding) * 2 - 1px);padding-left:var(--navigation-menu__item__padding-left);cursor:pointer}.pop-up .item-label.has-submenu,.pop-up .item-label.has-submenu .chevron{cursor:default}.pop-up .item-label span{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.pop-up .item-content{background-color:var(--navigation-menu__default__submenu__background-color)}:host{display:block}"]
        })
    ], NavigationMenuItemComponent);
    return NavigationMenuItemComponent;
}());
export { NavigationMenuItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1tZW51LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJtdy1kcy9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibmF2aWdhdGlvbi1tZW51L25hdmlnYXRpb24tbWVudS1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFDTCxTQUFTLEVBQ1QsTUFBTSxFQUNOLEtBQUssRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxZQUFZLEVBQ1osWUFBWSxFQUNaLGVBQWUsRUFDZixTQUFTLEVBQ1QsTUFBTSxFQUNOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNyRixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUM5RixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBTy9CO0lBNkZFLHFDQUFvQixHQUFlLEVBQVUsV0FBOEIsRUFBVSxLQUFhO1FBQTlFLFFBQUcsR0FBSCxHQUFHLENBQVk7UUFBVSxnQkFBVyxHQUFYLFdBQVcsQ0FBbUI7UUFBVSxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBNUYxRixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDbEIsZ0JBQVcsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQ3BDLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFFZCx3QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFDNUIsa0JBQWEsR0FBRyxJQUFJLE9BQU8sRUFBK0IsQ0FBQztRQUMzRCxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0QixVQUFLLEdBQUcs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aUVBTXBDO0lBR0Q7UUFEQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7Z0VBZ0NuQztJQTNGVSwyQkFBMkI7UUFMdkMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyxvaERBQW9EOztTQUVyRCxDQUFDO09BQ1csMkJBQTJCLENBaU12QztJQUFELGtDQUFDO0NBQUEsQUFqTUQsSUFpTUM7U0FqTVksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgSW5wdXQsXG4gIFF1ZXJ5TGlzdCxcbiAgRWxlbWVudFJlZixcbiAgSG9zdEJpbmRpbmcsXG4gIEhvc3RMaXN0ZW5lcixcbiAgQ29udGVudENoaWxkLFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIE9uRGVzdHJveSxcbiAgTmdab25lLFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uTWVudVN1Ym1lbnVDb21wb25lbnQgfSBmcm9tICcuL25hdmlnYXRpb24tbWVudS1zdWJtZW51LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uTWVudVN1Ym1lbnVJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9uYXZpZ2F0aW9uLW1lbnUtc3VibWVudS1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Jtdy1uYXZpZ2F0aW9uLW1lbnUtaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9uYXZpZ2F0aW9uLW1lbnUtaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hdmlnYXRpb24tbWVudS1pdGVtLmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgTmF2aWdhdGlvbk1lbnVJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwcml2YXRlIF9zZWxlY3RlZCA9IGZhbHNlO1xuICBwcml2YXRlIF9kaXNhYmxlZCA9IGZhbHNlO1xuICBwcml2YXRlIF9kZXN0cm95ZWQkID0gbmV3IFN1YmplY3QoKTtcbiAgb2Zmc2V0VG9wID0gMDtcblxuICBzdWJNZW51SXRlbVNlbGVjdGVkID0gZmFsc2U7XG4gIHNlbGVjdGVkRXZlbnQgPSBuZXcgU3ViamVjdDxOYXZpZ2F0aW9uTWVudUl0ZW1Db21wb25lbnQ+KCk7XG4gIGV4cGFuZFN1Ym1lbnUgPSBmYWxzZTtcbiAgcG9wVXAgPSBmYWxzZTtcbiAgQElucHV0KClcbiAgbWVudUlzT3BlbmVkOiBib29sZWFuO1xuICBAQ29udGVudENoaWxkKE5hdmlnYXRpb25NZW51U3VibWVudUNvbXBvbmVudClcbiAgc3VibWVudTogTmF2aWdhdGlvbk1lbnVTdWJtZW51Q29tcG9uZW50O1xuICBAQ29udGVudENoaWxkcmVuKE5hdmlnYXRpb25NZW51U3VibWVudUl0ZW1Db21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSlcbiAgc3VibWVudUl0ZW1zOiBRdWVyeUxpc3Q8TmF2aWdhdGlvbk1lbnVTdWJtZW51SXRlbUNvbXBvbmVudD47XG4gIEBJbnB1dCgpXG4gIGljb246IHN0cmluZztcbiAgQElucHV0KClcbiAgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fZGlzYWJsZWQgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUpIHRoaXMuX3NlbGVjdGVkID0gZmFsc2U7XG4gIH1cbiAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuICBASW5wdXQoKVxuICBzZXQgc2VsZWN0ZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCB2YWx1ZSA9PT0gdGhpcy5fc2VsZWN0ZWQpIHJldHVybjtcblxuICAgIHRoaXMuX3NlbGVjdGVkID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuICBASW5wdXQoKVxuICBpZDogc3RyaW5nO1xuXG4gIEBWaWV3Q2hpbGQoJ2xhYmVsV3JhcHBlcicpXG4gIGxhYmVsV3JhcHBlcjogRWxlbWVudFJlZjtcblxuICBASG9zdExpc3RlbmVyKCdtb3VzZW92ZXInLCBbXSlcbiAgb25Nb3VzZU92ZXIoKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpIHJldHVybjtcbiAgICB0aGlzLnBvcFVwID0gdHJ1ZTtcbiAgICB0aGlzLnVwZGF0ZVBvcHVwUG9zaXRpb24oKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlb3V0JywgWyckZXZlbnQnXSlcbiAgb25Nb3VzZU91dChldmVudDogTW91c2VFdmVudCkge1xuICAgIGlmIChldmVudCAmJiB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKGV2ZW50LnJlbGF0ZWRUYXJnZXQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMucG9wVXAgPSBmYWxzZTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24nLCBbJyRldmVudCddKVxuICBvbktleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5jb2RlIHx8IGV2ZW50LmtleUNvZGU7XG5cbiAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgY2FzZSAnQXJyb3dEb3duJzpcbiAgICAgIGNhc2UgNDA6XG4gICAgICAgIGlmICh0aGlzLnBvcFVwKSB7XG4gICAgICAgICAgdGhpcy5zZXROZXh0U3VibWVudUl0ZW1Bc0ZvY3VzZWQoZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnQXJyb3dVcCc6XG4gICAgICBjYXNlIDM4OlxuICAgICAgICBpZiAodGhpcy5wb3BVcCkge1xuICAgICAgICAgIHRoaXMuc2V0UHJldmlvdXNTdWJtZW51SXRlbUFzRm9jdXNlZChldmVudC50YXJnZXQpO1xuICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0Fycm93TGVmdCc6XG4gICAgICBjYXNlIDM3OlxuICAgICAgICBpZiAodGhpcy5wb3BVcCkge1xuICAgICAgICAgIHRoaXMubGFiZWxXcmFwcGVyLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICB0aGlzLm9uTW91c2VPdmVyKCk7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbDogRWxlbWVudFJlZiwgcHJpdmF0ZSBfbmF2U2VydmljZTogTmF2aWdhdGlvblNlcnZpY2UsIHByaXZhdGUgX3pvbmU6IE5nWm9uZSkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAoIXRoaXMuaWQpIHtcbiAgICAgIHRoaXMuaWQgPSBNYXRoLnJhbmRvbSgpXG4gICAgICAgIC50b1N0cmluZygzNilcbiAgICAgICAgLnN1YnN0cmluZygyKTtcbiAgICB9XG5cbiAgICB0aGlzLl9uYXZTZXJ2aWNlLnNlbGVjdGlvbkNoYW5nZS5waXBlKHRha2VVbnRpbCh0aGlzLl9kZXN0cm95ZWQkKSkuc3Vic2NyaWJlKGl0ZW0gPT4ge1xuICAgICAgaWYgKGl0ZW0gIT09IHRoaXMpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgdGhpcy5zdWJNZW51SXRlbVNlbGVjdGVkID0gISF0aGlzLnN1Ym1lbnVJdGVtcy5maW5kKGkgPT4gaSA9PT0gaXRlbSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9uYXZTZXJ2aWNlLm1lbnVPcGVuZWQucGlwZSh0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCkpLnN1YnNjcmliZShvcGVuID0+IHtcbiAgICAgIHRoaXMubWVudUlzT3BlbmVkID0gb3BlbjtcbiAgICB9KTtcbiAgfVxuXG4gIHVwZGF0ZVBvcHVwUG9zaXRpb24oKSB7XG4gICAgY29uc3QgcmVjdCA9IHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgcGFyZW50UmVjdCA9IHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQub2Zmc2V0UGFyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHRoaXMub2Zmc2V0VG9wID0gcmVjdC50b3AgLSBwYXJlbnRSZWN0LnRvcDtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX2Rlc3Ryb3llZCQubmV4dCgpO1xuICAgIHRoaXMuX2Rlc3Ryb3llZCQuY29tcGxldGUoKTtcbiAgfVxuXG4gIGNsaWNrKCRldmVudCkge1xuICAgICRldmVudD8uc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQgfHwgdGhpcy5zZWxlY3RlZCkgcmV0dXJuO1xuICAgIGlmICh0aGlzLnN1Ym1lbnUpIHtcbiAgICAgIHRoaXMuZXhwYW5kU3VibWVudSA9ICF0aGlzLmV4cGFuZFN1Ym1lbnU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3NlbGVjdGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWRFdmVudC5uZXh0KHRoaXMpO1xuICAgICAgdGhpcy5fbmF2U2VydmljZS5zZWxlY3RJdGVtKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIHRvZ2dsZVN1Ym1lbnVQb3B1cCgpIHtcbiAgICBpZiAodGhpcy5wb3BVcCkge1xuICAgICAgdGhpcy5vbk1vdXNlT3V0KG51bGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9uTW91c2VPdmVyKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0UHJldmlvdXNTdWJtZW51SXRlbUFzRm9jdXNlZCh0YXJnZXQ/OiBFdmVudFRhcmdldCkge1xuICAgIGlmICh0aGlzLnN1Ym1lbnVJdGVtcy5sZW5ndGggPiAwICYmIHRoaXMuc3VibWVudUl0ZW1zLnNvbWUoaXRlbSA9PiAhaXRlbS5kaXNhYmxlZCkpIHtcbiAgICAgIGNvbnN0IHN1Ym1lbnVJdGVtc0FycmF5ID0gdGhpcy5zdWJtZW51SXRlbXMudG9BcnJheSgpO1xuICAgICAgbGV0IGZvY3VzZWRJdGVtSW5kZXggPSAtMTtcbiAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgZm9jdXNlZEl0ZW1JbmRleCA9IHN1Ym1lbnVJdGVtc0FycmF5LmZpbmRJbmRleChpdGVtID0+IGl0ZW0uc3VibWVudUl0ZW1XcmFwcGVyLm5hdGl2ZUVsZW1lbnQgPT09IHRhcmdldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb2N1c2VkSXRlbUluZGV4ID0gc3VibWVudUl0ZW1zQXJyYXkuZmluZEluZGV4KFxuICAgICAgICAgIGl0ZW0gPT4gaXRlbS5zdWJtZW51SXRlbVdyYXBwZXIubmF0aXZlRWxlbWVudCA9PT0gKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYXMgSFRNTEVsZW1lbnQpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAoZm9jdXNlZEl0ZW1JbmRleCAhPT0gLTEgJiYgZm9jdXNlZEl0ZW1JbmRleCAhPT0gMCkge1xuICAgICAgICBmb2N1c2VkSXRlbUluZGV4ID0gZm9jdXNlZEl0ZW1JbmRleCAtIDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb2N1c2VkSXRlbUluZGV4ID0gc3VibWVudUl0ZW1zQXJyYXkubGVuZ3RoIC0gMTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN1Ym1lbnVJdGVtc0FycmF5W2ZvY3VzZWRJdGVtSW5kZXhdLmRpc2FibGVkKSB7XG4gICAgICAgIHRoaXMuc2V0TmV4dFN1Ym1lbnVJdGVtQXNGb2N1c2VkKHN1Ym1lbnVJdGVtc0FycmF5W2ZvY3VzZWRJdGVtSW5kZXhdLnN1Ym1lbnVJdGVtV3JhcHBlci5uYXRpdmVFbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN1Ym1lbnVJdGVtc0FycmF5W2ZvY3VzZWRJdGVtSW5kZXhdLnN1Ym1lbnVJdGVtV3JhcHBlci5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc2V0TmV4dFN1Ym1lbnVJdGVtQXNGb2N1c2VkKHRhcmdldD86IEV2ZW50VGFyZ2V0KSB7XG4gICAgaWYgKHRoaXMuc3VibWVudUl0ZW1zLmxlbmd0aCA+IDAgJiYgdGhpcy5zdWJtZW51SXRlbXMuc29tZShpdGVtID0+ICFpdGVtLmRpc2FibGVkKSkge1xuICAgICAgY29uc3Qgc3VibWVudUl0ZW1zQXJyYXkgPSB0aGlzLnN1Ym1lbnVJdGVtcy50b0FycmF5KCk7XG4gICAgICBsZXQgZm9jdXNlZEl0ZW1JbmRleCA9IC0xO1xuICAgICAgaWYgKHRhcmdldCkge1xuICAgICAgICBmb2N1c2VkSXRlbUluZGV4ID0gc3VibWVudUl0ZW1zQXJyYXkuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5zdWJtZW51SXRlbVdyYXBwZXIubmF0aXZlRWxlbWVudCA9PT0gdGFyZ2V0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvY3VzZWRJdGVtSW5kZXggPSBzdWJtZW51SXRlbXNBcnJheS5maW5kSW5kZXgoXG4gICAgICAgICAgaXRlbSA9PiBpdGVtLnN1Ym1lbnVJdGVtV3JhcHBlci5uYXRpdmVFbGVtZW50ID09PSAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudClcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmIChmb2N1c2VkSXRlbUluZGV4ICE9PSAtMSAmJiBmb2N1c2VkSXRlbUluZGV4ICE9PSBzdWJtZW51SXRlbXNBcnJheS5sZW5ndGggLSAxKSB7XG4gICAgICAgIGZvY3VzZWRJdGVtSW5kZXggPSBmb2N1c2VkSXRlbUluZGV4ICsgMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvY3VzZWRJdGVtSW5kZXggPSAwO1xuICAgICAgfVxuICAgICAgaWYgKHN1Ym1lbnVJdGVtc0FycmF5W2ZvY3VzZWRJdGVtSW5kZXhdLmRpc2FibGVkKSB7XG4gICAgICAgIHRoaXMuc2V0TmV4dFN1Ym1lbnVJdGVtQXNGb2N1c2VkKHN1Ym1lbnVJdGVtc0FycmF5W2ZvY3VzZWRJdGVtSW5kZXhdLnN1Ym1lbnVJdGVtV3JhcHBlci5uYXRpdmVFbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN1Ym1lbnVJdGVtc0FycmF5W2ZvY3VzZWRJdGVtSW5kZXhdLnN1Ym1lbnVJdGVtV3JhcHBlci5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=