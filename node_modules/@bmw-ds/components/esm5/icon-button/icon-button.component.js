import { __decorate } from "tslib";
import { Component, OnInit, Input, ElementRef, Output, EventEmitter, OnChanges } from '@angular/core';
var IconButtonComponent = /** @class */ (function () {
    function IconButtonComponent(elementRef) {
        this.elementRef = elementRef;
        this.iconClass = '';
        this.disabled = false;
        this.clickEvent = new EventEmitter();
        this.small = false;
        this.supportedTypes = ['submit', 'reset', 'button'];
    }
    IconButtonComponent.prototype.ngOnInit = function () { };
    IconButtonComponent.prototype.ngOnChanges = function () {
        this.checkProperties();
    };
    IconButtonComponent.prototype.checkProperties = function () {
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
        if (!this.ariaLabel) {
            this.ariaLabel = 'icon button with ' + this.iconClass;
        }
        if (this.button === 'small') {
            this.small = true;
        }
        if (this.type && !this.supportedTypes.includes(this.type)) {
            console.warn('Wrong button type!', this);
            this.type = 'button';
        }
        if (this.disabled) {
            this.elementRef.nativeElement.classList.add('disabled');
        }
        else {
            this.elementRef.nativeElement.classList.remove('disabled');
        }
    };
    IconButtonComponent.prototype.click = function (event) {
        this.clickEvent.emit(this);
        event.stopPropagation();
    };
    IconButtonComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "iconClass", void 0);
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "button", void 0);
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "disabled", void 0);
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "id", void 0);
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "type", void 0);
    __decorate([
        Input()
    ], IconButtonComponent.prototype, "tabIndex", void 0);
    __decorate([
        Output()
    ], IconButtonComponent.prototype, "clickEvent", void 0);
    IconButtonComponent = __decorate([
        Component({
            selector: 'bmw-icon-button',
            template: "<button\n  [class.icon-button--small]=\"small\"\n  [disabled]=\"disabled\"\n  (click)=\"click($event)\"\n  [id]=\"id\"\n  [type]=\"type\"\n  [attr.aria-label]=\"ariaLabel\"\n  [tabindex]=\"disabled ? -1 : tabIndex\"\n>\n  <i *ngIf=\"iconClass\" [class]=\"iconClass\"></i>\n</button>\n",
            styles: ["button{height:var(--icon-button__medium__font-size);font-size:var(--icon-button__medium__font-size);padding:var(--icon-button__medium__padding);color:var(--icon-button__default__color);border:none;display:block;box-sizing:content-box;cursor:pointer;background-color:transparent}button i{width:var(--icon-button__medium__font-size);height:var(--icon-button__medium__font-size);display:inline-block}button.icon-button--small{height:var(--icon-button__small__font-size);font-size:var(--icon-button__small__font-size);padding:var(--icon-button__small__padding)}button.icon-button--small i{width:var(--icon-button__small__font-size);height:var(--icon-button__small__font-size)}button:hover{background-color:var(--icon-button__hover__background-color)}button:focus{outline:solid 1px;outline-color:var(--color-bmw-highlight)}button[disabled]{opacity:.5;pointer-events:none}:host{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}:host.disabled{cursor:no-drop;display:inline-block}"]
        })
    ], IconButtonComponent);
    return IconButtonComponent;
}());
export { IconButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJtdy1kcy9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiaWNvbi1idXR0b24vaWNvbi1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT3RHO0lBb0JFLDZCQUFtQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBbEJ6QyxjQUFTLEdBQUcsRUFBRSxDQUFDO1FBTWYsYUFBUSxHQUFHLEtBQUssQ0FBQztRQVFqQixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQXVCLENBQUM7UUFDckQsVUFBSyxHQUFHLEtBQUssQ0FBQztRQUNOLG1CQUFjLEdBQUcsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRVgsQ0FBQztJQUU3QyxzQ0FBUSxHQUFSLGNBQVksQ0FBQztJQUViLHlDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELDZDQUFlLEdBQWY7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDVixJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7aUJBQ3BCLFFBQVEsQ0FBQyxFQUFFLENBQUM7aUJBQ1osU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUN2RDtRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxPQUFPLEVBQUU7WUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7UUFDRCxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDekQsT0FBTyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQztTQUN0QjtRQUNELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ3pEO2FBQU07WUFDTCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzVEO0lBQ0gsQ0FBQztJQUVELG1DQUFLLEdBQUwsVUFBTSxLQUFpQjtRQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7Z0JBbkM4QixVQUFVOztJQWxCekM7UUFEQyxLQUFLLEVBQUU7MERBQ087SUFFZjtRQURDLEtBQUssRUFBRTt1REFDTztJQUVmO1FBREMsS0FBSyxFQUFFOzBEQUNVO0lBRWxCO1FBREMsS0FBSyxFQUFFO3lEQUNTO0lBRWpCO1FBREMsS0FBSyxFQUFFO21EQUNHO0lBRVg7UUFEQyxLQUFLLEVBQUU7cURBQ0s7SUFFYjtRQURDLEtBQUssRUFBRTt5REFDUztJQUVqQjtRQURDLE1BQU0sRUFBRTsyREFDNEM7SUFoQjFDLG1CQUFtQjtRQUwvQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLHdTQUEyQzs7U0FFNUMsQ0FBQztPQUNXLG1CQUFtQixDQXdEL0I7SUFBRCwwQkFBQztDQUFBLEFBeERELElBd0RDO1NBeERZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgRWxlbWVudFJlZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibXctaWNvbi1idXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vaWNvbi1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pY29uLWJ1dHRvbi5jb21wb25lbnQubGVzcyddXG59KVxuZXhwb3J0IGNsYXNzIEljb25CdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpXG4gIGljb25DbGFzcyA9ICcnO1xuICBASW5wdXQoKVxuICBidXR0b246IHN0cmluZztcbiAgQElucHV0KClcbiAgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGRpc2FibGVkID0gZmFsc2U7XG4gIEBJbnB1dCgpXG4gIGlkOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHR5cGU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdGFiSW5kZXg6IG51bWJlcjtcbiAgQE91dHB1dCgpXG4gIGNsaWNrRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyPEljb25CdXR0b25Db21wb25lbnQ+KCk7XG4gIHNtYWxsID0gZmFsc2U7XG4gIHByaXZhdGUgc3VwcG9ydGVkVHlwZXMgPSBbJ3N1Ym1pdCcsICdyZXNldCcsICdidXR0b24nXTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuICBuZ09uSW5pdCgpIHt9XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgdGhpcy5jaGVja1Byb3BlcnRpZXMoKTtcbiAgfVxuXG4gIGNoZWNrUHJvcGVydGllcygpIHtcbiAgICBpZiAoIXRoaXMuaWQpXG4gICAgICB0aGlzLmlkID0gTWF0aC5yYW5kb20oKVxuICAgICAgICAudG9TdHJpbmcoMzYpXG4gICAgICAgIC5zdWJzdHJpbmcoMik7XG5cbiAgICBpZiAoIXRoaXMuYXJpYUxhYmVsKSB7XG4gICAgICB0aGlzLmFyaWFMYWJlbCA9ICdpY29uIGJ1dHRvbiB3aXRoICcgKyB0aGlzLmljb25DbGFzcztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5idXR0b24gPT09ICdzbWFsbCcpIHtcbiAgICAgIHRoaXMuc21hbGwgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodGhpcy50eXBlICYmICF0aGlzLnN1cHBvcnRlZFR5cGVzLmluY2x1ZGVzKHRoaXMudHlwZSkpIHtcbiAgICAgIGNvbnNvbGUud2FybignV3JvbmcgYnV0dG9uIHR5cGUhJywgdGhpcyk7XG4gICAgICB0aGlzLnR5cGUgPSAnYnV0dG9uJztcbiAgICB9XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Rpc2FibGVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc2FibGVkJyk7XG4gICAgfVxuICB9XG5cbiAgY2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICB0aGlzLmNsaWNrRXZlbnQuZW1pdCh0aGlzKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxufVxuIl19