import { __decorate } from "tslib";
import { Component, Input, ContentChild, ViewChild, HostBinding, Output, EventEmitter, HostListener, ViewContainerRef } from '@angular/core';
import { PanelContentComponent } from './panel-content.component';
import { IconButtonComponent } from '../icon-button/icon-button.component';
var PanelComponent = /** @class */ (function () {
    function PanelComponent() {
        this.disabled = false;
        this.opened = false;
        this.nonCollapsible = false;
        this.toggleEvent = new EventEmitter();
        this.overflowing = false;
        this.overflowingMenuState = false;
    }
    PanelComponent.prototype.onResize = function () {
        this.resizer();
    };
    PanelComponent.prototype.onKeydown = function (event) {
        var key = event.code || event.keyCode;
        switch (key) {
            case 'Enter':
            case 'NumpadEnter':
            case 13:
            case 'Space':
            case 32:
                if (event.target === this.labelsDiv.nativeElement) {
                    this.toggle();
                    event.preventDefault();
                    event.stopPropagation();
                }
                break;
        }
    };
    PanelComponent.prototype.ngOnInit = function () {
        this.checkProperties();
    };
    PanelComponent.prototype.ngOnChanges = function () {
        this.checkProperties();
    };
    PanelComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.visibleIconsContainer.insert(this.icons.createEmbeddedView(null));
        setTimeout(function () {
            _this.hideIconsIfNecessary();
        });
    };
    PanelComponent.prototype.checkProperties = function () {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        if (this.nonCollapsible === true) {
            this.opened = true;
        }
    };
    PanelComponent.prototype.closeMenu = function (e) {
        var leavingParent = !this.threeDots.nativeElement.contains(e.relatedTarget);
        if (leavingParent) {
            this.toggleOveflowingMenu(e, false);
        }
    };
    PanelComponent.prototype.resizer = function () {
        var _this = this;
        var resizeTimer;
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function () {
            _this.hideIconsIfNecessary(true);
        });
    };
    PanelComponent.prototype.hideIconsIfNecessary = function (showAllFirst) {
        var _this = this;
        if (!this.labelsDiv)
            return;
        if (showAllFirst) {
            this.showAllIcons();
            this.overflowing = false;
        }
        var defaultHeight = this.labelsDiv.nativeElement.offsetHeight;
        var height = this.labelWrapper.nativeElement.offsetHeight;
        if (height > defaultHeight) {
            this.overflowing = true;
            var id = this.hideLastIcon();
            if (id) {
                setTimeout(function () {
                    _this.hideIconsIfNecessary();
                });
            }
        }
    };
    PanelComponent.prototype.showAllIcons = function () {
        while (this.hiddenIconsContainer.length > 0) {
            this.visibleIconsContainer.insert(this.hiddenIconsContainer.detach(0));
        }
    };
    PanelComponent.prototype.hideLastIcon = function () {
        var length = this.visibleIconsContainer.length;
        this.hiddenIconsContainer.insert(this.visibleIconsContainer.detach(length - 1), 0);
        return length > 1;
    };
    PanelComponent.prototype.toggle = function (state) {
        if (this.nonCollapsible || this.disabled)
            return;
        if (typeof state !== 'undefined') {
            this.opened = state;
        }
        else {
            this.opened = !this.opened;
        }
        this.toggleEvent.emit({
            id: this.id,
            opened: this.opened
        });
    };
    PanelComponent.prototype.toggleOveflowingMenu = function (e, state) {
        if (this.disabled)
            return;
        if (typeof state !== 'undefined') {
            this.overflowingMenuState = state;
        }
        else {
            this.overflowingMenuState = !this.overflowingMenuState;
        }
        e.stopPropagation();
    };
    __decorate([
        ContentChild(PanelContentComponent)
    ], PanelComponent.prototype, "childPanelContentComponent", void 0);
    __decorate([
        ViewChild('tpl')
    ], PanelComponent.prototype, "icons", void 0);
    __decorate([
        ViewChild('panel')
    ], PanelComponent.prototype, "labelsDiv", void 0);
    __decorate([
        ViewChild('threeDots')
    ], PanelComponent.prototype, "threeDots", void 0);
    __decorate([
        ViewChild('labelWrapper')
    ], PanelComponent.prototype, "labelWrapper", void 0);
    __decorate([
        ViewChild('hiddenIconsContainer', { read: ViewContainerRef })
    ], PanelComponent.prototype, "hiddenIconsContainer", void 0);
    __decorate([
        ViewChild('visibleIconsContainer', { read: ViewContainerRef })
    ], PanelComponent.prototype, "visibleIconsContainer", void 0);
    __decorate([
        Input()
    ], PanelComponent.prototype, "disabled", void 0);
    __decorate([
        Input()
    ], PanelComponent.prototype, "opened", void 0);
    __decorate([
        Input()
    ], PanelComponent.prototype, "nonCollapsible", void 0);
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], PanelComponent.prototype, "id", void 0);
    __decorate([
        Output()
    ], PanelComponent.prototype, "toggleEvent", void 0);
    __decorate([
        HostListener('window:resize')
    ], PanelComponent.prototype, "onResize", null);
    __decorate([
        HostListener('keydown', ['$event'])
    ], PanelComponent.prototype, "onKeydown", null);
    PanelComponent = __decorate([
        Component({
            selector: 'bmw-panel',
            template: "<div class=\"wrapper\" [class.disabled]=\"disabled\" [attr.aria-disabled]=\"disabled\">\n  <div\n    [tabindex]=\"disabled || nonCollapsible ? -1 : 0\"\n    class=\"panel\"\n    [class.opened]=\"opened\"\n    [class.overflowing]=\"overflowing\"\n    [class.disabled]=\"disabled\"\n    [class.non-collapsible]=\"nonCollapsible\"\n    #panel\n    (click)=\"toggle()\"\n    [attr.aria-expanded]=\"opened\"\n  >\n    <div class=\"label-wrapper\" #labelWrapper>\n      <ng-content select=\"bmw-panel-label\"></ng-content>\n      <ng-container #visibleIconsContainer>\n        <ng-template #tpl>\n          <ng-content select=\"bmw-icon-button\"></ng-content>\n        </ng-template>\n      </ng-container>\n    </div>\n  </div>\n  <div\n    tabindex=\"0\"\n    class=\"three-dots\"\n    [class.opened]=\"overflowingMenuState\"\n    [class.disabled]=\"disabled\"\n    [class.non-collapsible]=\"nonCollapsible\"\n    [class.overflowing]=\"overflowing\"\n    #threeDots\n    (click)=\"toggleOveflowingMenu($event)\"\n    (focusout)=\"closeMenu($event)\"\n    [attr.aria-expanded]=\"overflowingMenuState\"\n  >\n    <div class=\"menu\"><ng-container #hiddenIconsContainer></ng-container></div>\n  </div>\n  <div class=\"content\" [class.disabled]=\"disabled\" [class.opened]=\"opened\">\n    <ng-content select=\"bmw-panel-content\"></ng-content>\n  </div>\n</div>\n",
            entryComponents: [IconButtonComponent],
            styles: [":host{display:block}.wrapper{position:relative}.wrapper .panel{cursor:pointer;padding-right:calc(var(--panel__default__line-height) + 2 * var(--panel__default__padding));background-color:var(--panel__defualt__background-color);color:var(--panel__labels__default__color);height:calc(var(--panel__default__line-height) + 2 * var(--panel__default__padding))}.wrapper .panel:focus{outline:solid 1px;outline-color:var(--color-bmw-highlight);outline-offset:-1px}.wrapper .panel .label-wrapper{width:100%;display:flex;flex-wrap:wrap}.wrapper .panel.overflowing{padding-right:calc(2 * (var(--panel__default__line-height) + 2 * var(--panel__default__padding)))}.wrapper .panel ::ng-deep bmw-icon-button{flex-grow:0;display:inline-flex;margin-right:var(--panel__icons__margin-right)}.wrapper .panel.disabled{pointer-events:none;opacity:.5}.wrapper .panel:not(.non-collapsible)::after{font-family:iwp;content:'\\e92f';position:absolute;right:0;top:0;height:var(--panel__default__line-height);width:var(--panel__default__line-height);font-size:var(--panel__default__line-height);padding:var(--panel__default__padding)}.wrapper .panel:not(.non-collapsible):hover{background-color:var(--panel__hover__background-color)}.wrapper .panel.non-collapsible{padding-right:initial;cursor:default}.wrapper .panel.non-collapsible.overflowing{padding-right:calc(var(--panel__default__line-height) + 2 * var(--panel__default__padding))}.wrapper .three-dots{display:none;position:absolute;cursor:pointer;top:0;right:calc(var(--panel__default__line-height) + 2 * var(--panel__default__padding));order:2;box-sizing:content-box;height:calc(var(--panel__default__line-height) + 2 * var(--panel__default__padding))}.wrapper .three-dots:focus{outline:0;background-color:var(--panel__more-dots__selected__background-color)}.wrapper .three-dots.non-collapsible{right:0}.wrapper .three-dots.disabled{pointer-events:none}.wrapper .three-dots .menu{display:none;position:absolute;background-color:var(--panel__more-dots__menu__background-color);top:100%;right:-1px;z-index:var(--panel__z-index-base);border:solid 1px var(--panel__more-dots__menu__border-color);border-top:none}.wrapper .three-dots .menu label{display:block;max-width:100%}.wrapper .three-dots.opened .menu{display:inline-block}.wrapper .three-dots::after{display:inline-block;line-height:var(--panel__default__line-height);font-size:var(--panel__default__line-height);padding:var(--panel__default__padding);font-family:iwp;content:'\\ea22'}.wrapper .three-dots.overflowing{display:inline-block}.wrapper .panel:not(.non-collapsible).opened::after{content:'\\e932'}.wrapper .content.disabled{pointer-events:none;opacity:.5}.wrapper .content{display:none}.wrapper .content.opened{display:block}.wrapper.disabled{cursor:no-drop}"]
        })
    ], PanelComponent);
    return PanelComponent;
}());
export { PanelComponent };
//# sourceMappingURL=data:application/json;base64,