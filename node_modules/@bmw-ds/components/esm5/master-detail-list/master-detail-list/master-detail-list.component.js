import { __decorate } from "tslib";
import { Component, ContentChildren, HostBinding, Input, ViewChild } from '@angular/core';
import { MasterDetailListRowComponent } from '../master-detail-list-row/master-detail-list-row.component';
import { MasterDetailListDetailComponent } from '../master-detail-list-detail/master-detail-list-detail.component';
var MasterDetailListComponent = /** @class */ (function () {
    function MasterDetailListComponent() {
        this._smallStyle = false;
    }
    Object.defineProperty(MasterDetailListComponent.prototype, "smallStyle", {
        get: function () {
            return this._smallStyle;
        },
        set: function (value) {
            if (this._smallStyle !== value) {
                this._smallStyle = value;
                this.updateScrollToSelected();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MasterDetailListComponent.prototype, "masterDetail", {
        get: function () {
            return this._hasDetailView || this._smallStyle;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MasterDetailListComponent.prototype, "hasDetailView", {
        set: function (value) {
            if (this._hasDetailView !== value) {
                this._hasDetailView = value;
                this.updateScrollToSelected();
            }
        },
        enumerable: true,
        configurable: true
    });
    MasterDetailListComponent.prototype.ngOnInit = function () {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
    };
    MasterDetailListComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        // listen for changes of ListDetailCoponents in list's content
        this.listDetails.changes.subscribe({
            next: function (elements) {
                // if detail is available, set class to host to enable master-detail styling
                _this.hasDetailView = elements.length > 0;
            }
        });
        this.childItemsComponent.changes.subscribe({
            next: function (elements) {
                _this.childItemsComponent.forEach(function (element) {
                    element.updateEvent.subscribe(function () {
                        _this.selectOne(element);
                    });
                });
            }
        });
        setTimeout(function () { return (_this.hasDetailView = _this.listDetails.length > 0); });
        this.childItemsComponent.forEach(function (element) {
            element.updateEvent.subscribe(function () {
                _this.selectOne(element);
            });
        });
    };
    MasterDetailListComponent.prototype.selectOne = function (selectItem) {
        if (!this.childItemsComponent) {
            return;
        }
        this.childItemsComponent.forEach(function (element) {
            element.selected = element === selectItem;
        });
    };
    MasterDetailListComponent.prototype.ngOnDestroy = function () {
        if (this.childItemsComponent) {
            this.childItemsComponent.forEach(function (element) {
                element.updateEvent.unsubscribe();
            });
        }
    };
    MasterDetailListComponent.prototype.updateScrollToSelected = function () {
        var _a;
        var selected = (_a = this.childItemsComponent) === null || _a === void 0 ? void 0 : _a.find(function (element) { return element.selected; });
        if (selected) {
            setTimeout(function () {
                selected.updateScrollPosition();
            });
        }
    };
    __decorate([
        ViewChild('items')
    ], MasterDetailListComponent.prototype, "items", void 0);
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], MasterDetailListComponent.prototype, "id", void 0);
    __decorate([
        ContentChildren(MasterDetailListRowComponent)
    ], MasterDetailListComponent.prototype, "childItemsComponent", void 0);
    __decorate([
        ContentChildren(MasterDetailListDetailComponent)
    ], MasterDetailListComponent.prototype, "listDetails", void 0);
    __decorate([
        Input()
    ], MasterDetailListComponent.prototype, "smallStyle", null);
    __decorate([
        HostBinding('class.master-detail')
    ], MasterDetailListComponent.prototype, "masterDetail", null);
    MasterDetailListComponent = __decorate([
        Component({
            selector: 'bmw-master-detail-list',
            template: "<div\n  class=\"items\"\n  #items\n>\n  <ng-content select=\"bmw-master-detail-list-row\"></ng-content>\n</div>\n<ng-content select=\"bmw-master-detail-list-detail\"></ng-content>\n",
            styles: [":host{position:relative;min-height:0;width:100%;max-height:100%;overflow:auto;display:inline-block;min-width:186px;max-width:100%}:host .items{display:table;table-layout:auto;width:100%;max-height:100%;overflow:auto}:host.master-detail{display:flex;flex-direction:row;width:auto}@media screen and (min-width:37.49rem){:host.master-detail .items{width:auto;display:flex;flex:0 0 auto;flex-direction:column;overflow-y:auto}}"]
        })
    ], MasterDetailListComponent);
    return MasterDetailListComponent;
}());
export { MasterDetailListComponent };
//# sourceMappingURL=data:application/json;base64,