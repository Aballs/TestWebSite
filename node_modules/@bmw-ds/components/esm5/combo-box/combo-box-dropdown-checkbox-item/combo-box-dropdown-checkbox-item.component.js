import { __decorate } from "tslib";
import { Component, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';
var ComboBoxDropdownCheckboxItemComponent = /** @class */ (function () {
    function ComboBoxDropdownCheckboxItemComponent() {
        this.disabled = false;
        this.selected = false;
        this.focused = false;
        this.id = Math.random()
            .toString(36)
            .substring(2);
        this.selectedChange = new EventEmitter();
    }
    ComboBoxDropdownCheckboxItemComponent.prototype.ngOnChanges = function () {
        var _a;
        if (this.focused) {
            (_a = this.itemWrapper) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();
        }
    };
    ComboBoxDropdownCheckboxItemComponent.prototype.click = function () {
        if (!this.disabled) {
            this.selectedChange.emit(!this.selected);
        }
    };
    __decorate([
        Input()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "value", void 0);
    __decorate([
        Input()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "label", void 0);
    __decorate([
        Input()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "disabled", void 0);
    __decorate([
        Input()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "selected", void 0);
    __decorate([
        Input()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "focused", void 0);
    __decorate([
        ViewChild('itemWrapper')
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "itemWrapper", void 0);
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "id", void 0);
    __decorate([
        Output()
    ], ComboBoxDropdownCheckboxItemComponent.prototype, "selectedChange", void 0);
    ComboBoxDropdownCheckboxItemComponent = __decorate([
        Component({
            selector: 'bmw-combo-box-dropdown-checkbox-item',
            template: "<div\n  #itemWrapper\n  [class.disabled]=\"disabled\"\n  class=\"wrapper\"\n  [attr.aria-label]=\"'Option with label ' + label\"\n  tabindex=\"-1\"\n>\n  <div [class.selected]=\"selected\" [class.focused]=\"focused\" (click)=\"click()\" class=\"dropdown-item\">\n    <div class=\"label bmw-component-text\">\n      <bmw-checkbox [ngModel]=\"selected\">\n        {{ label }}\n      </bmw-checkbox>\n    </div>\n  </div>\n</div>\n",
            styles: ["div.dropdown-item{width:100%;overflow:hidden;padding:var(--combo-box__default__padding);box-sizing:border-box;position:relative;background-color:var(--combo-box__dropdown-item__default__background-color)}div.dropdown-item div.label{width:100%;display:block;box-sizing:border-box;position:relative;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}div.dropdown-item div.label.bmw-component-text{color:inherit}div.dropdown-item.focused,div.dropdown-item:hover{background-color:var(--combo-box__dropdown-item__hover__background-color)}div.dropdown-item.selected{background-color:var(--combo-box__dropdown-item__selected__background-color)}div.dropdown-item.selected.focused{outline:solid 1px;outline-color:var(--color-bmw-basic5);outline-offset:-3px}div.dropdown-item.selected ::ng-deep bmw-checkbox label .bmw-component-text{color:var(--combo-box__dropdown-item__selected__color)}.disabled div.dropdown-item{pointer-events:none}.disabled div.dropdown-item .bmw-component-text{opacity:.5}div.wrapper.keyboard-focus .dropdown-item{background-color:var(--combo-box__dropdown-item__hover__background-color)}div.wrapper.disabled{cursor:no-drop}:host ::ng-deep bmw-checkbox div{margin-bottom:0}"]
        })
    ], ComboBoxDropdownCheckboxItemComponent);
    return ComboBoxDropdownCheckboxItemComponent;
}());
export { ComboBoxDropdownCheckboxItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tYm94LWRyb3Bkb3duLWNoZWNrYm94LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGJtdy1kcy9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29tYm8tYm94L2NvbWJvLWJveC1kcm9wZG93bi1jaGVja2JveC1pdGVtL2NvbWJvLWJveC1kcm9wZG93bi1jaGVja2JveC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUF5QixNQUFNLGVBQWUsQ0FBQztBQU90SDtJQUFBO1FBTUUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFPaEIsT0FBRSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7YUFDZixRQUFRLENBQUMsRUFBRSxDQUFDO2FBQ1osU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBR2hCLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQWEvQyxDQUFDO0lBWEMsMkRBQVcsR0FBWDs7UUFDRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsTUFBQSxJQUFJLENBQUMsV0FBVywwQ0FBRSxhQUFhLENBQUMsS0FBSyxHQUFHO1NBQ3pDO0lBQ0gsQ0FBQztJQUVELHFEQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUMxQztJQUNILENBQUM7SUFoQ0Q7UUFEQyxLQUFLLEVBQUU7d0VBQ0c7SUFFWDtRQURDLEtBQUssRUFBRTt3RUFDTTtJQUVkO1FBREMsS0FBSyxFQUFFOzJFQUNTO0lBRWpCO1FBREMsS0FBSyxFQUFFOzJFQUNTO0lBRWpCO1FBREMsS0FBSyxFQUFFOzBFQUNRO0lBR2hCO1FBREMsU0FBUyxDQUFDLGFBQWEsQ0FBQzs4RUFDRDtJQUl4QjtRQUZDLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFDdEIsS0FBSyxFQUFFO3FFQUdRO0lBR2hCO1FBREMsTUFBTSxFQUFFO2lGQUNvQztJQXRCbEMscUNBQXFDO1FBTGpELFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxzQ0FBc0M7WUFDaEQsd2JBQWdFOztTQUVqRSxDQUFDO09BQ1cscUNBQXFDLENBbUNqRDtJQUFELDRDQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0FuQ1kscUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibXctY29tYm8tYm94LWRyb3Bkb3duLWNoZWNrYm94LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vY29tYm8tYm94LWRyb3Bkb3duLWNoZWNrYm94LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jb21iby1ib3gtZHJvcGRvd24tY2hlY2tib3gtaXRlbS5jb21wb25lbnQubGVzcyddXG59KVxuZXhwb3J0IGNsYXNzIENvbWJvQm94RHJvcGRvd25DaGVja2JveEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBASW5wdXQoKVxuICB2YWx1ZTogYW55O1xuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBzZWxlY3RlZCA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBmb2N1c2VkID0gZmFsc2U7XG5cbiAgQFZpZXdDaGlsZCgnaXRlbVdyYXBwZXInKVxuICBpdGVtV3JhcHBlcjogRWxlbWVudFJlZjtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuICBASW5wdXQoKVxuICBpZCA9IE1hdGgucmFuZG9tKClcbiAgICAudG9TdHJpbmcoMzYpXG4gICAgLnN1YnN0cmluZygyKTtcblxuICBAT3V0cHV0KClcbiAgc2VsZWN0ZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuZm9jdXNlZCkge1xuICAgICAgdGhpcy5pdGVtV3JhcHBlcj8ubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIGNsaWNrKCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5zZWxlY3RlZENoYW5nZS5lbWl0KCF0aGlzLnNlbGVjdGVkKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==