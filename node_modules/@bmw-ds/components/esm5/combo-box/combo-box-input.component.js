import { __decorate } from "tslib";
import { Component, HostListener, Output, EventEmitter, HostBinding } from '@angular/core';
/* tslint:disable:component-selector*/
var ComboBoxInputComponent = /** @class */ (function () {
    function ComboBoxInputComponent() {
        this.clickEvent = new EventEmitter();
        this.focusEvent = new EventEmitter();
        this.inputEvent = new EventEmitter();
        this.value = '';
    }
    ComboBoxInputComponent.prototype.onCLick = function () {
        this.clickEvent.emit();
    };
    ComboBoxInputComponent.prototype.onFocus = function () {
        this.focusEvent.emit();
    };
    ComboBoxInputComponent.prototype.onInput = function (event) {
        this.value = event.target.value;
        this.inputEvent.emit();
    };
    __decorate([
        Output()
    ], ComboBoxInputComponent.prototype, "clickEvent", void 0);
    __decorate([
        Output()
    ], ComboBoxInputComponent.prototype, "focusEvent", void 0);
    __decorate([
        Output()
    ], ComboBoxInputComponent.prototype, "inputEvent", void 0);
    __decorate([
        HostBinding('value')
    ], ComboBoxInputComponent.prototype, "value", void 0);
    __decorate([
        HostListener('click')
    ], ComboBoxInputComponent.prototype, "onCLick", null);
    __decorate([
        HostListener('focus')
    ], ComboBoxInputComponent.prototype, "onFocus", null);
    __decorate([
        HostListener('input', ['$event'])
    ], ComboBoxInputComponent.prototype, "onInput", null);
    ComboBoxInputComponent = __decorate([
        Component({
            selector: 'input[bmwComboBoxInput]',
            template: "<ng-content></ng-content>\n",
            styles: ["::ng-deep input[bmwComboBoxInput]{width:100%;min-width:var(--combo-box__inputfield__default__min-width);border:none;border-bottom:1px solid var(--combo-box__inputfield__default__border-bottom-color);border-radius:0;box-sizing:border-box;padding:var(--combo-box__default__padding);padding-bottom:calc(var(--combo-box__default__padding) - 1px);padding-right:calc(var(--typography__component-text__font-size) + 3 * var(--combo-box__default__padding));color:var(--combo-box__inputfield__default__color);font-size:var(--typography__component-text__font-size);line-height:var(--typography__component-text__line-height)}::ng-deep input[bmwComboBoxInput]::-ms-clear{display:none}::ng-deep input[bmwComboBoxInput].filled{padding-right:calc(2 * var(--typography__component-text__font-size) + 4 * var(--combo-box__default__padding))}::ng-deep input[bmwComboBoxInput]::-moz-placeholder{color:var(--combo-box__placeholder__color)}::ng-deep input[bmwComboBoxInput]:-ms-input-placeholder{color:var(--combo-box__placeholder__color)}::ng-deep input[bmwComboBoxInput]::placeholder{color:var(--combo-box__placeholder__color)}::ng-deep input[bmwComboBoxInput].invalid::-moz-placeholder{color:var(--combo-box__error_color)}::ng-deep input[bmwComboBoxInput].invalid:-ms-input-placeholder{color:var(--combo-box__error_color)}::ng-deep input[bmwComboBoxInput].invalid::placeholder{color:var(--combo-box__error_color)}::ng-deep input[bmwComboBoxInput]:focus{outline:0}::ng-deep input[bmwComboBoxInput]:hover{border-bottom-color:var(--combo-box__inputfield__hover__border-bottom-color)}"]
        })
    ], ComboBoxInputComponent);
    return ComboBoxInputComponent;
}());
export { ComboBoxInputComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tYm94LWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvbWJvLWJveC9jb21iby1ib3gtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRixzQ0FBc0M7QUFNdEM7SUFBQTtRQUVFLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRWhDLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRWhDLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBR2hDLFVBQUssR0FBRyxFQUFFLENBQUM7SUFlYixDQUFDO0lBWkMsd0NBQU8sR0FBUDtRQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELHdDQUFPLEdBQVA7UUFDRSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCx3Q0FBTyxHQUFQLFVBQVEsS0FBVTtRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQXJCRDtRQURDLE1BQU0sRUFBRTs4REFDdUI7SUFFaEM7UUFEQyxNQUFNLEVBQUU7OERBQ3VCO0lBRWhDO1FBREMsTUFBTSxFQUFFOzhEQUN1QjtJQUdoQztRQURDLFdBQVcsQ0FBQyxPQUFPLENBQUM7eURBQ1Y7SUFHWDtRQURDLFlBQVksQ0FBQyxPQUFPLENBQUM7eURBR3JCO0lBRUQ7UUFEQyxZQUFZLENBQUMsT0FBTyxDQUFDO3lEQUdyQjtJQUVEO1FBREMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3lEQUlqQztJQXZCVSxzQkFBc0I7UUFMbEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHlCQUF5QjtZQUNuQyx1Q0FBK0M7O1NBRWhELENBQUM7T0FDVyxzQkFBc0IsQ0F3QmxDO0lBQUQsNkJBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXhCWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RMaXN0ZW5lciwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3IqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaW5wdXRbYm13Q29tYm9Cb3hJbnB1dF0nLFxuICB0ZW1wbGF0ZVVybDogJy4vY29tYm8tYm94LWlucHV0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY29tYm8tYm94LWlucHV0LmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hJbnB1dENvbXBvbmVudCB7XG4gIEBPdXRwdXQoKVxuICBjbGlja0V2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KClcbiAgZm9jdXNFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpXG4gIGlucHV0RXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQEhvc3RCaW5kaW5nKCd2YWx1ZScpXG4gIHZhbHVlID0gJyc7XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICBvbkNMaWNrKCkge1xuICAgIHRoaXMuY2xpY2tFdmVudC5lbWl0KCk7XG4gIH1cbiAgQEhvc3RMaXN0ZW5lcignZm9jdXMnKVxuICBvbkZvY3VzKCkge1xuICAgIHRoaXMuZm9jdXNFdmVudC5lbWl0KCk7XG4gIH1cbiAgQEhvc3RMaXN0ZW5lcignaW5wdXQnLCBbJyRldmVudCddKVxuICBvbklucHV0KGV2ZW50OiBhbnkpIHtcbiAgICB0aGlzLnZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgIHRoaXMuaW5wdXRFdmVudC5lbWl0KCk7XG4gIH1cbn1cbiJdfQ==