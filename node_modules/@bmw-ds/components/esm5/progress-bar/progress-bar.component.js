import { __decorate } from "tslib";
import { Component, Input, HostBinding } from '@angular/core';
var ProgressBarComponent = /** @class */ (function () {
    function ProgressBarComponent() {
        this.filled = 0;
        this.duration = 0.5;
        this.filledStyleObject = {
            width: '0%',
            transition: 'width 0.5s'
        };
    }
    ProgressBarComponent.prototype.ngOnInit = function () {
        this.checkProperties();
    };
    ProgressBarComponent.prototype.ngOnChanges = function () {
        this.checkProperties();
    };
    ProgressBarComponent.prototype.checkProperties = function () {
        if (!this.id)
            this.id = Math.random()
                .toString(36)
                .substring(2);
        this.filled = Math.max(0, Math.min(100, this.filled));
        this.filledStyleObject = {
            width: (this.filled ? this.filled.toString() : '0') + '%',
            transition: 'width ' + (this.duration ? this.duration.toString() : '0.5') + 's'
        };
    };
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], ProgressBarComponent.prototype, "id", void 0);
    __decorate([
        Input()
    ], ProgressBarComponent.prototype, "label", void 0);
    __decorate([
        Input()
    ], ProgressBarComponent.prototype, "filled", void 0);
    __decorate([
        Input()
    ], ProgressBarComponent.prototype, "duration", void 0);
    ProgressBarComponent = __decorate([
        Component({
            selector: 'bmw-progress-bar',
            template: "<div class=\"wrapper\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" [attr.aria-valuenow]=\"filled\">\n  <div class=\"filled\" [ngStyle]=\"filledStyleObject\"></div>\n  <div class=\"label bmw-regular-text\">\n    {{ label }}\n  </div>\n</div>\n",
            styles: [".wrapper{width:100%;position:relative;background-color:var(--progress-bar__default__background-color)}.wrapper .filled{background-color:var(--progress-bar__filled__background-color);position:absolute;height:100%}.wrapper .label{background-color:rgba(0,0,0,0);position:relative;display:table;margin:auto;line-height:var(--progress-bar__default__line-height)}"]
        })
    ], ProgressBarComponent);
    return ProgressBarComponent;
}());
export { ProgressBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInByb2dyZXNzLWJhci9wcm9ncmVzcy1iYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBT2pGO0lBQUE7UUFTRSxXQUFNLEdBQUcsQ0FBQyxDQUFDO1FBR1gsYUFBUSxHQUFHLEdBQUcsQ0FBQztRQUVmLHNCQUFpQixHQUFHO1lBQ2xCLEtBQUssRUFBRSxJQUFJO1lBQ1gsVUFBVSxFQUFFLFlBQVk7U0FDekIsQ0FBQztJQXNCSixDQUFDO0lBcEJDLHVDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELDBDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUNELDhDQUFlLEdBQWY7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDVixJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7aUJBQ3BCLFFBQVEsQ0FBQyxFQUFFLENBQUM7aUJBQ1osU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFFdEQsSUFBSSxDQUFDLGlCQUFpQixHQUFHO1lBQ3ZCLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUc7WUFDekQsVUFBVSxFQUFFLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUc7U0FDaEYsQ0FBQztJQUNKLENBQUM7SUFuQ0Q7UUFGQyxXQUFXLENBQUMsU0FBUyxDQUFDO1FBQ3RCLEtBQUssRUFBRTtvREFDRztJQUdYO1FBREMsS0FBSyxFQUFFO3VEQUNNO0lBR2Q7UUFEQyxLQUFLLEVBQUU7d0RBQ0c7SUFHWDtRQURDLEtBQUssRUFBRTswREFDTztJQVpKLG9CQUFvQjtRQUxoQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLGlSQUE0Qzs7U0FFN0MsQ0FBQztPQUNXLG9CQUFvQixDQXVDaEM7SUFBRCwyQkFBQztDQUFBLEFBdkNELElBdUNDO1NBdkNZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3RCaW5kaW5nLCBPbkluaXQsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibXctcHJvZ3Jlc3MtYmFyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzLWJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Byb2dyZXNzLWJhci5jb21wb25lbnQubGVzcyddXG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQmFyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuICBASW5wdXQoKVxuICBpZDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGxhYmVsOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZmlsbGVkID0gMDtcblxuICBASW5wdXQoKVxuICBkdXJhdGlvbiA9IDAuNTtcblxuICBmaWxsZWRTdHlsZU9iamVjdCA9IHtcbiAgICB3aWR0aDogJzAlJyxcbiAgICB0cmFuc2l0aW9uOiAnd2lkdGggMC41cydcbiAgfTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNoZWNrUHJvcGVydGllcygpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgdGhpcy5jaGVja1Byb3BlcnRpZXMoKTtcbiAgfVxuICBjaGVja1Byb3BlcnRpZXMoKSB7XG4gICAgaWYgKCF0aGlzLmlkKVxuICAgICAgdGhpcy5pZCA9IE1hdGgucmFuZG9tKClcbiAgICAgICAgLnRvU3RyaW5nKDM2KVxuICAgICAgICAuc3Vic3RyaW5nKDIpO1xuXG4gICAgdGhpcy5maWxsZWQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxMDAsIHRoaXMuZmlsbGVkKSk7XG5cbiAgICB0aGlzLmZpbGxlZFN0eWxlT2JqZWN0ID0ge1xuICAgICAgd2lkdGg6ICh0aGlzLmZpbGxlZCA/IHRoaXMuZmlsbGVkLnRvU3RyaW5nKCkgOiAnMCcpICsgJyUnLFxuICAgICAgdHJhbnNpdGlvbjogJ3dpZHRoICcgKyAodGhpcy5kdXJhdGlvbiA/IHRoaXMuZHVyYXRpb24udG9TdHJpbmcoKSA6ICcwLjUnKSArICdzJ1xuICAgIH07XG4gIH1cbn1cbiJdfQ==