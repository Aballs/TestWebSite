import { __decorate } from "tslib";
import { Component, OnInit, Input, Output, EventEmitter, OnChanges, HostBinding, HostListener, ElementRef } from '@angular/core';
var GenericTileComponent = /** @class */ (function () {
    function GenericTileComponent(_el) {
        this._el = _el;
        this.selected = false;
        this.clickEvent = new EventEmitter();
        this.clickable = false;
        this.selectable = false;
        this.disabled = false;
    }
    GenericTileComponent.prototype.onKeydown = function (event) {
        var key = event.code || event.keyCode;
        switch (key) {
            case 'Enter':
            case 'NumpadEnter':
            case 13:
            case 'Space':
            case 32:
                if (event.target === this._el.nativeElement.querySelector('.generic-tile')) {
                    this.click();
                    event.preventDefault();
                }
                break;
        }
    };
    GenericTileComponent.prototype.ngOnInit = function () {
        this.checkProperties();
    };
    GenericTileComponent.prototype.ngOnChanges = function () {
        this.checkProperties();
    };
    GenericTileComponent.prototype.checkProperties = function () {
        if (!this.id) {
            this.id = Math.random()
                .toString(36)
                .substring(2);
        }
        this.clickable = this.interaction === 'clickable';
        this.selectable = this.interaction === 'selectable';
    };
    GenericTileComponent.prototype.click = function () {
        if (this.disabled || (!this.clickable && !this.selectable))
            return;
        if (this.selectable) {
            this.selected = !this.selected;
        }
        this.clickEvent.emit({ interaction: this.interaction, selected: this.selected, id: this.id });
    };
    GenericTileComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], GenericTileComponent.prototype, "interaction", void 0);
    __decorate([
        Input()
    ], GenericTileComponent.prototype, "selected", void 0);
    __decorate([
        HostBinding('attr.id'),
        Input()
    ], GenericTileComponent.prototype, "id", void 0);
    __decorate([
        Output()
    ], GenericTileComponent.prototype, "clickEvent", void 0);
    __decorate([
        Input()
    ], GenericTileComponent.prototype, "disabled", void 0);
    __decorate([
        HostListener('keydown', ['$event'])
    ], GenericTileComponent.prototype, "onKeydown", null);
    GenericTileComponent = __decorate([
        Component({
            selector: 'bmw-generic-tile',
            template: "<div\n  class=\"generic-tile\"\n  (click)=\"click()\"\n  [class.clickable]=\"clickable || selectable\"\n  [class.selected]=\"selected && selectable\"\n  [class.disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  [tabindex]=\"disabled || (!clickable && !selectable) ? -1 : 0\"\n>\n  <ng-content></ng-content>\n</div>\n",
            styles: [":host .generic-tile{box-sizing:border-box;width:100%;padding:var(--generic-tile__default__padding);border:1px solid var(--generic-tile__default__border-color);position:relative;background-color:var(--generic-tile__default__background-color)}:host .generic-tile.clickable{cursor:pointer}:host .generic-tile.clickable.disabled{cursor:no-drop}:host .generic-tile.clickable:hover:not(.disabled){border-color:var(--generic-tile__hover__border-color)}:host .generic-tile.selected{border-color:var(--generic-tile__hover__border-color)}:host .generic-tile.selected::after{content:'\\e9d8';font-family:iwp;font-size:var(--generic-tile__icon__font-size);position:absolute;top:var(--generic-tile__default__padding);right:var(--generic-tile__default__padding);line-height:1;color:var(--generic-tile__selected__icon__color);padding-left:var(--generic-tile__icon__padding);padding-bottom:var(--generic-tile__icon__padding);background-color:var(--generic-tile__default__background-color)}:host .generic-tile.disabled{opacity:var(--generic-tile__disabled__opacity);border-color:var(--generic-tile__disabled__border-color)}:host .generic-tile:focus{outline:0}:host .generic-tile:focus.clickable:not(.disabled){outline:solid 1px!important;outline-color:var(--color-bmw-highlight)!important;outline-offset:-1px}"]
        })
    ], GenericTileComponent);
    return GenericTileComponent;
}());
export { GenericTileComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy10aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BibXctZHMvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImdlbmVyaWMtdGlsZS9nZW5lcmljLXRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixTQUFTLEVBQ1QsV0FBVyxFQUNYLFlBQVksRUFDWixVQUFVLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFPdkI7SUFnQ0UsOEJBQW9CLEdBQWU7UUFBZixRQUFHLEdBQUgsR0FBRyxDQUFZO1FBNUJuQyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBS2pCLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3JDLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDbEIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUVWLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFtQlksQ0FBQztJQWhCdkMsd0NBQVMsR0FBVCxVQUFVLEtBQW9CO1FBQzVCLElBQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUN4QyxRQUFRLEdBQUcsRUFBRTtZQUNYLEtBQUssT0FBTyxDQUFDO1lBQ2IsS0FBSyxhQUFhLENBQUM7WUFDbkIsS0FBSyxFQUFFLENBQUM7WUFDUixLQUFLLE9BQU8sQ0FBQztZQUNiLEtBQUssRUFBRTtnQkFDTCxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxFQUFFO29CQUMxRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ2IsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO2lCQUN4QjtnQkFDRCxNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBSUQsdUNBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsMENBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsOENBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO2lCQUNwQixRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQjtRQUVELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsS0FBSyxXQUFXLENBQUM7UUFDbEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxLQUFLLFlBQVksQ0FBQztJQUN0RCxDQUFDO0lBRUQsb0NBQUssR0FBTDtRQUNFLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFBRSxPQUFPO1FBRW5FLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNoQztRQUVELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7O2dCQTdCd0IsVUFBVTs7SUE5Qm5DO1FBREMsS0FBSyxFQUFFOzZEQUNZO0lBRXBCO1FBREMsS0FBSyxFQUFFOzBEQUNTO0lBR2pCO1FBRkMsV0FBVyxDQUFDLFNBQVMsQ0FBQztRQUN0QixLQUFLLEVBQUU7b0RBQ0c7SUFFWDtRQURDLE1BQU0sRUFBRTs0REFDNEI7SUFJNUI7UUFBUixLQUFLLEVBQUU7MERBQWtCO0lBRzFCO1FBREMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3lEQWVuQztJQTlCVSxvQkFBb0I7UUFMaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QixvVkFBNEM7O1NBRTdDLENBQUM7T0FDVyxvQkFBb0IsQ0E4RGhDO0lBQUQsMkJBQUM7Q0FBQSxBQTlERCxJQThEQztTQTlEWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBPbkNoYW5nZXMsXG4gIEhvc3RCaW5kaW5nLFxuICBIb3N0TGlzdGVuZXIsXG4gIEVsZW1lbnRSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Jtdy1nZW5lcmljLXRpbGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vZ2VuZXJpYy10aWxlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZ2VuZXJpYy10aWxlLmNvbXBvbmVudC5sZXNzJ11cbn0pXG5leHBvcnQgY2xhc3MgR2VuZXJpY1RpbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpXG4gIGludGVyYWN0aW9uOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHNlbGVjdGVkID0gZmFsc2U7XG4gIEBIb3N0QmluZGluZygnYXR0ci5pZCcpXG4gIEBJbnB1dCgpXG4gIGlkOiBzdHJpbmc7XG4gIEBPdXRwdXQoKVxuICBjbGlja0V2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIGNsaWNrYWJsZSA9IGZhbHNlO1xuICBzZWxlY3RhYmxlID0gZmFsc2U7XG5cbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcbiAgb25LZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgY29uc3Qga2V5ID0gZXZlbnQuY29kZSB8fCBldmVudC5rZXlDb2RlO1xuICAgIHN3aXRjaCAoa2V5KSB7XG4gICAgICBjYXNlICdFbnRlcic6XG4gICAgICBjYXNlICdOdW1wYWRFbnRlcic6XG4gICAgICBjYXNlIDEzOlxuICAgICAgY2FzZSAnU3BhY2UnOlxuICAgICAgY2FzZSAzMjpcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gdGhpcy5fZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZ2VuZXJpYy10aWxlJykpIHtcbiAgICAgICAgICB0aGlzLmNsaWNrKCk7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbDogRWxlbWVudFJlZikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNoZWNrUHJvcGVydGllcygpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgdGhpcy5jaGVja1Byb3BlcnRpZXMoKTtcbiAgfVxuXG4gIGNoZWNrUHJvcGVydGllcygpIHtcbiAgICBpZiAoIXRoaXMuaWQpIHtcbiAgICAgIHRoaXMuaWQgPSBNYXRoLnJhbmRvbSgpXG4gICAgICAgIC50b1N0cmluZygzNilcbiAgICAgICAgLnN1YnN0cmluZygyKTtcbiAgICB9XG5cbiAgICB0aGlzLmNsaWNrYWJsZSA9IHRoaXMuaW50ZXJhY3Rpb24gPT09ICdjbGlja2FibGUnO1xuICAgIHRoaXMuc2VsZWN0YWJsZSA9IHRoaXMuaW50ZXJhY3Rpb24gPT09ICdzZWxlY3RhYmxlJztcbiAgfVxuXG4gIGNsaWNrKCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkIHx8ICghdGhpcy5jbGlja2FibGUgJiYgIXRoaXMuc2VsZWN0YWJsZSkpIHJldHVybjtcblxuICAgIGlmICh0aGlzLnNlbGVjdGFibGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWQgPSAhdGhpcy5zZWxlY3RlZDtcbiAgICB9XG5cbiAgICB0aGlzLmNsaWNrRXZlbnQuZW1pdCh7IGludGVyYWN0aW9uOiB0aGlzLmludGVyYWN0aW9uLCBzZWxlY3RlZDogdGhpcy5zZWxlY3RlZCwgaWQ6IHRoaXMuaWQgfSk7XG4gIH1cbn1cbiJdfQ==