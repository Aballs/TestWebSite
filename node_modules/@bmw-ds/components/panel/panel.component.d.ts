import { OnInit, ElementRef, OnChanges, EventEmitter, ViewContainerRef, TemplateRef, AfterViewInit } from '@angular/core';
import { PanelContentComponent } from './panel-content.component';
import * as ɵngcc0 from '@angular/core';
export declare class PanelComponent implements OnInit, AfterViewInit, OnChanges {
    childPanelContentComponent: PanelContentComponent;
    icons: TemplateRef<any>;
    labelsDiv: ElementRef;
    threeDots: ElementRef;
    labelWrapper: ElementRef;
    hiddenIconsContainer: ViewContainerRef;
    visibleIconsContainer: ViewContainerRef;
    disabled: boolean;
    opened: boolean;
    nonCollapsible: boolean;
    id: string;
    toggleEvent: EventEmitter<any>;
    overflowing: boolean;
    overflowingMenuState: boolean;
    onResize(): void;
    onKeydown(event: KeyboardEvent): void;
    constructor();
    ngOnInit(): void;
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    checkProperties(): void;
    closeMenu(e: MouseEvent): void;
    resizer(): void;
    hideIconsIfNecessary(showAllFirst?: boolean): void;
    showAllIcons(): void;
    hideLastIcon(): boolean;
    toggle(state?: boolean): void;
    toggleOveflowingMenu(e: MouseEvent, state?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PanelComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PanelComponent, "bmw-panel", never, { "disabled": "disabled"; "opened": "opened"; "nonCollapsible": "nonCollapsible"; "id": "id"; }, { "toggleEvent": "toggleEvent"; }, ["childPanelContentComponent"], ["bmw-panel-label", "bmw-icon-button", "bmw-panel-content"]>;
}

//# sourceMappingURL=panel.component.d.ts.map