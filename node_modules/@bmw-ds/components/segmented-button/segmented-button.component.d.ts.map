{"version":3,"file":"segmented-button.component.d.ts","sources":["segmented-button.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, OnInit, QueryList, ViewContainerRef, ChangeDetectorRef, EventEmitter, ElementRef, ViewRef, TemplateRef, EmbeddedViewRef, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { SegmentedButtonItemComponent } from './segmented-button-item/segmented-button-item.component';\nexport declare class SegmentedButtonComponent implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\n    private cd;\n    private elementRef;\n    private onDestroy$;\n    labelWrapper: ElementRef;\n    segmentButton: ElementRef;\n    dropdownButton: TemplateRef<any>;\n    visibleItemsContainer: ViewContainerRef;\n    childItemsComponent: QueryList<SegmentedButtonItemComponent>;\n    id: string;\n    name: string;\n    disabled: boolean;\n    uncheckable: boolean;\n    updateEvent: EventEmitter<SegmentedButtonComponent>;\n    value: string;\n    showDots: boolean;\n    isMenuClosed: boolean;\n    previousWidth: number;\n    dots: ViewRef;\n    _componentHeight: number;\n    _segmentButtonHeight: number;\n    maxElWidthInDropdown: number;\n    buttonItemClickSubscriptions: Subscription[];\n    visibleElements: {\n        view: EmbeddedViewRef<any>;\n        order: number;\n        item: SegmentedButtonItemComponent;\n    }[];\n    hiddenElements: {\n        view: EmbeddedViewRef<any>;\n        order: number;\n        item: SegmentedButtonItemComponent;\n    }[];\n    _onChange: (value: any) => void;\n    _onTouched: () => any;\n    onResize(): void;\n    onKeydown(event: KeyboardEvent): void;\n    constructor(cd: ChangeDetectorRef, elementRef: ElementRef);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    createView(): void;\n    destroyView(): void;\n    resetFocusedItem(): void;\n    setPreviousItemAsFocused(): void;\n    setNextItemAsFocused(): void;\n    showSelected(value: any): void;\n    _showElement(): void;\n    _hideElement(): void;\n    sortArrays(): void;\n    selectButton(buttonItem: SegmentedButtonItemComponent): void;\n    toggleMenu(state?: boolean): void;\n    getMaxElWidthInDropdown(): void;\n    positionOverflowedItems(): void;\n    get _isOverflow(): boolean;\n    _toggleCheckedChildren(item: SegmentedButtonItemComponent): void;\n    clearOtherChildren(item: SegmentedButtonItemComponent): void;\n    registerOnChange(fn: (value: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    writeValue(value: any): void;\n    setDisabledState(): void;\n}\n"]}